

@online{golang,
  author       = {Google},
  year         = {2021},
  title        = {The Go Programming Language},
  url          = {https://go.dev/},
  month        = Jan,
  lastaccessed = {Jan. 10, 2021}
}


@online{rustlang,
  author       = {Rust Team},
  year         = {2024},
  title        = {Rust: A language empowering everyone to build reliable and efficient software.},
  url          = {https://www.rust-lang.org//},
  month        = Jan,
  lastaccessed = {Jan. 20, 2024}
}

@online{tccommand,
  author       = {Linux manual page},
  year         = {2001},
  title        = {tc(8) — Linux manual page.},
  url          = {https://man7.org/linux/man-pages/man8/tc.8.html},
  month        = Jan,
  lastaccessed = {Sep. 9, 2024}
}


@online{foodtrust,
  author       = {IBM Blockchain},
  year         = {2019},
  title        = {IBM Food Trust. A new era for the world’s food supply.},
  url          = {https://www.ibm.com/blockchain/solutions/food-trust},
  month        = dec,
  lastaccessed = {Dec. 23, 2019}
}



@online{FujitsuBotanicalWaterTechnologies,
  author       = {www.hyperledger.org},
  year         = {2023},
  title        = {Fujitsu and Botanical Water Technologies create the world’s first global water trading platform using Hyperledger Fabric.},
  url          = {https://www.hyperledger.org/case-studies/fujitsu-bwt-case-study},
  month        = dec,
  lastaccessed = {Apr. 19, 2023}
}

@online{MineHubKrypC,
  author       = {www.hyperledger.org},
  year         = {2023},
  title        = {Managing the Metal and Mining Industry’s Supply Chain with Hyperledger Fabric.},
  url          = {https://www.hyperledger.org/wp-content/uploads/2021/12/Hyperledger_CaseStudy_KrypC_Minehub_Printable_121321.pdf},
  month        = dec,
  lastaccessed = {Apr. 19, 2023}
}

@online{openidl,
  author       = {openidl},
  year         = {2023},
  title        = {openID: THE FIRST BLOCKCHAIN NETWORK CONNECTING DATA ACROSS THE INSURANCE INDUSTRY.},
  url          = {https://openidl.org/},
  month        = dec,
  lastaccessed = {Apr. 19, 2023}
}
@online{TechMahindra,
  author       = {www.hyperledger.org},
  year         = {2023},
  title        = {How Tech Mahindra Deployed Hyperledger Fabric for the Digital Transformation of Abu Dhabi’s Land Registry.},
  url          = {https://www.hyperledger.org/case-studies/techmahindra-case-study},
  month        = dec,
  lastaccessed = {Apr. 19, 2023}
}

@online{LedgerDomain,
  author       = {www.hyperledger.org},
  year         = {2020},
  title        = {The Right Rx for the Pharmaceutical Supply Chain? LedgerDomain’s Hyperledger Fabric Solution.},
  url          = {https://www.hyperledger.org/blog/2020/09/22/answering-the-fdas-call-ledgerdomains-hyperledger-fabric-based-bruinchain-improves-tracking-and-tracing-of-prescription-drugs},
  month        = dec,
  lastaccessed = {Apr. 19, 2023}
}

@online{HyperledgerHealthcare,
  author       = {www.hyperledger.org},
  year         = {2021},
  title        = {HYPERLEDGER-POWERED HEALTHCARE SOLUTIONS IN ACTION.},
  url          = {https://www.hyperledger.org/blog/2021/08/24/hyperledger-powered-healthcare-solutions-in-action},
  month        = aug,
  lastaccessed = {Apr. 19, 2024}
}

@online{GSBN,
  author       = {www.hyperledger.org},
  year         = {2022},
  title        = {GSBN: A New Global Trade Operating System
},
  url          = {https://www.hyperledger.org/case-studies/gsbn-case-study},
  month        = dec,
  lastaccessed = {Apr. 19, 2023}
}

@online{taXchain,
  author       = {www.hyperledger.org},
  year         = {2023},
  title        = {taXchain provides a faster, better, cheaper way to complete EU tax forms using Hyperledger Fabric.},
  url          = {https://www.hyperledger.org/wp-content/uploads/2023/01/Hyperledger_CaseStudy_taXchain_Printable_013023.2.pdf},
  month        = dec,
  lastaccessed = {Apr. 19, 2023}
}

@online{pointofsales,
  author       = {www.accenture.com},
  year         = {2022},
  title        = {Edge computing for Store of Tomorrow},
  url          = {https://www.accenture.com/us-en/insights/retail/edge-computing},
  month        = apr,
  lastaccessed = {Apr. 23, 2023}
}

@ARTICLE{8744265,
  author={Liu, Shaoshan and Liu, Liangkai and Tang, Jie and Yu, Bo and Wang, Yifan and Shi, Weisong},
  journal={Proceedings of the IEEE}, 
  title={Edge Computing for Autonomous Driving: Opportunities and Challenges}, 
  year={2019},
  volume={107},
  number={8},
  pages={1697-1716},
  doi={10.1109/JPROC.2019.2915983}
  }

  @ARTICLE{edge_industrialiot,
  author={Qiu, Tie and Chi, Jiancheng and Zhou, Xiaobo and Ning, Zhaolong and Atiquzzaman, Mohammed and Wu, Dapeng Oliver},
  journal={IEEE Communications Surveys \& Tutorials}, 
  title={Edge Computing in Industrial Internet of Things: Architecture, Advances and Challenges}, 
  year={2020},
  volume={22},
  number={4},
  pages={2462-2488},
  doi={10.1109/COMST.2020.3009103}
  }

@ARTICLE{9063670,
  author={Khan, Latif U. and Yaqoob, Ibrar and Tran, Nguyen H. and Kazmi, S. M. Ahsan and Dang, Tri Nguyen and Hong, Choong Seon},
  journal={IEEE Internet of Things Journal}, 
  title={Edge-Computing-Enabled Smart Cities: A Comprehensive Survey}, 
  year={2020},
  volume={7},
  number={10},
  pages={10200-10232},
  doi={10.1109/JIOT.2020.2987070}
  }


@online{balance-transfer,
  author       = {fabric-samples},
  year         = {2019},
  title        = {balance-transfer},
  url          = {https://github.com/hyperledger/fabric-samples/tree/release-1.4/balance-transfer },
  month        = dec,
  lastaccessed = {Dec. 23, 2019}
}

@online{smallbank,
  author       = {Bronw Univ.},
  year         = {2019},
  title        = {SmallBank Benchmark},
  url          = {https://hstore.cs.brown.edu/documentation/deployment/benchmarks/smallbank/},
  month        = dec,
  lastaccessed = {Dec. 23, 2019}
}

@online{ibmblockchain,
  author       = {IBM Blockchain},
  year         = {2019},
  title        = {IBM Blockchain. Now delivering value around the world.
                  .},
  url          = {https://www.ibm.com/blockchain},
  month        = dec,
  lastaccessed = {Dec. 23, 2019}
}

@online{Thornburg01,
  author       = {Harry Thornburg},
  year         = {2001},
  title        = {Introduction to Bayesian Statistics},
  url          = {http://ccrma.stanford.edu/~jos/bayes/bayes.html},
  month        = mar,
  lastaccessed = {March 2, 2005}
}

@online{besu_poa,
  author       = {Hyperledger Besu},
  year         = {2023},
  title        = {Proof of authority consensus},
  url          = {https://besu.hyperledger.org/private-networks/concepts/poa},
  month        = aug,
  lastaccessed = {Aug. 8, 2023}
}

@inproceedings{flexiblebft,
  author    = {Malkhi, Dahlia and Nayak, Kartik and Ren, Ling},
  title     = {Flexible Byzantine Fault Tolerance},
  year      = {2019},
  isbn      = {9781450367479},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3319535.3354225},
  doi       = {10.1145/3319535.3354225},
  abstract  = {This paper introduces Flexible BFT, a new approach for BFT consensus solution design
               revolving around two pillars, stronger resilience and diversity. The first pillar,
               stronger resilience, involves a new fault model called alive-but-corrupt faults. Alive-but-corrupt
               replicas may arbitrarily deviate from the protocol in an attempt to break safety of
               the protocol. However, if they cannot break safety, they will not try to prevent liveness
               of the protocol. Combining alive-but-corrupt faults into the model, Flexible BFT is
               resilient to higher corruption levels than possible in a pure Byzantine fault model.
               The second pillar, diversity, designs consensus solutions whose protocol transcript
               is used to draw different commit decisions under diverse beliefs. With this separation,
               the same Flexible BFT solution supports synchronous and asynchronous beliefs, as well
               as varying resilience threshold combinations of Byzantine and alive-but-corrupt faults.
               At a technical level, Flexible BFT achieves the above results using two new ideas.
               First, it introduces a synchronous BFT protocol in which only the commit step requires
               to know the network delay bound and thus replicas execute the protocol without any
               synchrony assumption. Second, it introduces a notion called Flexible Byzantine Quorums
               by dissecting the roles of different quorums in existing consensus protocols.},
  booktitle = {Proceedings of the 2019 ACM SIGSAC Conference on Computer and Communications Security},
  pages     = {1041–1053},
  numpages  = {13},
  keywords  = {byzantine fault tolerance, synchrony, distributed computing},
  location  = {London, United Kingdom},
  series    = {CCS '19}
}
@article{ByShard,
  author     = {Hellings, Jelle and Sadoghi, Mohammad},
  title      = {ByShard: Sharding in a Byzantine Environment},
  year       = {2021},
  issue_date = {July 2021},
  publisher  = {VLDB Endowment},
  volume     = {14},
  number     = {11},
  issn       = {2150-8097},
  url        = {https://doi.org/10.14778/3476249.3476275},
  doi        = {10.14778/3476249.3476275},
  abstract   = {The emergence of blockchains has fueled the development of resilient systems that can deal with Byzantine failures due to crashes, bugs, or even malicious behavior. Recently, we have also seen the exploration of sharding in these resilient systems, this to provide the scalability required by very large data-based applications. Unfortunately, current sharded resilient systems all use system-specific specialized approaches toward sharding that do not provide the flexibility of traditional sharded data management systems.To improve on this situation, we fundamentally look at the design of sharded resilient systems. We do so by introducing BYSHARD, a unifying framework for the study of sharded resilient systems. Within this framework, we show how two-phase commit and two-phase locking---two techniques central to providing atomicity and isolation in traditional sharded databases---can be implemented efficiently in a Byzantine environment, this with a minimal usage of costly Byzantine resilient primitives. Based on these techniques, we propose eighteen multi-shard transaction processing protocols. Finally, we practically evaluate these protocols and show that each protocol supports high transaction throughput and provides scalability while each striking its own trade-off between throughput, isolation level, latency, and abort rate. As such, our work provides a strong foundation for the development of ACID-compliant general-purpose and flexible sharded resilient data management systems.},
  journal    = {Proc. VLDB Endow.},
  month      = {jul},
  pages      = {2230–2243},
  numpages   = {14}
}
@inproceedings{zhou2019blockchain,
  title        = {A Blockchain based Witness Model for Trustworthy Cloud Service Level Agreement Enforcement},
  author       = {Zhou, Huan and Ouyang, Xue and Ren, Zhijie and Su, Jinshu and de Laat, Cees and Zhao, Zhiming},
  booktitle    = {IEEE INFOCOM 2019-IEEE Conference on Computer Communications},
  pages        = {1567--1575},
  year         = {2019},
  organization = {IEEE}
}


@online{blockchainmarketshare,
  title        = {Blockchain-as-a-Service Market worth 15,455 Million USD by 2023},
  url          = {https://www.marketsandmarkets.com/PressReleases/blockchain-as-a-service.asp},
  lastaccessed = {Aug 3, 2019},
  year         = {2019}
}

@online{manyfacesofsharding,
  title        = {The Many Faces of Sharding for Blockchain Scalability},
  url          = {https://sg.news.yahoo.com/op-ed-many-faces-sharding-185252716.html},
  lastaccessed = {Jan 3, 2023},
  year         = {2018}
}


@misc{Obama08,
  author       = {Barack Obama},
  year         = {2008},
  title        = {A more perfect union},
  howpublished = {Video},
  day          = {5},
  url          = {http://video.google.com/videoplay?docid=6528042696351994555},
  month        = mar,
  lastaccessed = {March 21, 2008},
  note         = {}
}

@misc{JoeScientist001,
  author       = {Joseph Scientist},
  year         = {2009},
  title        = {The fountain of youth},
  note         = {Patent No. 12345, Filed July 1st., 2008, Issued Aug. 9th., 2009},
  url          = {},
  howpublished = {},
  month        = aug,
  lastaccessed = {}
}


@inproceedings{Novak03,
  author       = {Dave Novak},
  title        = {Solder man},
  booktitle    = {ACM SIGGRAPH 2003 Video Review on Animation theater Program: Part I - Vol. 145 (July 27--27, 2003)},
  year         = {2003},
  publisher    = {ACM Press},
  address      = {New York, NY},
  pages        = {4},
  month        = {March 21, 2008},
  doi          = {99.9999/woot07-S422},
  url          = {http://video.google.com/videoplay?docid=6528042696351994555},
  note         = {},
  howpublished = {Video},
  editor       = {},
  volume       = {},
  number       = {},
  series       = {},
  organization = {}
}


@article{Lee05,
  author       = {Newton Lee},
  year         = {2005},
  title        = {Interview with Bill Kinder: January 13, 2005},
  journal      = {Comput. Entertain.},
  eid          = {4},
  volume       = {3},
  number       = {1},
  month        = {Jan.-March},
  doi          = {10.1145/1057270.1057278},
  url          = {http://doi.acm.org/10.1145/1057270.1057278},
  howpublished = {Video},
  note         = {}
}

@article{Rous08,
  author       = {Bernard Rous},
  year         = {2008},
  title        = {The Enabling of Digital Libraries},
  journal      = {Digital Libraries},
  volume       = {12},
  number       = {3},
  month        = jul,
  articleno    = {5},
  doi          = {},
  url          = {},
  howpublished = {},
  note         = {To appear}
}

@article{384253,
  author    = {Werneck,, Renato and Setubal,, Jo\~{a}o and da Conceic\~{a}o,, Arlindo},
  title     = {(old) Finding minimum congestion spanning trees},
  journal   = {J. Exp. Algorithmics},
  volume    = {5},
  year      = {2000},
  issn      = {1084-6654},
  pages     = {11},
  doi       = {http://doi.acm.org/10.1145/351827.384253},
  publisher = {ACM},
  address   = {New York, NY, USA}
}


@article{Werneck:2000:FMC:351827.384253,
  author    = {Werneck, Renato and Setubal, Jo\~{a}o and da Conceic\~{a}o, Arlindo},
  title     = {(new) Finding minimum congestion spanning trees},
  journal   = {J. Exp. Algorithmics},
  volume    = {5},
  month     = dec,
  year      = {2000},
  issn      = {1084-6654},
  articleno = {11},
  url       = {http://portal.acm.org/citation.cfm?id=351827.384253},
  doi       = {10.1145/351827.384253},
  acmid     = {384253},
  publisher = {ACM},
  address   = {New York, NY, USA}
}

@article{1555162,
  author    = {Conti, Mauro and Di Pietro, Roberto and Mancini, Luigi V. and Mei, Alessandro},
  title     = {(old) Distributed data source verification in wireless sensor networks},
  journal   = {Inf. Fusion},
  volume    = {10},
  number    = {4},
  year      = {2009},
  issn      = {1566-2535},
  pages     = {342--353},
  doi       = {http://dx.doi.org/10.1016/j.inffus.2009.01.002},
  publisher = {Elsevier Science Publishers B. V.},
  address   = {Amsterdam, The Netherlands, The Netherlands}
}

@article{Conti:2009:DDS:1555009.1555162,
  author    = {Conti, Mauro and Di Pietro, Roberto and Mancini, Luigi V. and Mei, Alessandro},
  title     = {(new) Distributed data source verification in wireless sensor networks},
  journal   = {Inf. Fusion},
  volume    = {10},
  number    = {4},
  month     = oct,
  year      = {2009},
  issn      = {1566-2535},
  pages     = {342--353},
  numpages  = {12},
  url       = {http://portal.acm.org/citation.cfm?id=1555009.1555162},
  doi       = {10.1016/j.inffus.2009.01.002},
  acmid     = {1555162},
  publisher = {Elsevier Science Publishers B. V.},
  address   = {Amsterdam, The Netherlands, The Netherlands},
  keywords  = {Clone detection, Distributed protocol, Securing data fusion, Wireless sensor networks}
}

@inproceedings{Li:2008:PUC:1358628.1358946,
  author    = {Li, Cheng-Lun and Buyuktur, Ayse G. and Hutchful, David K. and Sant, Natasha B. and Nainwal, Satyendra K.},
  title     = {Portalis: using competitive online interactions to support aid initiatives for the homeless},
  booktitle = {CHI '08 extended abstracts on Human factors in computing systems},
  year      = {2008},
  isbn      = {978-1-60558-012-X},
  location  = {Florence, Italy},
  pages     = {3873--3878},
  numpages  = {6},
  url       = {http://portal.acm.org/citation.cfm?id=1358628.1358946},
  doi       = {10.1145/1358628.1358946},
  acmid     = {1358946},
  publisher = {ACM},
  address   = {New York, NY, USA},
  keywords  = {cscw, distributed knowledge acquisition, incentive design, online games, recommender systems, reputation systems, user studies, virtual community}
}

@book{Hollis:1999:VBD:519964,
  author    = {Hollis, Billy S.},
  title     = {Visual Basic 6: Design, Specification, and Objects with Other},
  year      = {1999},
  isbn      = {0130850845},
  edition   = {1st},
  publisher = {Prentice Hall PTR},
  address   = {Upper Saddle River, NJ, USA}
}


@book{Goossens:1999:LWC:553897,
  author    = {Goossens, Michel and Rahtz, S. P. and Moore, Ross and Sutor, Robert S.},
  title     = {The  Latex Web Companion: Integrating TEX, HTML, and XML},
  year      = {1999},
  isbn      = {0201433117},
  edition   = {1st},
  publisher = {Addison-Wesley Longman Publishing Co., Inc.},
  address   = {Boston, MA, USA}
}

% need to test genres for errant isbn output

% techreport
@techreport{897367,
  author    = {Buss, Jonathan F. and Rosenberg, Arnold L. and Knott, Judson D.},
  title     = {Vertex Types in Book-Embeddings},
  year      = {1987},
  source    = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Aumass_cs%3Ancstrl.umassa_cs%2F%2FUM-CS-1987-018},
  publisher = {University of Massachusetts},
  address   = {Amherst, MA, USA}
}

@techreport{Buss:1987:VTB:897367,
  author    = {Buss, Jonathan F. and Rosenberg, Arnold L. and Knott, Judson D.},
  title     = {Vertex Types in Book-Embeddings},
  year      = {1987},
  source    = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Aumass_cs%3Ancstrl.umassa_cs%2F%2FUM-CS-1987-018},
  publisher = {University of Massachusetts},
  address   = {Amherst, MA, USA}
}

% whole proceedings

@proceedings{Czerwinski:2008:1358628,
  author    = {},
  note      = {General Chair-Czerwinski, Mary and General Chair-Lund, Arnie and Program Chair-Tan, Desney},
  title     = {CHI '08: CHI '08 extended abstracts on Human factors in computing systems},
  year      = {2008},
  isbn      = {978-1-60558-012-X},
  location  = {Florence, Italy},
  order_no  = {608085},
  publisher = {ACM},
  address   = {New York, NY, USA}
}

% phdthesis

@phdthesis{Clarkson:1985:ACP:911891,
  author  = {Clarkson, Kenneth Lee},
  advisor = {Yao, Andrew C.},
  title   = {Algorithms for Closest-Point Problems (Computational Geometry)},
  year    = {1985},
  note    = {AAT 8506171},
  school  = {Stanford University},
  address = {Stanford, CA, USA}
}
% school is being picked up -- but not publisher (which is OK)
% Also -- the title is NOT being output in italics !!! Arrrrgh! - I fixed it. :-)


%%% compare with 'old'
%%% atsign-Phdthesis{Clarkson85,
%%%  author =       "Kenneth L. Clarkson",
%%%  year =         "1985",
%%%  title =        "Algorithms for Closest-Point Problems (Computational Geometry)",
%%%  school =       "Stanford University",
%%%  address =      "Palo Alto, CA",
%%%  note =         "UMI Order Number: AAT 8506171",
%%%  type =         "",
%%%  month =        "",
%%%}

% A bibliography
@article{1984:1040142,
  key        = {{$\!\!$}},
  journal    = {SIGCOMM Comput. Commun. Rev.},
  year       = {1984},
  issn       = {0146-4833},
  volume     = {13-14},
  number     = {5-1},
  issue_date = {January/April 1984},
  publisher  = {ACM},
  address    = {New York, NY, USA}
}


% grinder
@inproceedings{2004:ITE:1009386.1010128,
  key       = {IEEE},
  title     = {IEEE TCSC Executive Committee},
  booktitle = {Proceedings of the IEEE International Conference on Web Services},
  series    = {ICWS '04},
  year      = {2004},
  isbn      = {0-7695-2167-3},
  pages     = {21--22},
  url       = {http://dx.doi.org/10.1109/ICWS.2004.64},
  doi       = {http://dx.doi.org/10.1109/ICWS.2004.64},
  acmid     = {1010128},
  publisher = {IEEE Computer Society},
  address   = {Washington, DC, USA}
}

% div book
@book{Mullender:1993:DS(:302430,
  editor    = {Mullender, Sape},
  title     = {Distributed systems (2nd Ed.)},
  year      = {1993},
  isbn      = {0-201-62427-3},
  publisher = {ACM Press/Addison-Wesley Publishing Co.},
  address   = {New York, NY, USA}
}

% master thesis (as techreport and thesis)

@techreport{Petrie:1986:NAD:899644,
  author    = {Petrie, Charles J.},
  title     = {New Algorithms for Dependency-Directed Backtracking (Master's thesis)},
  year      = {1986},
  source    = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Autexas_cs%3AUTEXAS_CS%2F%2FAI86-33},
  publisher = {University of Texas at Austin},
  address   = {Austin, TX, USA}
}

@mastersthesis{Petrie:1986:NAD:12345,
  author  = {Petrie, Charles J.},
  title   = {New Algorithms for Dependency-Directed Backtracking (Master's thesis)},
  year    = {1986},
  source  = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Autexas_cs%3AUTEXAS_CS%2F%2FAI86-33},
  school  = {University of Texas at Austin},
  address = {Austin, TX, USA}
}




@book{book-minimal,
  author    = {Donald E. Knuth},
  title     = {Seminumerical Algorithms},
  publisher = {Addison-Wesley},
  year      = {1981}
}

% incollection (has an editor, title, and possibly a booktitle)
@incollection{KA:2001,
  author    = {Kong, Wei-Chang},
  title     = {The implementation of electronic commerce in SMEs in Singapore (as Incoll)},
  booktitle = {E-commerce and cultural values},
  year      = {2001},
  isbn      = {1-59140-056-2},
  pages     = {51--74},
  numpages  = {24},
  url       = {http://portal.acm.org/citation.cfm?id=887006.887010},
  acmid     = {887010},
  publisher = {IGI Publishing},
  address   = {Hershey, PA, USA}
}


% with bibfield 'type' before chapter (note no editor)
@inbook{KAGM:2001,
  author    = {Kong, Wei-Chang},
  type      = {Name of Chapter:},
  chapter   = {The implementation of electronic commerce in SMEs in Singapore (Inbook-w-chap-w-type)},
  title     = {E-commerce and cultural values},
  year      = {2001},
  isbn      = {1-59140-056-2},
  pages     = {51--74},
  numpages  = {24},
  url       = {http://portal.acm.org/citation.cfm?id=887006.887010},
  acmid     = {887010},
  publisher = {IGI Publishing},
  address   = {Hershey, PA, USA}
}

%%% Notes! This is because the atsign-INBOOK citation type specifies EITHER
%%% editor or author, but not both. In my experiments with the harvard/dcu
%%% bibtex style (and presumably this applies to other styles too), bibtex
%%% ignores the editor information if author information exists in an
%%% atsign-INBOOK entry. atsign-INCOLLECTION is far more commonly used in my references,
%%% and in the absence of an editor I believe most bibtex styles will just
%%% ommit the editor from the reference - the chapter information will not
%%% end up in the in-text citation as you suggest it should be but at least
%%% there is a place to put the editor if necessary.



% was 'Inbook' -- changed to incollection - (editor is different to author) - need to tell Asad to codify as such.
@incollection{Kong:2002:IEC:887006.887010,
  author    = {Kong, Wei-Chang},
  editor    = {Theerasak Thanasankit},
  title     = {Chapter 9},
  booktitle = {E-commerce and cultural values (Incoll-w-text (chap 9) 'title')},
  year      = {2002},
  address   = {Hershey, PA, USA},
  publisher = {IGI Publishing},
  url       = {http://portal.acm.org/citation.cfm?id=887006.887010},
  pages     = {51--74},
  numpages  = {24},
  acmid     = {887010},
  isbn      = {1-59140-056-2},
  number    = {},
  type      = {},
  month     = {},
  note      = {}
}

% incol when the chapter is 'text' - due to presence of editor (different to author)
@incollection{Kong:2003:IEC:887006.887011,
  author    = {Kong, Wei-Chang},
  title     = {The implementation of electronic commerce in SMEs in Singapore (Incoll)},
  booktitle = {E-commerce and cultural values},
  editor    = {Thanasankit, Theerasak},
  year      = {2003},
  isbn      = {1-59140-056-2},
  pages     = {51--74},
  numpages  = {24},
  url       = {http://portal.acm.org/citation.cfm?id=887006.887010},
  acmid     = {887010},
  publisher = {IGI Publishing},
  address   = {Hershey, PA, USA}
}

% ------ test
%incollection{Kong:2003:IEC:887006.887010,
% author = {Kong, Wei-Chang},
% chapter = {The implementation of electronic commerce in SMEs in Singapore (Incoll-text-in-chap)},
% booktitle = {booktitle E-commerce and cultural values},
% title =   {The title},
% editor = {Thanasankit, Theerasak},
% year = {2003},
% isbn = {1-59140-056-2},
% pages = {51--74},
% numpages = {24},
% url = {http://portal.acm.org/citation.cfm?id=887006.887010},
% acmid = {887010},
% publisher = {IGI Publishing},
% address = {Hershey, PA, USA},
%}


% ---------





% Need inbook with num in chapter

% and inbook with number in chapter
@inbook{Kong:2004:IEC:123456.887010,
  author    = {Kong, Wei-Chang},
  editor    = {Theerasak Thanasankit},
  title     = {E-commerce and cultural values - (InBook-num-in-chap)},
  chapter   = {9},
  year      = {2004},
  address   = {Hershey, PA, USA},
  publisher = {IGI Publishing},
  url       = {http://portal.acm.org/citation.cfm?id=887006.887010},
  pages     = {51--74},
  numpages  = {24},
  acmid     = {887010},
  isbn      = {1-59140-056-2},
  number    = {},
  type      = {},
  month     = {},
  note      = {}
}


% and inbook with text in chapter
@inbook{Kong:2005:IEC:887006.887010,
  author    = {Kong, Wei-Chang},
  editor    = {Theerasak Thanasankit},
  title     = {E-commerce and cultural values (Inbook-text-in-chap)},
  chapter   = {The implementation of electronic commerce in SMEs in Singapore},
  year      = {2005},
  address   = {Hershey, PA, USA},
  publisher = {IGI Publishing},
  url       = {http://portal.acm.org/citation.cfm?id=887006.887010},
  type      = {Chapter:},
  pages     = {51--74},
  numpages  = {24},
  acmid     = {887010},
  isbn      = {1-59140-056-2},
  number    = {},
  month     = {},
  note      = {}
}


% and inbook with a num and type field
@inbook{Kong:2006:IEC:887006.887010,
  author    = {Kong, Wei-Chang},
  editor    = {Theerasak Thanasankit},
  title     = {E-commerce and cultural values (Inbook-num chap)},
  chapter   = {22},
  year      = {2006},
  address   = {Hershey, PA, USA},
  publisher = {IGI Publishing},
  url       = {http://portal.acm.org/citation.cfm?id=887006.887010},
  type      = {Chapter (in type field)},
  pages     = {51--74},
  numpages  = {24},
  acmid     = {887010},
  isbn      = {1-59140-056-2},
  number    = {},
  month     = {},
  note      = {}
}


% and incol coz we have a BLANK chapter - due to presence of editor
%atIncollection{Kong:2006:IEC:887006.887011,
%  author =     {Kong, Wei-Chang},
%  editor =     {Theerasak Thanasankit},
%  title =      "The title"
%  booktitle =  {E-commerce and cultural values (Incol-coz-blank-chap)},
%  year =       {2006},
%  address =    {Hershey, PA, USA},
%  publisher =  {IGI Publishing},
%  url =        {http://portal.acm.org/citation.cfm?id=887006.887010},
%  type =       {Type!},
%  chapter =    {},
%  pages =      {51--74},
%  numpages =   {24},
%  acmid =      {887010},
%  isbn =       {1-59140-056-2},
%  number =     "",
%  month =      "",
%  note =       "",
%}

@article{SaeediMEJ10,
  author  = {Mehdi Saeedi and Morteza Saheb Zamani and Mehdi Sedighi},
  title   = {A library-based synthesis methodology for reversible logic},
  journal = {Microelectron. J.},
  volume  = {41},
  number  = {4},
  month   = apr,
  year    = {2010},
  pages   = {185--194}
}

@article{SaeediJETC10,
  author  = {Mehdi Saeedi and Morteza Saheb Zamani and Mehdi Sedighi and Zahra Sasanian},
  title   = {Synthesis of Reversible Circuit Using Cycle-Based Approach},
  journal = {J. Emerg. Technol. Comput. Syst.},
  volume  = {6},
  number  = {4},
  month   = dec,
  year    = {2010}
}

% Asad's new version
@article{Kirschmer:2010:AEI:1958016.1958018,
  author     = {Kirschmer, Markus and Voight, John},
  title      = {Algorithmic Enumeration of Ideal Classes for Quaternion Orders},
  journal    = {SIAM J. Comput.},
  issue_date = {January 2010},
  volume     = {39},
  number     = {5},
  month      = jan,
  year       = {2010},
  issn       = {0097-5397},
  pages      = {1714--1747},
  numpages   = {34},
  url        = {http://dx.doi.org/10.1137/080734467},
  doi        = {https://doi.org/10.1137/080734467},
  acmid      = {1958018},
  publisher  = {Society for Industrial and Applied Mathematics},
  address    = {Philadelphia, PA, USA},
  keywords   = {ideal classes, maximal orders, number theory, quaternion algebras}
}


% incol due to presence of booktitle
@incollection{Hoare:1972:CIN:1243380.1243382,
  author    = {Hoare, C. A. R.},
  title     = {Chapter II: Notes on data structuring},
  booktitle = {Structured programming (incoll)},
  editor    = {Dahl, O. J. and Dijkstra, E. W. and Hoare, C. A. R.},
  year      = {1972},
  isbn      = {0-12-200550-3},
  pages     = {83--174},
  numpages  = {92},
  url       = {http://portal.acm.org/citation.cfm?id=1243380.1243382},
  acmid     = {1243382},
  publisher = {Academic Press Ltd.},
  address   = {London, UK, UK}
}

% incol due to presence of booktitle
@incollection{Lee:1978:TQA:800025.1198348,
  author    = {Lee, Jan},
  title     = {Transcript of question and answer session},
  booktitle = {History of programming languages I (incoll)},
  editor    = {Wexelblat, Richard L.},
  year      = {1981},
  isbn      = {0-12-745040-8},
  pages     = {68--71},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/800025.1198348},
  doi       = {http://doi.acm.org/10.1145/800025.1198348},
  acmid     = {1198348},
  publisher = {ACM},
  address   = {New York, NY, USA}
}

% incol due to booktitle
@incollection{Dijkstra:1979:GSC:1241515.1241518,
  author    = {Dijkstra, E.},
  title     = {Go to statement considered harmful},
  booktitle = {Classics in software engineering (incoll)},
  year      = {1979},
  isbn      = {0-917072-14-6},
  pages     = {27--33},
  numpages  = {7},
  url       = {http://portal.acm.org/citation.cfm?id=1241515.1241518},
  acmid     = {1241518},
  publisher = {Yourdon Press},
  address   = {Upper Saddle River, NJ, USA}
}

% incol due to booktitle
@incollection{Wenzel:1992:TVA:146022.146089,
  author    = {Wenzel, Elizabeth M.},
  title     = {Three-dimensional virtual acoustic displays},
  booktitle = {Multimedia interface design (incoll)},
  year      = {1992},
  isbn      = {0-201-54981-6},
  pages     = {257--288},
  numpages  = {32},
  url       = {http://portal.acm.org/citation.cfm?id=146022.146089},
  doi       = {10.1145/146022.146089},
  acmid     = {146089},
  publisher = {ACM},
  address   = {New York, NY, USA}
}

% incol due to booktitle
@incollection{Mumford:1987:MES:54905.54911,
  author    = {Mumford, E.},
  title     = {Managerial expert systems and organizational change: some critical research issues},
  booktitle = {Critical issues in information systems research (incoll)},
  year      = {1987},
  isbn      = {0-471-91281-6},
  pages     = {135--155},
  numpages  = {21},
  url       = {http://portal.acm.org/citation.cfm?id=54905.54911},
  acmid     = {54911},
  publisher = {John Wiley \& Sons, Inc.},
  address   = {New York, NY, USA}
}

@book{McCracken:1990:SSC:575315,
  author    = {McCracken, Daniel D. and Golden, Donald G.},
  title     = {Simplified Structured COBOL with Microsoft/MicroFocus COBOL},
  year      = {1990},
  isbn      = {0471514071},
  publisher = {John Wiley \& Sons, Inc.},
  address   = {New York, NY, USA}
}

% Let's include Boris / BBeeton entries  (multi-volume works)

@book{MR781537,
  author     = {H{\"o}rmander, Lars},
  title      = {The analysis of linear partial differential operators. {III}},
  series     = {Grundlehren der Mathematischen Wissenschaften [Fundamental
                Principles of Mathematical Sciences]},
  volume     = {275},
  note       = {Pseudodifferential operators},
  publisher  = {Springer-Verlag},
  address    = {Berlin, Germany},
  year       = {1985},
  pages      = {viii+525},
  isbn       = {3-540-13828-5},
  mrclass    = {35-02 (35Sxx 47G05 58G15)},
  mrnumber   = {781536 (87d:35002a)},
  mrreviewer = {Min You Qi}
}

@book{MR781536,
  author     = {H{\"o}rmander, Lars},
  title      = {The analysis of linear partial differential operators. {IV}},
  series     = {Grundlehren der Mathematischen Wissenschaften [Fundamental
                Principles of Mathematical Sciences]},
  volume     = {275},
  note       = {Fourier integral operators},
  publisher  = {Springer-Verlag},
  address    = {Berlin, Germany},
  year       = {1985},
  pages      = {vii+352},
  isbn       = {3-540-13829-3},
  mrclass    = {35-02 (35Sxx 47G05 58G15)},
  mrnumber   = {781537 (87d:35002b)},
  mrreviewer = {Min You Qi}
}

%%%%%%%%%%%%%%%%%%%%%% Start of Aptara sample bib entries

% acmsmall-sam.bib
@inproceedings{Adya-01,
  author    = {A. Adya and P. Bahl and J. Padhye and A.Wolman and L. Zhou},
  title     = {A multi-radio unification protocol for {IEEE} 802.11 wireless networks},
  booktitle = {Proceedings of the IEEE 1st International Conference on Broadnets Networks (BroadNets'04)},
  publisher = {IEEE},
  address   = {Los Alamitos, CA},
  year      = {2004},
  pages     = {210--217}
}

@article{Akyildiz-01,
  author  = {I. F. Akyildiz and W. Su and Y. Sankarasubramaniam and E. Cayirci},
  title   = {Wireless Sensor Networks: A Survey},
  journal = {Comm. ACM},
  volume  = 38,
  number  = {4},
  year    = {2002},
  pages   = {393--422}
}

@article{Akyildiz-02,
  author  = {I. F. Akyildiz and T. Melodia and K. R. Chowdhury},
  title   = {A Survey on Wireless Multimedia Sensor Networks},
  journal = {Computer Netw.},
  volume  = 51,
  number  = {4},
  year    = {2007},
  pages   = {921--960}
}

@inproceedings{Bahl-02,
  author    = {P. Bahl and R. Chancre and J. Dungeon},
  title     = {{SSCH}: Slotted Seeded Channel Hopping for Capacity Improvement in {IEEE} 802.11 Ad-Hoc Wireless Networks},
  booktitle = {Proceeding of the 10th International Conference on Mobile Computing and Networking (MobiCom'04)},
  publisher = {ACM},
  address   = {New York, NY},
  year      = {2004},
  pages     = {112--117}
}

@misc{CROSSBOW,
  key   = {CROSSBOW},
  title = {{XBOW} Sensor Motes Specifications},
  note  = {http://www.xbow.com},
  year  = 2008
}

@article{Culler-01,
  author    = {D. Culler and D. Estrin and M. Srivastava},
  title     = {Overview of Sensor Networks},
  journal   = {IEEE Comput.},
  volume    = 37,
  number    = {8 (Special Issue on Sensor Networks)},
  publisher = {IEEE},
  address   = {Los Alamitos, CA},
  year      = {2004},
  pages     = {41--49}
}

@misc{Harvard-01,
  key   = {Harvard CodeBlue},
  title = {{CodeBlue}: Sensor Networks for Medical Care},
  note  = {http://www.eecs.harvard.edu/mdw/ proj/codeblue/},
  year  = 2008
}

@inproceedings{Natarajan-01,
  author       = {A. Natarajan and M. Motani and B. de Silva and K. Yap and K. C. Chua},
  title        = {Investigating Network Architectures for Body Sensor Networks},
  booktitle    = {Network Architectures},
  editor       = {G. Whitcomb and P. Neece},
  publisher    = {Keleuven Press},
  address      = {Dayton, OH},
  year         = {2007},
  pages        = {322--328},
  eprint       = {960935712},
  primaryclass = {cs}
}

@techreport{Tzamaloukas-01,
  author      = {A. Tzamaloukas and J. J. Garcia-Luna-Aceves},
  title       = {Channel-Hopping Multiple Access},
  number      = {I-CA2301},
  institution = {Department of Computer Science, University of California},
  address     = {Berkeley, CA},
  year        = {2000}
}

@book{Zhou-06,
  author    = {G. Zhou and J. Lu and C.-Y. Wan and M. D. Yarvis and J. A. Stankovic},
  title     = {Body Sensor Networks},
  publisher = {MIT Press},
  address   = {Cambridge, MA},
  year      = {2008}
}

@mastersthesis{ko94,
  author = {Jacob Kornerup},
  title  = {Mapping Powerlists onto Hypercubes},
  school = {The University of Texas at Austin},
  note   = {(In preparation)},
  year   = {1994}
}
%month = "dec",}

@phdthesis{gerndt:89,
  author  = {Michael Gerndt},
  title   = {Automatic Parallelization for Distributed-Memory
             Multiprocessing Systems},
  school  = {University of Bonn},
  year    = 1989,
  address = {Bonn, Germany},
  month   = dec
}

@article{6:1:1,
  author  = {J. E. {Archer, Jr.} and R. Conway and F. B. Schneider},
  title   = {User recovery and reversal in interactive systems},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume  = {6},
  number  = {1},
  month   = jan,
  year    = 1984,
  pages   = {1--19}
}

@article{7:1:137,
  author  = {D. D. Dunlop and V. R. Basili},
  title   = {Generalizing specifications for uniformly implemented loops},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume  = {7},
  number  = {1},
  month   = jan,
  year    = 1985,
  pages   = {137--158}
}

@article{7:2:183,
  author  = {J. Heering and P. Klint},
  title   = {Towards monolingual programming environments},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume  = {7},
  number  = {2},
  month   = apr,
  year    = 1985,
  pages   = {183--213}
}

@book{knuth:texbook,
  author    = {Donald E. Knuth},
  title     = {The {\TeX{}book}},
  publisher = {Addison-Wesley},
  address   = {Reading, MA.},
  year      = 1984
}

@article{6:3:380,
  author  = {E. Korach and D.  Rotem and N. Santoro},
  title   = {Distributed algorithms for finding centers and medians in networks},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume  = {6},
  number  = {3},
  month   = jul,
  year    = 1984,
  pages   = {380--401}
}

@book{lamport:latex,
  author    = {Leslie Lamport},
  title     = {\it {\LaTeX}: A Document Preparation System},
  publisher = {Addison-Wesley},
  address   = {Reading, MA.},
  year      = 1986
}

@article{7:3:359,
  author  = {F. Nielson},
  title   = {Program transformations in a denotational setting},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume  = {7},
  number  = {3},
  month   = jul,
  year    = 1985,
  pages   = {359--379}
}

%testing
@book{test,
  author    = {Donald E. Knuth},
  title     = {Seminumerical Algorithms},
  volume    = 2,
  series    = {The Art of Computer Programming},
  publisher = {Addison-Wesley},
  address   = {Reading, MA},
  edition   = {2nd},
  month     = {10~} # jan,
  year      = {1981}
}

@inproceedings{reid:scribe,
  author    = {Brian K. Reid},
  title     = {A high-level approach to computer document formatting},
  booktitle = {Proceedings of the 7th Annual Symposium on Principles of
               Programming Languages},
  month     = jan,
  year      = 1980,
  publisher = {ACM},
  address   = {New York},
  pages     = {24--31}
}

@article{Zhou:2010:MMS:1721695.1721705,
  author     = {Zhou, Gang and Wu, Yafeng and Yan, Ting and He, Tian and Huang, Chengdu and Stankovic, John A. and Abdelzaher, Tarek F.},
  title      = {A multifrequency MAC specially designed for wireless sensor network applications},
  journal    = {ACM Trans. Embed. Comput. Syst.},
  issue_date = {March 2010},
  volume     = 9,
  number     = 4,
  month      = {April},
  year       = 2010,
  issn       = {1539-9087},
  pages      = {39:1--39:41},
  articleno  = 39,
  numpages   = 41,
  url        = {http://doi.acm.org/10.1145/1721695.1721705},
  doi        = {10.1145/1721695.1721705},
  acmid      = 1721705,
  publisher  = {ACM},
  address    = {New York, NY, USA},
  keywords   = {Wireless sensor networks, media access control, multi-channel, radio interference, time synchronization}
}


@article{bowman:reasoning,
  author  = {Bowman, Mic and Debray, Saumya K. and Peterson, Larry L.},
  title   = {Reasoning About Naming Systems},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume  = {15},
  number  = {5},
  pages   = {795-825},
  month   = {November},
  year    = {1993},
  doi     = {10.1145/161468.161471}
}

@article{braams:babel,
  author  = {Braams, Johannes},
  title   = {Babel, a Multilingual Style-Option System for Use with LaTeX's Standard Document Styles},
  journal = {TUGboat},
  volume  = {12},
  number  = {2},
  pages   = {291-301},
  month   = {June},
  year    = {1991}
}

@inproceedings{clark:pct,
  author       = {Malcolm Clark},
  title        = {Post Congress Tristesse},
  booktitle    = {TeX90 Conference Proceedings},
  pages        = {84-89},
  organization = {TeX Users Group},
  month        = {March},
  year         = {1991}
}

@article{herlihy:methodology,
  author  = {Herlihy, Maurice},
  title   = {A Methodology for Implementing Highly Concurrent Data Objects},
  journal = {ACM Trans. Program. Lang. Syst.},
  volume  = {15},
  number  = {5},
  pages   = {745-770},
  month   = {November},
  year    = {1993},
  doi     = {10.1145/161468.161469}
}

@inproceedings{HyperledgerFabric,
author = {Androulaki, Elli and Barger, Artem and Bortnikov, Vita and Cachin, Christian and Christidis, Konstantinos and De Caro, Angelo and Enyeart, David and Ferris, Christopher and Laventman, Gennady and Manevich, Yacov and Muralidharan, Srinivasan and Murthy, Chet and Nguyen, Binh and Sethi, Manish and Singh, Gari and Smith, Keith and Sorniotti, Alessandro and Stathakopoulou, Chrysoula and Vukoli\'{c}, Marko and Cocco, Sharon Weed and Yellick, Jason},
title = {Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains},
year = {2018},
isbn = {9781450355841},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3190508.3190538},
doi = {10.1145/3190508.3190538},
abstract = {Fabric is a modular and extensible open-source system for deploying and operating permissioned blockchains and one of the Hyperledger projects hosted by the Linux Foundation (www.hyperledger.org).Fabric is the first truly extensible blockchain system for running distributed applications. It supports modular consensus protocols, which allows the system to be tailored to particular use cases and trust models. Fabric is also the first blockchain system that runs distributed applications written in standard, general-purpose programming languages, without systemic dependency on a native cryptocurrency. This stands in sharp contrast to existing block-chain platforms that require "smart-contracts" to be written in domain-specific languages or rely on a cryptocurrency. Fabric realizes the permissioned model using a portable notion of membership, which may be integrated with industry-standard identity management. To support such flexibility, Fabric introduces an entirely novel blockchain design and revamps the way blockchains cope with non-determinism, resource exhaustion, and performance attacks.This paper describes Fabric, its architecture, the rationale behind various design decisions, its most prominent implementation aspects, as well as its distributed application programming model. We further evaluate Fabric by implementing and benchmarking a Bitcoin-inspired digital currency. We show that Fabric achieves end-to-end throughput of more than 3500 transactions per second in certain popular deployment configurations, with sub-second latency, scaling well to over 100 peers.},
booktitle = {Proceedings of the Thirteenth EuroSys Conference},
articleno = {30},
numpages = {15},
location = {Porto, Portugal},
series = {EuroSys '18}
}


@techreport{volt,
  title       = {Enabling secure and resource-efficient blockchain networks with VOLT},
  author      = {Setty, Srinath and Basu, Soumya and Zhou, Lidong and Roberts, Michael Lowell and Venkatesan, Ramarathnam},
  year        = {2017},
  institution = {Technical Report MSR-TR-2017-38, Microsoft Research}
}


@book{salas:calculus,
  author    = {S.L. Salas and Einar Hille},
  title     = {Calculus: One and Several Variable},
  publisher = {John Wiley and Sons},
  address   = {New York},
  year      = {1978}
}

@manual{Fear05,
  title  = {Publication quality tables in {\LaTeX}},
  author = {Simon Fear},
  month  = {April},
  year   = 2005,
  note   = {\url{http://www.ctan.org/pkg/booktabs}}
}

@manual{Amsthm15,
  title        = {Using the amsthm Package},
  organization = {American Mathematical Society},
  month        = {April},
  year         = 2015,
  note         = {\url{http://www.ctan.org/pkg/amsthm}}
}

@artifactsoftware{R,
  title        = {R: A Language and Environment for Statistical Computing},
  author       = {{R Core Team}},
  organization = {R Foundation for Statistical Computing},
  address      = {Vienna, Austria},
  year         = {2019},
  url          = {https://www.R-project.org/}
}

@artifactdataset{UMassCitations,
  author       = {Sam Anzaroot and Andrew McCallum},
  title        = {{UMass} Citation Field Extraction Dataset},
  year         = 2013,
  url          = {http://www.iesl.cs.umass.edu/data/data-umasscitationfield},
  lastaccessed = {May 27, 2019}
}

% Encoding: UTF-8
@book{adams1995hitchhiker,
  title     = {The Hitchhiker's Guide to the Galaxy},
  author    = {Adams, D.},
  isbn      = {9781417642595},
  url       = {http://books.google.com/books?id=W-xMPgAACAAJ},
  year      = {1995},
  publisher = {San Val}
}


@inproceedings{199362,
  author    = {Stefan Kaestle and Reto Achermann and Roni Haecki and Moritz Hoffmann and Sabela Ramos and Timothy Roscoe},
  title     = {Machine-Aware Atomic Broadcast Trees for Multicores},
  booktitle = {12th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 16)},
  year      = {2016},
  isbn      = {978-1-931971-33-1},
  address   = {Savannah, GA},
  pages     = {33--48},
  url       = {https://www.usenix.org/conference/osdi16/technical-sessions/presentation/kaestle},
  publisher = {{USENIX} Association}
}
@inproceedings{syta2017scalablerandhound,
  title        = {Scalable bias-resistant distributed randomness},
  author       = {Syta, Ewa and Jovanovic, Philipp and Kogias, Eleftherios Kokoris and Gailly, Nicolas and Gasser, Linus and Khoffi, Ismail and Fischer, Michael J and Ford, Bryan},
  booktitle    = {Security and Privacy (SP), 2017 IEEE Symposium on},
  pages        = {444--460},
  year         = {2017},
  organization = {Ieee}
}
@inproceedings{kogias2016enhancingbyzcoin,
  title     = {Enhancing bitcoin security and performance with strong consistency via collective signing},
  author    = {Kogias, Eleftherios Kokoris and Jovanovic, Philipp and Gailly, Nicolas and Khoffi, Ismail and Gasser, Linus and Ford, Bryan},
  booktitle = {25th USENIX Security Symposium (USENIX Security 16)},
  pages     = {279--296},
  year      = {2016}
}

@inproceedings{abraham2018solida,
  title        = {Solida: A blockchain protocol based on reconfigurable Byzantine consensus},
  author       = {Abraham, Ittai and Malkhi, Dahlia and Nayak, Kartik and Ren, Ling and Spiegelman, Alexander},
  booktitle    = {LIPIcs-Leibniz International Proceedings in Informatics},
  volume       = {95},
  year         = {2018},
  organization = {Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}
}
@article{DBLP:journals/corr/AbrahamMNRS16,
  author        = {Ittai Abraham and
                   Dahlia Malkhi and
                   Kartik Nayak and
                   Ling Ren and
                   Alexander Spiegelman},
  title         = {Solidus: An Incentive-compatible Cryptocurrency Based on Permissionless
                   Byzantine Consensus},
  journal       = {CoRR},
  volume        = {abs/1612.02916},
  year          = {2016},
  url           = {http://arxiv.org/abs/1612.02916},
  archiveprefix = {arXiv},
  eprint        = {1612.02916},
  timestamp     = {Wed, 07 Jun 2017 14:41:48 +0200},
  biburl        = {https://dblp.org/rec/bib/journals/corr/AbrahamMNRS16},
  bibsource     = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{chun2007attested,
  title        = {Attested append-only memory: Making adversaries stick to their word},
  author       = {Chun, Byung-Gon and Maniatis, Petros and Shenker, Scott and Kubiatowicz, John},
  booktitle    = {ACM SIGOPS Operating Systems Review},
  volume       = {41},
  number       = {6},
  pages        = {189--204},
  year         = {2007},
  organization = {ACM}
}

@inproceedings{kotla2007zyzzyva,
  title        = {Zyzzyva: speculative byzantine fault tolerance},
  author       = {Kotla, Ramakrishna and Alvisi, Lorenzo and Dahlin, Mike and Clement, Allen and Wong, Edmund},
  booktitle    = {ACM SIGOPS Operating Systems Review},
  volume       = {41},
  number       = {6},
  pages        = {45--58},
  year         = {2007},
  organization = {ACM}
}
@inproceedings{gilad2017algorand,
  title        = {Algorand: Scaling byzantine agreements for cryptocurrencies},
  author       = {Gilad, Yossi and Hemo, Rotem and Micali, Silvio and Vlachos, Georgios and Zeldovich, Nickolai},
  booktitle    = {Proceedings of the 26th Symposium on Operating Systems Principles},
  pages        = {51--68},
  year         = {2017},
  organization = {ACM}
}

@inproceedings{kokoris2018omniledger,
  title        = {Omniledger: A secure, scale-out, decentralized ledger via sharding},
  author       = {Kokoris-Kogias, Eleftherios and Jovanovic, Philipp and Gasser, Linus and Gailly, Nicolas and Syta, Ewa and Ford, Bryan},
  booktitle    = {2018 IEEE Symposium on Security and Privacy (SP)},
  pages        = {583--598},
  year         = {2018},
  organization = {IEEE}
}

@inproceedings{Monoxide,
  author    = {Jiaping Wang and Hao Wang},
  title     = {Monoxide: Scale out Blockchains with Asynchronous Consensus Zones},
  booktitle = {16th {USENIX} Symposium on Networked Systems Design and Implementation ({NSDI} 19)},
  year      = {2019},
  isbn      = {978-1-931971-49-2},
  address   = {Boston, MA},
  pages     = {95--112},
  url       = {https://www.usenix.org/conference/nsdi19/presentation/wang-jiaping},
  publisher = {{USENIX} Association},
  month     = feb
}

@inproceedings{Chainspace,
  author    = {Mustafa Al{-}Bassam and
               Alberto Sonnino and
               Shehar Bano and
               Dave Hrycyszyn and
               George Danezis},
  title     = {Chainspace: {A} Sharded Smart Contracts Platform},
  booktitle = {25th Annual Network and Distributed System Security Symposium, {NDSS}
               2018, San Diego, California, USA, February 18-21, 2018},
  publisher = {The Internet Society},
  year      = {2018},
  url       = {http://wp.internetsociety.org/ndss/wp-content/uploads/sites/25/2018/02/ndss2018\_09-2\_Al-Bassam\_paper.pdf},
  timestamp = {Thu, 17 Jun 2021 16:04:48 +0200},
  biburl    = {https://dblp.org/rec/conf/ndss/Al-BassamSBHD18.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{luu2015scp,
  title   = {SCP: A Computationally-Scalable Byzantine Consensus Protocol For Blockchains.},
  author  = {Luu, Loi and Narayanan, Viswesh and Baweja, Kunal and Zheng, Chaodong and Gilbert, Seth and Saxena, Prateek},
  journal = {IACR Cryptology ePrint Archive},
  volume  = {2015},
  pages   = {1168},
  year    = {2015}
}

@inproceedings{BFTSmart,
  title        = {State machine replication for the masses with BFT-SMaRt},
  author       = {Bessani, Alysson and Sousa, Jo{\~a}o and Alchieri, Eduardo EP},
  booktitle    = {Dependable Systems and Networks (DSN), 2014 44th Annual IEEE/IFIP International Conference on},
  pages        = {355--362},
  year         = {2014},
  organization = {IEEE}
}

@inproceedings{castro1999practical,
  title     = {Practical Byzantine fault tolerance},
  author    = {Castro, Miguel and Liskov, Barbara and others},
  booktitle = {OSDI},
  volume    = {99},
  pages     = {173--186},
  year      = {1999}
}
@article{liu2016scalable,
  title   = {Scalable Byzantine Consensus via Hardware-assisted Secret Sharing},
  author  = {Liu, Jian and Li, Wenting and Karame, Ghassan O and Asokan, N},
  journal = {arXiv preprint arXiv:1612.04997},
  year    = {2016}
}

@inproceedings{liu2016xft,
  title     = {XFT: Practical Fault Tolerance beyond Crashes.},
  author    = {Liu, Shengyun and Viotti, Paolo and Cachin, Christian and Qu{\'e}ma, Vivien and Vukolic, Marko},
  booktitle = {OSDI},
  pages     = {485--500},
  year      = {2016}
}

@inproceedings{porto2015visigoth,
  title        = {Visigoth fault tolerance},
  author       = {Porto, Daniel and Leitao, Joao and Li, Cheng and Clement, Allen and Kate, Aniket and Junqueira, Flavio and Rodrigues, Rodrigo},
  booktitle    = {Proceedings of the Tenth European Conference on Computer Systems},
  pages        = {8},
  year         = {2015},
  organization = {ACM}
}

@inproceedings{kapitza2012cheapbft,
  title        = {CheapBFT: resource-efficient byzantine fault tolerance},
  author       = {Kapitza, R{\"u}diger and Behl, Johannes and Cachin, Christian and Distler, Tobias and Kuhnle, Simon and Mohammadi, Seyed Vahid and Schr{\"o}der-Preikschat, Wolfgang and Stengel, Klaus},
  booktitle    = {Proceedings of the 7th ACM european conference on Computer Systems},
  pages        = {295--308},
  year         = {2012},
  organization = {ACM}
}


@article{veronese2013efficient,
  title     = {Efficient byzantine fault-tolerance},
  author    = {Veronese, Giuliana Santos and Correia, Miguel and Bessani, Alysson Neves and Lung, Lau Cheuk and Verissimo, Paulo},
  journal   = {IEEE Transactions on Computers},
  volume    = {62},
  number    = {1},
  pages     = {16--30},
  year      = {2013},
  publisher = {IEEE}
}
@inproceedings{elastico,
  author    = {Luu, Loi and Narayanan, Viswesh and Zheng, Chaodong and Baweja, Kunal and Gilbert, Seth and Saxena, Prateek},
  title     = {A Secure Sharding Protocol For Open Blockchains},
  booktitle = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
  series    = {CCS '16},
  year      = {2016},
  isbn      = {978-1-4503-4139-4},
  location  = {Vienna, Austria},
  pages     = {17--30},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/2976749.2978389},
  doi       = {10.1145/2976749.2978389},
  acmid     = {2978389},
  publisher = {ACM},
  address   = {New York, NY, USA},
  keywords  = {bitcoin, consensus protocol, sharding}
}

@online{neobft,
  author  = {Neo Co.},
  title   = {Neo's delegated Byzantine fault tolerance},
  year    = 2018,
  url     = {http://docs.neo.org/en-us/basic/consensus/consensus.html},
  urldate = {2018-04-30}
}
@inproceedings{levin2009trinc,
  title     = {TrInc: Small Trusted Hardware for Large Distributed Systems.},
  author    = {Levin, Dave and Douceur, John R and Lorch, Jacob R and Moscibroda, Thomas},
  booktitle = {NSDI},
  volume    = {9},
  pages     = {1--14},
  year      = {2009}
}

@article{cahill2009serializable,
  title={Serializable isolation for snapshot databases},
  author={Cahill, Michael J and R{\"o}hm, Uwe and Fekete, Alan D},
  journal={ACM Transactions on Database Systems (TODS)},
  volume={34},
  number={4},
  pages={1--42},
  year={2009},
  publisher={ACM New York, NY, USA}
}

@article{xubyzantineembedded,
  title   = {Byzantine Agreement Service for Cooperative Embedded Systems},
  author  = {Xu, Wenbo and Wegner, Martin and Wolf, Lars and Kapitza, R{\"u}diger},
  year    = {2017},
  journal = {Workshop on Safety and Security of Intelligent Vehicles}
}

@inproceedings{behl2017hybrids,
  title        = {Hybrids on Steroids: SGX-Based High Performance BFT},
  author       = {Behl, Johannes and Distler, Tobias and Kapitza, R{\"u}diger},
  booktitle    = {Proceedings of the Twelfth European Conference on Computer Systems},
  pages        = {222--237},
  year         = {2017},
  organization = {ACM}
}

@inproceedings{miller2016honey,
  title        = {The honey badger of BFT protocols},
  author       = {Miller, Andrew and Xia, Yu and Croman, Kyle and Shi, Elaine and Song, Dawn},
  booktitle    = {Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security},
  pages        = {31--42},
  year         = {2016},
  organization = {ACM}
}

@article{fischer1985impossibility,
  title     = {Impossibility of distributed consensus with one faulty process},
  author    = {Fischer, Michael J and Lynch, Nancy A and Paterson, Michael S},
  journal   = {Journal of the ACM (JACM)},
  volume    = {32},
  number    = {2},
  pages     = {374--382},
  year      = {1985},
  publisher = {ACM}
}

@article{bracha1985asynchronous,
  title     = {Asynchronous consensus and broadcast protocols},
  author    = {Bracha, Gabriel and Toueg, Sam},
  journal   = {Journal of the ACM (JACM)},
  volume    = {32},
  number    = {4},
  pages     = {824--840},
  year      = {1985},
  publisher = {ACM}
}

@book{cachin2011introduction,
  title     = {Introduction to reliable and secure distributed programming},
  author    = {Cachin, Christian and Guerraoui, Rachid and Rodrigues, Luis},
  year      = {2011},
  publisher = {Springer Science \& Business Media}
}

@article{lamport1982byzantine,
  title     = {The Byzantine generals problem},
  author    = {Lamport, Leslie and Shostak, Robert and Pease, Marshall},
  journal   = {ACM Transactions on Programming Languages and Systems (TOPLAS)},
  volume    = {4},
  number    = {3},
  pages     = {382--401},
  year      = {1982},
  publisher = {ACM}
}

@article{toueg1987fast,
  title     = {Fast distributed agreement},
  author    = {Toueg, Sam and Perry, Kenneth J and Srikanth, TK},
  journal   = {SIAM Journal on Computing},
  volume    = {16},
  number    = {3},
  pages     = {445--457},
  year      = {1987},
  publisher = {SIAM}
}

@inproceedings{cowling2006hq,
  title        = {HQ replication: A hybrid quorum protocol for Byzantine fault tolerance},
  author       = {Cowling, James and Myers, Daniel and Liskov, Barbara and Rodrigues, Rodrigo and Shrira, Liuba},
  booktitle    = {Proceedings of the 7th symposium on Operating systems design and implementation},
  pages        = {177--190},
  year         = {2006},
  organization = {USENIX Association}
}

@inproceedings{guerraoui2010next,
  title        = {The next 700 BFT protocols},
  author       = {Guerraoui, Rachid and Kne{\v{z}}evi{\'c}, Nikola and Qu{\'e}ma, Vivien and Vukoli{\'c}, Marko},
  booktitle    = {Proceedings of the 5th European conference on Computer systems},
  pages        = {363--376},
  year         = {2010},
  organization = {ACM}
}

@inproceedings{clement2009upright,
  title        = {Upright cluster services},
  author       = {Clement, Allen and Kapritsos, Manos and Lee, Sangmin and Wang, Yang and Alvisi, Lorenzo and Dahlin, Mike and Riche, Taylor},
  booktitle    = {Proceedings of the ACM SIGOPS 22nd symposium on Operating systems principles},
  pages        = {277--290},
  year         = {2009},
  organization = {ACM}
}

@inproceedings{wood2011zz,
  title        = {ZZ and the art of practical BFT execution},
  author       = {Wood, Timothy and Singh, Rahul and Venkataramani, Arun and Shenoy, Prashant and Cecchet, Emmanuel},
  booktitle    = {Proceedings of the sixth conference on Computer systems},
  pages        = {123--138},
  year         = {2011},
  organization = {ACM}
}

@inproceedings{abd2005fault,
  title        = {Fault-scalable Byzantine fault-tolerant services},
  author       = {Abd-El-Malek, Michael and Ganger, Gregory R and Goodson, Garth R and Reiter, Michael K and Wylie, Jay J},
  booktitle    = {ACM SIGOPS Operating Systems Review},
  volume       = {39},
  number       = {5},
  pages        = {59--74},
  year         = {2005},
  organization = {ACM}
}

@misc{nakamoto2008bitcoin,
  title  = {Bitcoin: A peer-to-peer electronic cash system},
  author = {Nakamoto, Satoshi},
  year   = {2008}
}

@article{castro2002practical,
  title     = {Practical Byzantine fault tolerance and proactive recovery},
  author    = {Castro, Miguel and Liskov, Barbara},
  journal   = {ACM Transactions on Computer Systems (TOCS)},
  volume    = {20},
  number    = {4},
  pages     = {398--461},
  year      = {2002},
  publisher = {ACM}
}

@article{castro2003base,
  title     = {BASE: Using abstraction to improve fault tolerance},
  author    = {Castro, Miguel and Rodrigues, Rodrigo and Liskov, Barbara},
  journal   = {ACM Transactions on Computer Systems (TOCS)},
  volume    = {21},
  number    = {3},
  pages     = {236--269},
  year      = {2003},
  publisher = {ACM}
}

@article{correia2011byzantine,
  title     = {Byzantine consensus in asynchronous message-passing systems: a survey},
  author    = {Correia, Miguel and Veronese, Giuliana Santos and Neves, Nuno Ferreira and Verissimo, Paulo},
  journal   = {International Journal of Critical Computer-Based Systems},
  volume    = {2},
  number    = {2},
  pages     = {141--161},
  year      = {2011},
  publisher = {Inderscience Publishers}
}

@article{martin2006fast,
  title     = {Fast byzantine consensus},
  author    = {Martin, J-P and Alvisi, Lorenzo},
  journal   = {IEEE Transactions on Dependable and Secure Computing},
  volume    = {3},
  number    = {3},
  pages     = {202--215},
  year      = {2006},
  publisher = {IEEE}
}

@inproceedings{maric2015consensus,
  title        = {Consensus refined},
  author       = {Maric, Ognjen and Sprenger, Christoph and Basin, David},
  booktitle    = {Dependable Systems and Networks (DSN), 2015 45th Annual IEEE/IFIP International Conference on},
  pages        = {391--402},
  year         = {2015},
  organization = {IEEE}
}

@inproceedings{lamport2011byzantizing,
  title        = {Byzantizing Paxos by refinement},
  author       = {Lamport, Leslie},
  booktitle    = {International Symposium on Distributed Computing},
  pages        = {211--224},
  year         = {2011},
  organization = {Springer}
}

@inproceedings{song2008building,
  title        = {The building blocks of consensus},
  author       = {Song, Yee Jiun and Van Renesse, Robbert and Schneider, Fred B and Dolev, Danny},
  booktitle    = {International Conference on Distributed Computing and Networking},
  pages        = {54--72},
  year         = {2008},
  organization = {Springer}
}

@article{guerraoui2006alpha,
  title     = {The alpha of indulgent consensus},
  author    = {Guerraoui, Rachid and Raynal, Michel},
  journal   = {The Computer Journal},
  volume    = {50},
  number    = {1},
  pages     = {53--67},
  year      = {2006},
  publisher = {Oxford University Press}
}

@inproceedings{rutti2010generic,
  title        = {Generic construction of consensus algorithms for benign and byzantine faults},
  author       = {R{\"u}tti, Olivier and Milosevic, Zarko and Schiper, Andr{\'e}},
  booktitle    = {Dependable Systems and Networks (DSN), 2010 IEEE/IFIP International Conference on},
  pages        = {343--352},
  year         = {2010},
  organization = {IEEE}
}

@inproceedings{milosevic2009unifying,
  title        = {Unifying Byzantine consensus algorithms with weak interactive consistency},
  author       = {Milosevic, Zarko and Hutle, Martin and Schiper, Andr{\'e}},
  booktitle    = {International Conference On Principles Of Distributed Systems},
  pages        = {300--314},
  year         = {2009},
  organization = {Springer}
}

@article{cachin2009yet,
  title     = {Yet another visit to Paxos},
  author    = {Cachin, Christian},
  journal   = {IBM Research, Zurich, Switzerland, Tech. Rep. RZ3754},
  year      = {2009},
  publisher = {Citeseer}
}

@inproceedings{biely2013distal,
  title        = {Distal: A framework for implementing fault-tolerant distributed algorithms},
  author       = {Biely, Martin and Delgado, Pamela and Milosevic, Zarko and Schiper, Andre},
  booktitle    = {Dependable Systems and Networks (DSN), 2013 43rd Annual IEEE/IFIP International Conference on},
  pages        = {1--8},
  year         = {2013},
  organization = {IEEE}
}

@article{blockchaindb,
  author     = {El-Hindi, Muhammad and Binnig, Carsten and Arasu, Arvind and Kossmann, Donald and Ramamurthy, Ravi},
  title      = {BlockchainDB: A Shared Database on Blockchains},
  year       = {2019},
  issue_date = {July 2019},
  publisher  = {VLDB Endowment},
  volume     = {12},
  number     = {11},
  issn       = {2150-8097},
  url        = {https://doi.org/10.14778/3342263.3342636},
  doi        = {10.14778/3342263.3342636},
  abstract   = {In this paper we present BlockchainDB, which leverages blockchains as a storage layer
                and introduces a database layer on top that extends blockchains by classical data
                management techniques (e.g., sharding) as well as a standardized query interface to
                facilitate the adoption of blockchains for data sharing use cases. We show that by
                introducing the additional database layer, we are able to improve the performance
                and scalability when using blockchains for data sharing and also massively decrease
                the complexity for organizations intending to use blockchains for data sharing.},
  journal    = {Proc. VLDB Endow.},
  month      = jul,
  pages      = {1597–1609},
  numpages   = {13}
}

@inproceedings{AHL,
  author    = {Hung Dang and
               Tien Tuan Anh Dinh and
               Dumitrel Loghin and
               Ee{-}Chien Chang and
               Qian Lin and
               Beng Chin Ooi},
  editor    = {Peter A. Boncz and
               Stefan Manegold and
               Anastasia Ailamaki and
               Amol Deshpande and
               Tim Kraska},
  title     = {Towards Scaling Blockchain Systems via Sharding},
  booktitle = {Proceedings of the 2019 International Conference on Management of
               Data, {SIGMOD} Conference 2019, Amsterdam, The Netherlands, June 30
               - July 5, 2019},
  pages     = {123--140},
  publisher = {{ACM}},
  year      = {2019},
  url       = {https://doi.org/10.1145/3299869.3319889},
  doi       = {10.1145/3299869.3319889},
  timestamp = {Sun, 25 Oct 2020 22:52:42 +0100},
  biburl    = {https://dblp.org/rec/conf/sigmod/DangDLCLO19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}
@inproceedings{rscoin,
  author    = {George Danezis and
               Sarah Meiklejohn},
  title     = {Centrally Banked Cryptocurrencies},
  booktitle = {23rd Annual Network and Distributed System Security Symposium, {NDSS}
               2016, San Diego, California, USA, February 21-24, 2016},
  publisher = {The Internet Society},
  year      = {2016},
  url       = {http://wp.internetsociety.org/ndss/wp-content/uploads/sites/25/2017/09/centrally-banked-cryptocurrencies.pdf},
  timestamp = {Thu, 17 Jun 2021 16:04:48 +0200},
  biburl    = {https://dblp.org/rec/conf/ndss/DanezisM16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@techreport{biryukov2017guru,
  title       = {Guru: Universal Reputation Module for Distributed Consensus Protocols},
  author      = {Biryukov, Alex and Feher, Daniel and Khovratovich, Dmitry},
  year        = {2017},
  institution = {University of Luxembourg}
}

@article{abraham2016solida,
  title   = {Solida: A Blockchain Protocol Based on Reconfigurable Byzantine Consensus},
  author  = {Abraham, Ittai and Malkhi, Dahlia and Nayak, Kartik and Ren, Ling and Spiegelman, Alexander},
  journal = {arXiv preprint arXiv:1612.02916},
  year    = {2016}
}
@inproceedings{Winery,
  author    = {Oliver Kopp and others},
  title     = {{Winery -- A Modeling Tool for {TOSCA}-based Cloud Applications}},
  booktitle = {Proceedings of 11\textsuperscript{th} International Conference on Service-Oriented Computing (ICSOC'13)},
  year      = {2013},
  volume    = {8274},
  series    = {LNCS},
  pages     = {700--704},
  publisher = {Springer Berlin Heidelberg},
  doi       = {10.1007/978-3-642-45005-1_64},
  keywords  = {Cloud Applications; Modeling; TOSCA; Management; Portability}
}

@article{Binz2009,
  author    = {Tobias Binz and Gerd Breiter and Frank Leymann and Thomas Spatzier},
  title     = {{Portable Cloud Services Using TOSCA}},
  journal   = {IEEE Internet Computing},
  year      = {2012},
  pages     = {80--85},
  volume    = {16},
  number    = {03},
  issn      = {1089-7801},
  doi       = {10.1109/mic.2012.43},
  month     = may,
  publisher = {IEEE Computer Society}
}


@article{2017sokconsensus,
  author        = {{Bano}, S. and {Sonnino}, A. and {Al-Bassam}, M. and {Azouvi}, S. and
                   {McCorry}, P. and {Meiklejohn}, S. and {Danezis}, G.},
  title         = {{Consensus in the Age of Blockchains}},
  journal       = {ArXiv e-prints},
  archiveprefix = {arXiv},
  eprint        = {1711.03936},
  primaryclass  = {cs.CR},
  keywords      = {Computer Science - Cryptography and Security},
  year          = 2017,
  month         = nov,
  adsurl        = {http://adsabs.harvard.edu/abs/2017arXiv171103936B},
  adsnote       = {Provided by the SAO/NASA Astrophysics Data System}
}

@article{herlihy2016enhancing,
  title   = {Enhancing accountability and trust in distributed ledgers},
  author  = {Herlihy, Maurice and Moir, Mark},
  journal = {arXiv preprint arXiv:1606.07490},
  year    = {2016}
}

@inproceedings{popa2011enabling,
  title     = {Enabling Security in Cloud Storage SLAs with CloudProof.},
  author    = {Popa, Raluca Ada and Lorch, Jacob R and Molnar, David and Wang, Helen J and Zhuang, Li},
  booktitle = {USENIX Annual Technical Conference},
  volume    = {242},
  pages     = {355--368},
  year      = {2011}
}

@inproceedings{rapidchain,
  author    = {Zamani, Mahdi and Movahedi, Mahnush and Raykova, Mariana},
  title     = {RapidChain: Scaling Blockchain via Full Sharding},
  year      = {2018},
  isbn      = {9781450356930},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3243734.3243853},
  doi       = {10.1145/3243734.3243853},
  abstract  = {A major approach to overcoming the performance and scalability limitations of current
               blockchain protocols is to use sharding which is to split the overheads of processing
               transactions among multiple, smaller groups of nodes. These groups work in parallel
               to maximize performance while requiring significantly smaller communication, computation,
               and storage per node, allowing the system to scale to large networks. However, existing
               sharding-based blockchain protocols still require a linear amount of communication
               (in the number of participants) per transaction, and hence, attain only partially
               the potential benefits of sharding. We show that this introduces a major bottleneck
               to the throughput and latency of these protocols. Aside from the limited scalability,
               these protocols achieve weak security guarantees due to either a small fault resiliency
               (e.g., 1/8 and 1/4) or high failure probability, or they rely on strong assumptions
               (e.g., trusted setup) that limit their applicability to mainstream payment systems.
               We propose RapidChain, the first sharding-based public blockchain protocol that is
               resilient to Byzantine faults from up to a 1/3 fraction of its participants, and achieves
               complete sharding of the communication, computation, and storage overhead of processing
               transactions without assuming any trusted setup. RapidChain employs an optimal intra-committee
               consensus algorithm that can achieve very high throughputs via block pipelining, a
               novel gossiping protocol for large blocks, and a provably-secure reconfiguration mechanism
               to ensure robustness. Using an efficient cross-shard transaction verification technique,
               our protocol avoids gossiping transactions to the entire network. Our empirical evaluations
               suggest that RapidChain can process (and confirm) more than 7,300 tx/sec with an expected
               confirmation latency of roughly 8.7 seconds in a network of 4,000 nodes with an overwhelming
               time-to-failure of more than 4,500 years.},
  booktitle = {Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security},
  pages     = {931–948},
  numpages  = {18},
  keywords  = {public blockchain protocols, distributed consensus, sharding},
  location  = {Toronto, Canada},
  series    = {CCS '18}
}

@article{ResilientDB,
  author     = {Gupta, Suyash and Rahnama, Sajjad and Hellings, Jelle and Sadoghi, Mohammad},
  title      = {ResilientDB: Global Scale Resilient Blockchain Fabric},
  year       = {2020},
  issue_date = {February 2020},
  publisher  = {VLDB Endowment},
  volume     = {13},
  number     = {6},
  issn       = {2150-8097},
  url        = {https://doi.org/10.14778/3380750.3380757},
  doi        = {10.14778/3380750.3380757},
  abstract   = {Recent developments in blockchain technology have inspired innovative new designs
                in resilient distributed and database systems. At their core, these blockchain applications
                typically use Byzantine fault-tolerant consensus protocols to maintain a common state
                across all replicas, even if some replicas are faulty or malicious. Unfortunately,
                existing consensus protocols are not designed to deal with geo-scale deployments in
                which many replicas spread across a geographically large area participate in consensus.To
                address this, we present the Geo-Scale Byzantine Fault-Tolerant consensus protocol
                (GeoBFT). GeoBFT is designed for excellent scalability by using a topological-aware
                grouping of replicas in local clusters, by introducing parallelization of consensus
                at the local level, and by minimizing communication between clusters. To validate
                our vision of high-performance geo-scale resilient distributed systems, we implement
                GeoBFT in our efficient ResilientDB permissioned blockchain fabric. We show that GeoBFT
                is not only sound and provides great scalability, but also outperforms state-of-the-art
                consensus protocols by a factor of six in geo-scale deployments.},
  journal    = {Proc. VLDB Endow.},
  month      = feb,
  pages      = {868–883},
  numpages   = {16}
}

@inproceedings{feldman2010sporc,
  title     = {SPORC: Group Collaboration using Untrusted Cloud Resources.},
  author    = {Feldman, Ariel J and Zeller, William P and Freedman, Michael J and Felten, Edward W},
  booktitle = {OSDI},
  volume    = {10},
  pages     = {337--350},
  year      = {2010}
}
@article{amiri2019caper,
  title     = {Caper: a cross-application permissioned blockchain},
  author    = {Amiri, Mohammad Javad and Agrawal, Divyakant and Abbadi, Amr El},
  journal   = {Proceedings of the VLDB Endowment},
  volume    = {12},
  number    = {11},
  pages     = {1385--1398},
  year      = {2019},
  publisher = {VLDB Endowment}
}
@article{mahajan2011depot,
  title     = {Depot: Cloud storage with minimal trust},
  author    = {Mahajan, Prince and Setty, Srinath and Lee, Sangmin and Clement, Allen and Alvisi, Lorenzo and Dahlin, Mike and Walfish, Michael},
  journal   = {ACM Transactions on Computer Systems (TOCS)},
  volume    = {29},
  number    = {4},
  pages     = {12},
  year      = {2011},
  publisher = {ACM}
}

@inproceedings{terry2013consistency,
  title        = {Consistency-based service level agreements for cloud storage},
  author       = {Terry, Douglas B and Prabhakaran, Vijayan and Kotla, Ramakrishna and Balakrishnan, Mahesh and Aguilera, Marcos K and Abu-Libdeh, Hussam},
  booktitle    = {Proceedings of the Twenty-Fourth ACM Symposium on Operating Systems Principles},
  pages        = {309--324},
  year         = {2013},
  organization = {ACM}
}

@article{brandenburger2017don,
  title     = {Don’t trust the cloud, verify: Integrity and consistency for cloud object stores},
  author    = {Brandenburger, Marcus and Cachin, Christian and Kne{\v{z}}evi{\'c}, Nikola},
  journal   = {ACM Transactions on Privacy and Security (TOPS)},
  volume    = {20},
  number    = {3},
  pages     = {8},
  year      = {2017},
  publisher = {ACM}
}
@inproceedings{williams2009blind,
  title        = {The Blind Stone Tablet: Outsourcing Durability to Untrusted Parties.},
  author       = {Williams, Peter and Sion, Radu and Shasha, Dennis E},
  booktitle    = {NDSS},
  year         = {2009},
  organization = {Citeseer}
}
@inproceedings{jo2020toward,
  title        = {Toward Trustworthy Blockchain-as-a-Service with Auditing},
  author       = {Jo, Yongrae and Ma, Jeonghyun and Park, Chanik},
  booktitle    = {2020 IEEE 40th International Conference on Distributed Computing Systems (ICDCS)},
  pages        = {765--775},
  year         = {2020},
  organization = {IEEE}
}
@article{ledgerdb,
  title     = {LedgerDB: a centralized ledger database for universal audit and verification},
  author    = {Yang, Xinying and Zhang, Yuan and Wang, Sheng and Yu, Benquan and Li, Feifei and Li, Yize and Yan, Wenyuan},
  journal   = {Proceedings of the VLDB Endowment},
  volume    = {13},
  number    = {12},
  pages     = {3138--3151},
  year      = {2020},
  publisher = {VLDB Endowment}
}

@inproceedings{codit,
  author    = {Jo, Yongrae and Park, Chanik},
  title     = {Codit: Collaborative Auditing for BaaS},
  year      = {2019},
  isbn      = {9781450370295},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3366611.3368145},
  doi       = {10.1145/3366611.3368145},
  booktitle = {Proceedings of the 3rd Workshop on Scalable and Resilient Infrastructures for Distributed Ledgers},
  pages     = {11–12},
  numpages  = {2},
  keywords  = {Blockchain, Auditing, BaaS},
  location  = {Davis, CA, USA},
  series    = {SERIAL ’19}
}


@techreport{setty2017enabling,
  title       = {Enabling secure and resource-efficient blockchain networks with VOLT},
  author      = {Setty, Srinath and Basu, Soumya and Zhou, Lidong and Roberts, Michael Lowell and Venkatesan, Ramarathnam},
  year        = {2017},
  institution = {Technical Report MSR-TR-2017-38, Microsoft Research}
}
@manual{mwe,
  author = {Martin Scharrer},
  title  = {The \texttt{mwe} Package},
  year   = {2017},
  url    = {http://texdoc.net/mwe}
}

@online{cliqueImpl,
  title    = {clique},
  year     = 2023,
  url      = {https://github.com/ethereum/go-ethereum/tree/master/consensus/clique/},
  addendum = {Accessed: 2023-08-10}
}

@online{caliperSimple,
  title    = {simple smart contract},
  year     = 2019,
  url      = {https://github.com/hyperledger/caliper-benchmarks/blob/main/src/ethereum/simple/simple.sol/},
  addendum = {Accessed: 2023-10-29}
}
@online{auraImpl,
  title    = {aura},
  year     = 2023,
  url      = {https://github.com/openethereum/parity-ethereum/},
  addendum = {Accessed: 2023-08-10}
}
@online{redis,
  title    = {RedisDB},
  year     = 2020,
  url      = {https://redis.io/},
  addendum = {Accessed: 2020-01-10}
}
@online{hlforderingservice,
  title    = {The Ordering Service},
  year     = 2020,
  url      = {https://hyperledger-fabric.readthedocs.io/en/release-2.1/orderer/ordering_service.html},
  addendum = {Accessed: 2022-01-24}
}

@online{HyperledgerCaliper,
  title    = {Hyperledger Caliper},
  year     = 2023,
  url      = {https://hyperledger.github.io/caliper/},
  addendum = {Accessed: 2023-08-20}
}

@online{HyperledgerFabricv21,
  title    = {Hyperledger Fabric v2.1.0 branch},
  year     = 2020,
  url      = {https://github.com/hyperledger/fabric/tree/v2.1.0
              /},
  addendum = {Accessed: 2022-01-11}
}

@online{smallbank_go,
  title    = {implementation of SmallBank in GoLang},
  year     = 2021,
  url      = {https://github.com/ooibc88/FabricSharp/blob/master/benchmark/smallbank/smallbank.go/},
  addendum = {Accessed: 2022-01-11}
}


@online{baas1,
  title    = {Blockchain-as-a-Service (BaaS)},
  year     = 2019,
  url      = {https://www.investopedia.com/terms/b/blockchainasaservice-baas.asp},
  addendum = {Accessed: 2019-06-08}
}

@online{Prometheus,
  title    = {Prometheus - Monitoring system \& time series database},
  year     = 2023,
  url      = {https://prometheus.io/},
  addendum = {Accessed: 2023-01-08}
}

@online{grpc,
  title    = {A high performance, open source universal RPC framework},
  year     = 2023,
  url      = {https://grpc.io//},
  addendum = {Accessed: 2023-08-18}
}

@online{tonic,
  title    = {A native gRPC client \& server implementation with async/await support.},
  year     = 2023,
  url      = {https://github.com/hyperium/tonic},
  addendum = {Accessed: 2023-08-18}
}

@online{protobuf,
  title    = {Protocol Buffers. language-neutral, platform-neutral extensible mechanisms for serializing structured data.
},
  year     = 2023,
  url      = {https://protobuf.dev/},
  addendum = {Accessed: 2023-08-18}
}

@online{blst,
  title    = {Multilingual BLS12-381 signature library.},
  year     = 2023,
  url      = {https://github.com/supranational/blst/},
  addendum = {Accessed: 2023-08-18}
}

@online{baas2,
  title    = {Why Blockchain As A Service Solutions Arent Blockchains},
  year     = 2018,
  url      = {https://hackernoon.com/why-blockchain-as-a-service-solutions-arent-blockchains-8d588b1f35ce?gi=a58a498ee442},
  addendum = {Accessed: 2019-06-08}
}

@online{amazonmanagedblockchain,
  title    = {Amazon Managed Blockchain},
  year     = 2019,
  url      = {https://aws.amazon.com/managed-blockchain/},
  addendum = {Accessed: 2019-06-08}
}

@online{vmwareblockchain,
  title    = {VMWare Blockchain Service},
  year     = 2019,
  url      = {https://www.itbusiness.ca/news/vmware-introduces-blockchain-saas-for-enterprises/106637},
  addendum = {Accessed: 2019-06-08}
}

@online{azureblockchain,
  title    = {Azure Blockchain Service},
  year     = 2019,
  url      = {https://azure.microsoft.com/services/blockchain-service/},
  addendum = {Accessed: 2019-06-08}
}

@online{alibabablockchain,
  title    = {Alibaba Cloud Blockchain-as-a-Service},
  year     = 2019,
  url      = {https://www.alibabacloud.com/products/baas},
  addendum = {Accessed: 2020-01-10}
}

@online{sapblockchain,
  title    = {SAP Blockchain as a Service},
  year     = 2019,
  url      = {https://www.sap.com/products/leonardo/blockchain.html},
  addendum = {Accessed: 2019-06-08}
}

@online{upvest,
  title    = {Upvest},
  year     = 2019,
  url      = {https://upvest.co/},
  addendum = {Accessed: 2019-06-08}
}

@online{kaleido,
  title    = {Kaleido},
  year     = 2019,
  url      = {https://kaleido.io/},
  addendum = {Accessed: 2019-06-08}
}

@online{shieldcure,
  title    = {shieldcure},
  year     = 2019,
  url      = {https://www.shieldcure.com/},
  addendum = {Accessed: 2019-06-08}
}

@inproceedings{huang2018capturing,
  title     = {Capturing and enhancing in situ system observability for failure detection},
  author    = {Huang, Peng and Guo, Chuanxiong and Lorch, Jacob R and Zhou, Lidong and Dang, Yingnong},
  booktitle = {13th $\{$USENIX$\}$ Symposium on Operating Systems Design and Implementation ($\{$OSDI$\}$ 18)},
  pages     = {1--16},
  year      = {2018}
}
@article{xiao2019edge,
  title     = {Edge computing security: State of the art and challenges},
  author    = {Xiao, Yinhao and Jia, Yizhen and Liu, Chunchi and Cheng, Xiuzhen and Yu, Jiguo and Lv, Weifeng},
  journal   = {Proceedings of the IEEE},
  volume    = {107},
  number    = {8},
  pages     = {1608--1631},
  year      = {2019},
  publisher = {IEEE}
}
@article{ranaweera2021survey,
  title     = {Survey on multi-access edge computing security and privacy},
  author    = {Ranaweera, Pasika and Jurcut, Anca Delia and Liyanage, Madhusanka},
  journal   = {IEEE Communications Surveys \& Tutorials},
  volume    = {23},
  number    = {2},
  pages     = {1078--1124},
  year      = {2021},
  publisher = {IEEE}
}
@article{nguyen2020blockchain,
  title     = {Blockchain for 5G and beyond networks: A state of the art survey},
  author    = {Nguyen, Dinh C and Pathirana, Pubudu N and Ding, Ming and Seneviratne, Aruna},
  journal   = {Journal of Network and Computer Applications},
  volume    = {166},
  pages     = {102693},
  year      = {2020},
  publisher = {Elsevier}
}
@incollection{luo2020edge,
  title     = {Edge computing integrated with blockchain technologies},
  author    = {Luo, Chuanwen and Xu, Liya and Li, Deying and Wu, Weili},
  booktitle = {Complexity and Approximation},
  pages     = {268--288},
  year      = {2020},
  publisher = {Springer}
}
@article{tahir2020review,
  title     = {A review on application of blockchain in 5G and beyond networks: Taxonomy, field-trials, challenges and opportunities},
  author    = {Tahir, Mohammad and Habaebi, Mohamed Hadi and Dabbagh, Mohammad and Mughees, Amna and Ahad, Abdul and Ahmed, Kazi Istiaque},
  journal   = {IEEE Access},
  volume    = {8},
  pages     = {115876--115904},
  year      = {2020},
  publisher = {IEEE}
}
@article{yang2019integrated,
  title     = {Integrated blockchain and edge computing systems: A survey, some research issues and challenges},
  author    = {Yang, Ruizhe and Yu, F Richard and Si, Pengbo and Yang, Zhaoxin and Zhang, Yanhua},
  journal   = {IEEE Communications Surveys \& Tutorials},
  volume    = {21},
  number    = {2},
  pages     = {1508--1532},
  year      = {2019},
  publisher = {IEEE}
}
@article{mecoffloading,
  title     = {Mobile edge computing: A survey on architecture and computation offloading},
  author    = {Mach, Pavel and Becvar, Zdenek},
  journal   = {IEEE Communications Surveys \& Tutorials},
  volume    = {19},
  number    = {3},
  pages     = {1628--1656},
  year      = {2017},
  publisher = {IEEE}
}
@online{mecwiki,
  title    = {Multi-access edge computing},
  year     = 2021,
  url      = {https://en.wikipedia.org/wiki/Multi-access_edge_computing
              /},
  addendum = {Accessed: 2021-12-31}
}
@online{ENISA5gsec,
  title    = {ENISA threat landscape for 5G Networks},
  year     = 2019,
  url      = {https://www.enisa.europa.eu/publications/enisa-threat-landscape-for-5g-networks/@@download/fullReport},
  addendum = {Accessed: 2021-12-31}
}

@article{ni2020security,
  title     = {Security and privacy for mobile edge caching: challenges and solutions},
  author    = {Ni, Jianbing and Zhang, Kuan and Vasilakos, Athanasios V},
  journal   = {IEEE Wireless Communications},
  year      = {2020},
  publisher = {IEEE}
}
@online{mecsecurityetsi,
  title    = {MEC security: Status of standards support and future evolutions},
  year     = 2021,
  url      = {https://www.etsi.org/images/files/ETSIWhitePapers/ETSI_WP_46-_MEC_security.pdf},
  addendum = {Accessed: 2021-12-31}
}

@online{systemchaincode,
  title    = {System Chaincode Plugins},
  year     = 2019,
  url      = {https://hyperledger-fabric.readthedocs.io/en/release-1.4/systemchaincode.html/},
  addendum = {Accessed: 2019-11-1}
}

@online{5gspeed,
  title    = {5G speed is data transmission in real time},
  year     = 2021,
  url      = {https://www.telekom.com/en/company/details/5g-speed-is-data-transmission-in-real-time-544498/},
  addendum = {Accessed: 2021-10-01}
}

@online{hyperlocal_craigslist,
  title    = {craigslist: jobs, apartments, for sale, services, community, and events},
  year     = 2023,
  url      = {https://www.craigslist.org},
  addendum = {Accessed: 2023-01-03}
}


@online{suinarwhalimpl,
  title    = {Sui Narwhal Implementation},
  year     = 2023,
  url      = {https://github.com/MystenLabs/sui/tree/main/narwhal},
  addendum = {Accessed: 2023-08-18}
}

@online{Sui,
  title    = {Sui delivers the benefits of Web3 with the ease of Web2},
  year     = 2024,
  url      = {https://sui.io/},
  addendum = {Accessed: 2024-12-12}
}

@online{Aptos,
  title    = {Aptos: The World's Most Production-Ready Blockchain},
  year     = 2024,
  url      = {https://aptosfoundation.org/},
  addendum = {Accessed: 2024-12-12}
}

@online{Solana,
  title    = {Solana: Web3 Infrastructure for Everyone},
  year     = 2024,
  url      = {https://solana.com/ko/},
  addendum = {Accessed: 2024-12-12}
}

@online{Ripple,
  title    = {Ripple: Global Payments \& Financial Solutions for Businesses},
  year     = 2024,
  url      = {https://ripple.com/},
  addendum = {Accessed: 2024-12-12}
}

@online{Kaia,
  title    = {Kaia is an EVM Layer 1 public blockchain designed to bring Web3 to millions of users across Asia},
  year     = 2024,
  url      = {https://www.kaia.io/},
  addendum = {Accessed: 2024-12-12}
}

@online{IOTA,
  title    = {An Open, Feeless Data and Value Transfer Protocol},
  year     = 2024,
  url      = {https://www.iota.org/},
  addendum = {Accessed: 2024-12-12}
}


@online{EOS,
  title    = {EOS Network - High-Performance Blockchain for Scalable dApps},
  year     = 2024,
  url      = {https://eosnetwork.com/},
  addendum = {Accessed: 2024-12-12}
}
@online{Tendermint,
  title    = {Building the most powerful tools for distributed networks},
  year     = 2024,
  url      = {https://tendermint.com//},
  addendum = {Accessed: 2024-12-12}
}

@online{Web30,
  title    = {What is Web3?},
  year     = 2024,
  url      = {https://aws.amazon.com/what-is/web3/},
  addendum = {Accessed: 2024-12-12}
}
@online{DecentralizedFinance,
  title    = {Decentralized finance},
  year     = 2024,
  url      = {https://en.wikipedia.org/wiki/Decentralized_finance/},
  addendum = {Accessed: 2024-12-12}
}

@online{zkVoting,
  title    = {Delivering transparency and security in every vote},
  year     = 2024,
  url      = {https://www.zkvoting.com/en},
  addendum = {Accessed: 2024-12-12}
}

@online{blockchaingaming,
  title    = {What Are Blockchain Games?},
  year     = 2024,
  url      = {https://chain.link/education/blockchain-gaming},
  addendum = {Accessed: 2024-12-12}
}

@online{blockchainsupplychain,
  title    = {Blockchain in Supply Chain Management},
  year     = 2024,
  url      = {https://consensys.io/blockchain-use-cases/supply-chain-management},
  addendum = {Accessed: 2024-12-12}
}

@article{HALEEM2021130,
  title    = {Blockchain technology applications in healthcare: An overview},
  journal  = {International Journal of Intelligent Networks},
  volume   = {2},
  pages    = {130-139},
  year     = {2021},
  issn     = {2666-6030},
  doi      = {https://doi.org/10.1016/j.ijin.2021.09.005},
  url      = {https://www.sciencedirect.com/science/article/pii/S266660302100021X},
  author   = {Abid Haleem and Mohd Javaid and Ravi Pratap Singh and Rajiv Suman and Shanay Rab},
  keywords = {Blockchain, Healthcare, Data storage, Clinical trials, Capabilities, Technology},
  abstract = {Blockchain is an emerging technology being applied for creating innovative solutions in various sectors, including healthcare. A Blockchain network is used in the healthcare system to preserve and exchange patient data through hospitals, diagnostic laboratories, pharmacy firms, and physicians. Blockchain applications can accurately identify severe mistakes and even dangerous ones in the medical field. Thus, it can improve the performance, security, and transparency of sharing medical data in the health care system. This technology is helpful to medical institutions to gain insight and enhance the analysis of medical records. In this paper, we studied Blockchain technology and its significant benefits in healthcare. Various Capabilities, Enablers, and Unified Work-Flow Process of Blockchain Technology to support healthcare globally are discussed diagrammatically. Finally, the paper identifies and debates fourteen significant applications of Blockchain for healthcare. Blockchain plays a decisive part in handling deception in clinical trials; here, the potential of this technology offer is to improve data efficiency for healthcare. It can help avoid the fear of data manipulation in healthcare and supports a unique data storage pattern at the highest level of security. It provides versatility, interconnection, accountability, and authentication for data access. For different purposes, health records must be kept safe and confidential. Blockchain helps for the decentralised protection of data in healthcare and avoids specific threats.}
}

@inproceedings{10272496,
  author    = { Yang, Changlin and Liu, Ying and Chin, Kwan-Wu and Wang, Jiguang and Huang, Huawei and Zheng, Zibin },
  booktitle = { 2023 IEEE 43rd International Conference on Distributed Computing Systems (ICDCS) },
  title     = {{ A Novel Two-Layer DAG-Based Reactive Protocol for IoT Data Reliability in Metaverse }},
  year      = {2023},
  volume    = {},
  issn      = {},
  pages     = {25-36},
  abstract  = { Many applications, e.g., digital twins, rely on sensing data from Internet of Things (IoT) networks, which is used to infer event(s) and initiate actions to affect an environment. This gives rise to concerns relating to data integrity and provenance. One possible solution to address these concerns is to employ blockchain. However, blockchain has high resource requirements, thereby making it unsuitable for use on resource-constrained IoT devices. To this end, this paper proposes a novel approach, called two-layer directed acyclic graph (2LDAG), whereby IoT devices only store a digital fingerprint of data generated by their neighbors. Further, it proposes a novel proof-of-path (PoP) protocol that allows an operator or digital twin to verify data in an on-demand manner. The simulation results show 2LDAG has storage and communication cost that is respectively two and three orders of magnitude lower than traditional blockchain and also blockchains that use a DAG structure. Moreover, 2LDAG achieves consensus even when 49% of nodes are malicious. },
  keywords  = {Protocols;Costs;Simulation;Data integrity;Throughput;Blockchains;Digital twins},
  doi       = {10.1109/ICDCS57875.2023.00049},
  url       = {https://doi.ieeecomputersociety.org/10.1109/ICDCS57875.2023.00049},
  publisher = {IEEE Computer Society},
  address   = {Los Alamitos, CA, USA},
  month     = Jul
}

@inproceedings{hussain2014maintaining,
  title        = {Maintaining trust in cloud computing through SLA monitoring},
  author       = {Hussain, Walayat and Hussain, Farookh Khadeer and Hussain, Omar Khadeer},
  booktitle    = {International Conference on Neural Information Processing},
  pages        = {690--697},
  year         = {2014},
  organization = {Springer}
}

@article{zhang2014verifying,
  title     = {Verifying cloud service-level agreement by a third-party auditor},
  author    = {Zhang, Hongli and Ye, Lin and Shi, Jiantao and Du, Xiaojiang and Guizani, Mohsen},
  journal   = {Security and Communication Networks},
  volume    = {7},
  number    = {3},
  pages     = {492--502},
  year      = {2014},
  publisher = {Wiley Online Library}
}

@inproceedings{jayathilaka2017performance,
  title        = {Performance monitoring and root cause analysis for cloud-hosted web applications},
  author       = {Jayathilaka, Hiranya and Krintz, Chandra and Wolski, Rich},
  booktitle    = {Proceedings of the 26th International Conference on World Wide Web},
  pages        = {469--478},
  year         = {2017},
  organization = {International World Wide Web Conferences Steering Committee}
}

@article{olson2018sawtooth,
  title   = {Sawtooth: An Introduction},
  author  = {Olson, Kelly and Bowman, Mic and Mitchell, James and Amundson, Shawn and Middleton, Dan and Montgomery, Cian},
  journal = {The Linux Foundation, Jan},
  year    = {2018}
}

@article{toosi2014interconnected,
  title     = {Interconnected cloud computing environments: Challenges, taxonomy, and survey},
  author    = {Toosi, Adel Nadjaran and Calheiros, Rodrigo N and Buyya, Rajkumar},
  journal   = {ACM Computing Surveys (CSUR)},
  volume    = {47},
  number    = {1},
  pages     = {7},
  year      = {2014},
  publisher = {ACM}
}

@inproceedings{SharPer,
  author    = {Amiri, Mohammad Javad and Agrawal, Divyakant and El Abbadi, Amr},
  title     = {SharPer: Sharding Permissioned Blockchains Over Network Clusters},
  year      = {2021},
  isbn      = {9781450383431},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3448016.3452807},
  doi       = {10.1145/3448016.3452807},
  abstract  = {Scalability is one of the main roadblocks to business adoption of blockchain systems.
               Despite recent intensive research on using sharding techniques to enhance the scalability
               of blockchain systems, existing solutions do not efficiently address cross-shard transactions.
               In this paper, we introduce SharPer, a scalable permissioned blockchain system. In
               SharPer, nodes are clustered and each data shard is replicated on the nodes of a cluster.
               SharPer supports networks consisting of either crash-only or Byzantine nodes. In SharPer,
               the blockchain ledger is formed as a directed acyclic graph and each cluster maintains
               only a view of the ledger. SharPer incorporates decentralized flattened protocols
               to establish cross-shard consensus. The decentralized nature of the cross-shard consensus
               in SharPer enables parallel processing of transactions with nonoverlapping clusters.
               Furthermore, SharPer provides deterministic safety guarantees. The experimental results
               reveal the efficiency of SharPer in terms of performance and scalability especially
               in workloads with a low percentage of cross-shard transactions.},
  booktitle = {Proceedings of the 2021 International Conference on Management of Data},
  pages     = {76–88},
  numpages  = {13},
  keywords  = {sharding, blockchain, scalability, permissioned, consensus},
  location  = {Virtual Event, China},
  series    = {SIGMOD/PODS '21}
}


@inproceedings{monrat2020performance,
  title        = {Performance Evaluation of Permissioned Blockchain Platforms},
  author       = {Monrat, Ahmed Afif and Schel{\'e}n, Olov and Andersson, Karl},
  booktitle    = {2020 IEEE Asia-Pacific Conference on Computer Science and Data Engineering (CSDE)},
  pages        = {1--8},
  year         = {2020},
  organization = {IEEE}
}

@inproceedings{queralta2020enhancing,
  title        = {Enhancing autonomy with blockchain and multi-access edge computing in distributed robotic systems},
  author       = {Queralta, Jorge Pena and Qingqing, Li and Zou, Zhuo and Westerlund, Tomi},
  booktitle    = {2020 Fifth International Conference on Fog and Mobile Edge Computing (FMEC)},
  pages        = {180--187},
  year         = {2020},
  organization = {IEEE}
}
@article{wood2014ethereum,
  title   = {Ethereum: A secure decentralised generalised transaction ledger},
  author  = {Wood, Gavin and others},
  journal = {Ethereum project yellow paper},
  volume  = {151},
  number  = {2014},
  pages   = {1--32},
  year    = {2014}
}

@article{mao2017survey,
  title     = {A survey on mobile edge computing: The communication perspective},
  author    = {Mao, Yuyi and You, Changsheng and Zhang, Jun and Huang, Kaibin and Letaief, Khaled B},
  journal   = {IEEE Communications Surveys \& Tutorials},
  volume    = {19},
  number    = {4},
  pages     = {2322--2358},
  year      = {2017},
  publisher = {IEEE}
}

@article{ssi,
  title     = {Serializable isolation for snapshot databases},
  author    = {Cahill, Michael J and R{\"o}hm, Uwe and Fekete, Alan D},
  journal   = {ACM Transactions on Database Systems (TODS)},
  volume    = {34},
  number    = {4},
  pages     = {1--42},
  year      = {2009},
  publisher = {ACM New York, NY, USA}
}

@inproceedings{FabAsset,
  author    = {Hong, Sangwon and Noh, Yoongdoo and Hwang, Jeyoung and Park, Chanik},
  booktitle = {2020 IEEE 40th International Conference on Distributed Computing Systems (ICDCS)},
  title     = {FabAsset: Unique Digital Asset Management System for Hyperledger Fabric},
  year      = {2020},
  volume    = {},
  number    = {},
  pages     = {1269-1274},
  keywords  = {Protocols;Distributed ledger;Blockchain;Fabrics;Software;Asset management;Standards;permissioned blockchain;decentralized application;smart contract;non-fungible token},
  doi       = {10.1109/ICDCS47774.2020.00163}
}

@article{BlockchainAppCertificate,
  author   = {Hasan, Haya R. and Salah, Khaled and Jayaraman, Raja and Arshad, Junaid and Yaqoob, Ibrar and Omar, Mohammed and Ellahham, Samer},
  journal  = {IEEE Access},
  title    = {Blockchain-Based Solution for COVID-19 Digital Medical Passports and Immunity Certificates},
  year     = {2020},
  volume   = {8},
  number   = {},
  pages    = {222093-222108},
  keywords = {COVID-19;Blockchain;Smart contracts;Diseases;Testing;Immune system;Medical diagnostic imaging;COVID-19;blockchain;Ethereum;smart contracts;security;tracking;traceability;immunity certificates;digital medical passports},
  doi      = {10.1109/ACCESS.2020.3043350}
}

@article{Vehicloak,
  author   = {Guo, Yihao and Wan, Zhiguo and Cui, Hui and Cheng, Xiuzhen and Dressler, Falko},
  journal  = {IEEE Transactions on Mobile Computing},
  title    = {Vehicloak: A Blockchain-Enabled Privacy-Preserving Payment Scheme for Location-Based Vehicular Services},
  year     = {2023},
  volume   = {22},
  number   = {11},
  pages    = {6830-6842},
  keywords = {Privacy;Blockchains;Security;Task analysis;Smart contracts;Mobile computing;Dedicated short range communication;Blockchain;zk-SNARK;group signature;location privacy;smart contract},
  doi      = {10.1109/TMC.2022.3193165}
}

@article{jo2019blocklot,
  title   = {BlockLot: Blockchain based verifiable lottery},
  author  = {Jo, Yongrae and Park, Chanik},
  journal = {arXiv preprint arXiv:1912.00642},
  year    = {2019}
}


@inproceedings{Blurring,
author = {Sharma, Ankur and Schuhknecht, Felix Martin and Agrawal, Divya and Dittrich, Jens},
title = {Blurring the Lines between Blockchains and Database Systems: The Case of Hyperledger Fabric},
year = {2019},
isbn = {9781450356435},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3299869.3319883},
doi = {10.1145/3299869.3319883},
abstract = {Within the last few years, a countless number of blockchain systems have emerged on the market, each one claiming to revolutionize the way of distributed transaction processing in one way or the other. Many blockchain features, such as byzantine fault tolerance, are indeed valuable additions in modern environments. However, despite all the hype around the technology, many of the challenges that blockchain systems have to face are fundamental transaction management problems. These are largely shared with traditional database systems, which have been around for decades already. These similarities become especially visible for systems, that blur the lines between blockchain systems and classical database systems. A great example of this is Hyperledger Fabric, an open-source permissioned blockchain system under development by IBM. By implementing parallel transaction processing, Fabric's workflow is highly motivated by optimistic concurrency control mechanisms in classical database systems. This raises two questions: (1)~Which conceptual similarities and differences do actually exist between a system such as Fabric and a classical distributed database system? (2)~Is it possible to improve on the performance of Fabric by transitioning technology from the database world to blockchains and thus blurring the lines between these two types of systems even further? To tackle these questions, we first explore Fabric from the perspective of database research, where we observe weaknesses in the transaction pipeline. We then solve these issues by transitioning well-understood database concepts to Fabric, namely transaction reordering as well as early transaction abort. Our experimental evaluation under the Smallbank benchmark as well as under a custom workload shows that our improved version Fabric++ significantly increases the throughput of successful transactions over the vanilla version by up to a factor of 12x, while decreasing the average latency to almost half.},
booktitle = {Proceedings of the 2019 International Conference on Management of Data},
pages = {105–122},
numpages = {18},
keywords = {ledger, transactions, distributed systems, fabric, blockchain, information systems, hyperledger, concurrenct control, distributed ledger},
location = {Amsterdam, Netherlands},
series = {SIGMOD '19}
}
@inproceedings{WhyDoMyBlockchainTransactionsFail,
author = {Chacko, Jeeta Ann and Mayer, Ruben and Jacobsen, Hans-Arno},
title = {Why Do My Blockchain Transactions Fail? A Study of Hyperledger Fabric},
year = {2021},
isbn = {9781450383431},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3448016.3452823},
doi = {10.1145/3448016.3452823},
abstract = {Permissioned blockchain systems promise to provide both decentralized trust and privacy. Hyperledger Fabric is currently one of the most wide-spread permissioned blockchain systems and is heavily promoted both in industry and academia. Due to its optimistic concurrency model, the transaction failure rates in Fabric can become a bottleneck. While there is active research to reduce failures, there is a lack of understanding on their root cause and, consequently, a lack of guidelines on how to configure Fabric optimally for different scenarios. To close this gap, in this paper, we first introduce a formal definition of the different types of transaction failures in Fabric. Then, we develop a comprehensive testbed and benchmarking system, HyperLedgerLab, along with four different chaincodes that represent realistic use cases and a chaincode/workload generator. Using HyperLedgerLab, we conduct exhaustive experiments to analyze the impact of different parameters of Fabric such as block size, endorsement policies, and others, on transaction failures. We further analyze three recently proposed optimizations from the literature, Fabric++, Streamchain and FabricSharp, and evaluate under which conditions they reduce the failure rates. Finally, based on our results, we provide recommendations for Fabric practitioners on how to configure the system and also propose new research directions.},
booktitle = {Proceedings of the 2021 International Conference on Management of Data},
pages = {221–234},
numpages = {14},
keywords = {blockchains, concurrency, transaction failures},
location = {Virtual Event, China},
series = {SIGMOD '21}
}
@inproceedings{FabricSharp,
author = {Ruan, Pingcheng and Loghin, Dumitrel and Ta, Quang-Trung and Zhang, Meihui and Chen, Gang and Ooi, Beng Chin},
title = {A Transactional Perspective on Execute-Order-Validate Blockchains},
year = {2020},
isbn = {9781450367356},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3318464.3389693},
doi = {10.1145/3318464.3389693},
abstract = {Smart contracts have enabled blockchain systems to evolve from simple cryptocurrency platforms to general transactional systems. A new architecture called execute-order-validate has been proposed in Hyperledger Fabric to support parallel transactions. However, this architecture might render many invalid transactions when serializing them. This problem is further exaggerated as the block formation rate is inherently limited due to other factors beside data processing, such as cryptography and consensus. Inspired by optimistic concurrency control in modern databases, we propose a novel method to enhance the execute-order-validate architecture, by reordering transactions to reduce the abort rate. In contrast to existing blockchains that adopt database's preventive approaches which might over-abort serializable transactions, our method is theoretically more fine-grained: unserializable transactions are aborted before reordering and the rest are guaranteed to be serializable. We implement our method in two blockchains respectively, FabricSharp on top of Hyperledger Fabric, and FastFabricSharp on top of FastFabric. We compare the performance of FabricSharp with vanilla Fabric and three related systems, two of which are respectively implemented with one standard and one state-of-the-art concurrency control techniques from databases. The results demonstrate that FabricSharp achieves 25% higher throughput compared to the other systems in nearly all experimental scenarios. Moreover, the FastFabricSharp's improvement on FastFabric is up to 66%.},
booktitle = {Proceedings of the 2020 ACM SIGMOD International Conference on Management of Data},
pages = {543–557},
numpages = {15},
keywords = {blockchain, transaction, database, concurrency control},
location = {Portland, OR, USA},
series = {SIGMOD '20}
}
@inproceedings{FabricCRDT,
author = {Nasirifard, Pezhman and Mayer, Ruben and Jacobsen, Hans-Arno},
title = {FabricCRDT: A Conflict-Free Replicated Datatypes Approach to Permissioned Blockchains},
year = {2019},
isbn = {9781450370097},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3361525.3361540},
doi = {10.1145/3361525.3361540},
abstract = {With the increased adaption of blockchain technologies, permissioned blockchains such as Hyperledger Fabric provide a robust ecosystem for developing production-grade decentralized applications. However, the additional latency between executing and committing transactions, due to Fabric's three-phase transaction lifecycle of Execute-Order-Validate (EOV), is a potential scalability bottleneck. The added latency increases the probability of concurrent updates on the same keys by different transactions, leading to transaction failures caused by Fabric's concurrency control mechanism. The transaction failures increase the application development complexity and decrease Fabric's throughput. Conflict-free Replicated Datatypes (CRDTs) provide a solution for merging and resolving conflicts in the presence of concurrent updates. In this work, we introduce FabricCRDT, an approach for integrating CRDTs to Fabric. Our evaluations show that in general, FabricCRDT offers higher throughput of successful transactions than Fabric, while successfully committing and merging all conflicting transactions without any failures.},
booktitle = {Proceedings of the 20th International Middleware Conference},
pages = {110–122},
numpages = {13},
keywords = {Hyperledger Fabric, Eventual Consistency, Blockchain, Multi-Version Concurrency Control, CRDT},
location = {Davis, CA, USA},
series = {Middleware '19}
}
@inproceedings{amiri2019parblockchain,
  title        = {Parblockchain: Leveraging transaction parallelism in permissioned blockchain systems},
  author       = {Amiri, Mohammad Javad and Agrawal, Divyakant and El Abbadi, Amr},
  booktitle    = {2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)},
  pages        = {1337--1347},
  year         = {2019},
  organization = {IEEE}
}

@article{wang2020sok,
  title   = {SoK: Diving into DAG-based blockchain systems},
  author  = {Wang, Qin and Yu, Jiangshan and Chen, Shiping and Xiang, Yang},
  journal = {arXiv preprint arXiv:2012.06128},
  year    = {2020}
}

@article{corbett2013spanner,
  title     = {Spanner: Google’s globally distributed database},
  author    = {Corbett, James C and Dean, Jeffrey and Epstein, Michael and Fikes, Andrew and Frost, Christopher and Furman, Jeffrey John and Ghemawat, Sanjay and Gubarev, Andrey and Heiser, Christopher and Hochschild, Peter and others},
  journal   = {ACM Transactions on Computer Systems (TOCS)},
  volume    = {31},
  number    = {3},
  pages     = {1--22},
  year      = {2013},
  publisher = {ACM New York, NY, USA}
}

@article{bernstein1983multiversion,
  title     = {Multiversion concurrency control—theory and algorithms},
  author    = {Bernstein, Philip A and Goodman, Nathan},
  journal   = {ACM Transactions on Database Systems (TODS)},
  volume    = {8},
  number    = {4},
  pages     = {465--483},
  year      = {1983},
  publisher = {ACM New York, NY, USA}
}

@article{yu2020survey,
  title={Survey: Sharding in blockchains},
  author={Yu, Guangsheng and Wang, Xu and Yu, Kan and Ni, Wei and Zhang, J Andrew and Liu, Ren Ping},
  journal={IEEE Access},
  volume={8},
  pages={14155--14181},
  year={2020},
  publisher={IEEE}
}

@inproceedings{zeus,
author = {Katsarakis, Antonios and Ma, Yijun and Tan, Zhaowei and Bainbridge, Andrew and Balkwill, Matthew and Dragojevic, Aleksandar and Grot, Boris and Radunovic, Bozidar and Zhang, Yongguang},
title = {Zeus: Locality-Aware Distributed Transactions},
year = {2021},
isbn = {9781450383349},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3447786.3456234},
doi = {10.1145/3447786.3456234},
abstract = {State-of-the-art distributed in-memory datastores (FaRM, FaSST, DrTM) provide strongly-consistent distributed transactions with high performance and availability. Transactions in those systems are fully general; they can atomically manipulate any set of objects in the store, regardless of their location. To achieve this, these systems use complex distributed transactional protocols. Meanwhile, many workloads have a high degree of locality. For such workloads, distributed transactions are an overkill as most operations only access objects located on the same server - if sharded appropriately.In this paper, we show that for these workloads, a single-node transactional protocol combined with dynamic object re-sharding and asynchronously pipelined replication can provide the same level of generality with better performance, simpler protocols, and lower developer effort. We present Zeus, an in-memory distributed datastore that provides general transactions by acquiring all objects involved in the transaction to the same server and executing a single-node transaction on them. Zeus is fault-tolerant and strongly-consistent. At the heart of Zeus is a reliable dynamic object sharding protocol that can move 250K objects per second per server, allowing Zeus to process millions of transactions per second and outperform more traditional distributed transactions on a wide range of workloads that exhibit locality.},
booktitle = {Proceedings of the Sixteenth European Conference on Computer Systems},
pages = {145–161},
numpages = {17},
keywords = {dynamic sharding, transactions, replication, locality, strict serializability, pipelining, availability},
location = {Online Event, United Kingdom},
series = {EuroSys '21}
}

@INPROCEEDINGS{BrokerChain,
author={Huang, Huawei and Peng, Xiaowen and Zhan, Jianzhou and Zhang, Shenyang and Lin, Yue and Zheng, Zibin and Guo, Song},  
booktitle={IEEE INFOCOM 2022 - IEEE Conference on Computer Communications},
title={BrokerChain: A Cross-Shard Blockchain Protocol for Account/Balance-based State Sharding},
year={2022},
volume={},
number={},
pages={1968-1977},
doi={10.1109/INFOCOM48880.2022.9796859}
}

@inbook{ShardScheduler,
author = {Kr\'{o}l, Micha\l{} and Ascigil, Onur and Rene, Sergi and Sonnino, Alberto and Al-Bassam, Mustafa and Rivi\`{e}re, Etienne},
title = {Shard Scheduler: Object Placement and Migration in Sharded Account-Based Blockchains},
year = {2021},
isbn = {9781450390828},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3479722.3480989},
abstract = {We propose Shard Scheduler, a system for object placement and migration in account-based sharded blockchains. Our system calculates optimal placement and decides on object migrations across shards. It supports complex multi-account transactions caused by smart contracts. Placement and migration decisions made by Shard Scheduler are fully deterministic, verifiable, and can be made part of the consensus protocol. Shard Scheduler reduces the number of costly cross-shard transactions, ensures balanced load distribution and maximizes the number of processed transactions for the blockchain as a whole. To this end, it leverages a novel incentive model motivating miners to maximize the global throughput of the entire blockchain rather than the throughput of a specific shard. In our simulations, Shard Scheduler can reduce the number of costly cross-shard transactions by half while ensuring equal load and increasing throughput more than 2 fold when using 60 shards. We also implement and evaluate Shard Scheduler on Chainspace, more than doubling its throughput and reducing user-perceived latency by 70% when using 10 shards.},
booktitle = {Proceedings of the 3rd ACM Conference on Advances in Financial Technologies},
pages = {43–56},
numpages = {14}
}

@INPROCEEDINGS {optchain,
author = {L. N. Nguyen and T. T. Nguyen and T. N. Dinh and M. T. Thai},
booktitle = {2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)},
title = {OptChain: Optimal Transactions Placement for Scalable Blockchain Sharding},
year = {2019},
volume = {},
issn = {},
pages = {525-535},
keywords = {bitcoin;throughput;software;silicon},
doi = {10.1109/ICDCS.2019.00059},
url = {https://doi.ieeecomputersociety.org/10.1109/ICDCS.2019.00059},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
month = {jul}
}
@INPROCEEDINGS {txallo,
author = {Y. Zhang and S. Pan and J. Yu},
booktitle = {2023 IEEE 39th International Conference on Data Engineering (ICDE)},
title = {TxAllo: Dynamic Transaction Allocation in Sharded Blockchain Systems},
year = {2023},
volume = {},
issn = {},
pages = {721-733},
abstract = {The scalability problem has been one of the most significant barriers limiting the adoption of blockchains. Blockchain sharding is a promising approach to this problem. However, the sharding mechanism introduces a significant number of cross-shard transactions, which are expensive to process.This paper focuses on the transaction allocation problem to reduce the number of cross-shard transactions for better scalability. In particular, we systematically formulate the transaction allocation problem and convert it to the community detection problem on a graph. A deterministic and fast allocation scheme TxAllo is proposed to dynamically infer the allocation of accounts and their associated transactions. It directly optimizes the system throughput, considering both the number of cross-shard transactions and the workload balance among shards.We evaluate the performance of TxAllo on an Ethereum dataset containing over 91 million transactions. Our evaluation results show that for a blockchain with 60 shards, TxAllo reduces the cross-shard transaction ratio from 98% (by using traditional hash-based allocation) to about 12%. In the meantime, the workload balance is well maintained. Compared with other methods, the execution time of TxAllo is almost negligible. For example, when updating the allocation every hour, the execution of TxAllo only takes 0.5 seconds on average, whereas other concurrent works, such as BrokerChain (INFOCOM’22) leveraging the classic METIS method, require 422 seconds.},
keywords = {sharding;limiting;scalability;throughput;dynamic scheduling;data engineering;blockchains},
doi = {10.1109/ICDE55515.2023.00390},
url = {https://doi.ieeecomputersociety.org/10.1109/ICDE55515.2023.00390},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
month = {apr}
}

@INPROCEEDINGS{dypart,  author={Li, Bijun and Xu, Wenbo and Kapitza, Rüdiger},  booktitle={2018 48th Annual IEEE/IFIP International Conference on Dependable Systems and Networks Workshops (DSN-W)},   title={Dynamic State Partitioning in Parallelized Byzantine Fault Tolerance},   year={2018},  volume={},  number={},  pages={158-163},  doi={10.1109/DSN-W.2018.00056}}


@ARTICLE{spaceawaresharding,  author={Mizrahi, Avi and Rottenstreich, Ori},  journal={IEEE Transactions on Network and Service Management},   title={Blockchain State Sharding With Space-Aware Representations},   year={2021},  volume={18},  number={2},  pages={1571-1583},  doi={10.1109/TNSM.2020.3031355}
}

@InProceedings{hlfchannels,
author="Androulaki, Elli
and Cachin, Christian
and De Caro, Angelo
and Kokoris-Kogias, Eleftherios",
editor="Lopez, Javier
and Zhou, Jianying
and Soriano, Miguel",
title="Channels: Horizontal Scaling and Confidentiality on Permissioned Blockchains",
booktitle="Computer Security",
year="2018",
publisher="Springer International Publishing",
address="Cham",
pages="111--131",
abstract="Sharding, or partitioning the system's state so that different subsets of participants handle it, is a proven approach to building distributed systems whose total capacity scales horizontally with the number of participants. Many distributed ledgers have adopted this approach to increase their performance, however, they focus on the permissionless setting that assumes the existence of a strong adversary. In this paper, we deploy channels for permissioned blockchains. Our first contribution is to adapt sharding on asset-management applications for the permissioned setting, while preserving liveness and safety even on transactions spanning across-channels. Our second contribution is to leverage channels as a confidentiality boundary, enabling different organizations and consortia to preserve their privacy within their channels and still be part of a bigger collaborative ecosystem. To make our system concrete we map it on top of Hyperledger Fabric.",
isbn="978-3-319-99073-6"
}

@article{xi2021comprehensive,
  title={A Comprehensive Survey on Sharding in Blockchains},
  author={Xi, Jinwen and Zou, Shihong and Xu, Guoai and Guo, Yanhui and Lu, Yueming and Xu, Jiuyun and Zhang, Xuanwen},
  journal={Mobile Information Systems},
  volume={2021},
  year={2021},
  publisher={Hindawi}
}

@inproceedings{noor2021portkey,
  title={Portkey: Adaptive Key-Value Placement over Dynamic Edge Networks},
  author={Noor, Joseph and Srivastava, Mani and Netravali, Ravi},
  booktitle={Proceedings of the ACM Symposium on Cloud Computing},
  pages={197--213},
  year={2021}
}

@inproceedings{dast,
author = {Chen, Xusheng and Song, Haoze and Jiang, Jianyu and Ruan, Chaoyi and Li, Cheng and Wang, Sen and Zhang, Gong and Cheng, Reynold and Cui, Heming},
title = {Achieving Low Tail-Latency and High Scalability for Serializable Transactions in Edge Computing},
year = {2021},
isbn = {9781450383349},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3447786.3456238},
doi = {10.1145/3447786.3456238},
abstract = {A distributed database utilizing the wide-spread edge computing servers to provide low-latency data access with the serializability guarantee is highly desirable for emerging edge computing applications. In an edge database, nodes are divided into regions, and a transaction can be categorized as intra-region (IRT) or cross-region (CRT) based on whether it accesses data in different regions. In addition to serializability, we insist that a practical edge database should provide low tail latency for both IRTs and CRTs, and such low latency must be scalable to a large number of regions. Unfortunately, none of existing geo-replicated serializable databases or edge databases can meet such requirements.In this paper, we present Dast (Decentralized Anticipate and STretch), the first edge database that can meet the stringent performance requirements with serializability. Our key idea is to order transactions by anticipating when they are ready to execute: Dast binds an IRT to the latest timestamp and binds a CRT to a future timestamp to avoid the coordination of CRTs blocking IRTs. Dast also carries a new stretchable clock abstraction to tolerate inaccurate anticipations and to handle cross-region data reads. Our evaluation shows that, compared to three relevant serializable databases, Dast's 99-percentile latency was 87.9\%~93.2\% lower for IRTs and 27.7\%~70.4\% lower for CRTs; Dast's low latency is scalable to a large number of regions.},
booktitle = {Proceedings of the Sixteenth European Conference on Computer Systems},
pages = {210–227},
numpages = {18},
keywords = {tail-latency, distributed transaction, scalability, edge computing},
location = {Online Event, United Kingdom},
series = {EuroSys '21}
}

@online{tpcc,
  title    = {TPC-C},
  year     = 2014,
  url      = {http://www.tpc.org/tpcc//}
}

@inproceedings{dpaxos,
author = {Nawab, Faisal and Agrawal, Divyakant and El Abbadi, Amr},
title = {DPaxos: Managing Data Closer to Users for Low-Latency and Mobile Applications},
year = {2018},
isbn = {9781450347037},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3183713.3196928},
doi = {10.1145/3183713.3196928},
abstract = {In this paper, we propose Dynamic Paxos (DPaxos), a Paxos-based consensus protocol to manage access to partitioned data across globally-distributed datacenters and edge nodes. DPaxos is intended to implement a State Machine Replication component in data management systems for the edge. DPaxos targets the unique opportunities of utilizing edge computing resources to support emerging applications with stringent mobility and real-time requirements such as Augmented and Virtual Reality and vehicular applications. The main objective of DPaxos is to reduce the latency of serving user requests, recovering from failures, and reacting to mobility. DPaxos achieves these objectives by a few proposed changes to the traditional Paxos protocol. Most notably, DPaxos proposes a dynamic allocation of quorums ( i.e. , groups of nodes) that are needed for Paxos Leader Election. Leader Election quorums in DPaxos are smaller than traditional Paxos and expand only in the presence of conflicts.},
booktitle = {Proceedings of the 2018 International Conference on Management of Data},
pages = {1221–1236},
numpages = {16},
keywords = {paxos, multi-datacenter, geo-replication, edge computing, transaction processing},
location = {Houston, TX, USA},
series = {SIGMOD '18}
}

@inproceedings {akkio,
author = {Muthukaruppan Annamalai and Kaushik Ravichandran and Harish Srinivas and Igor Zinkovsky and Luning Pan and Tony Savor and David Nagle and Michael Stumm},
title = {Sharding the Shards: Managing Datastore Locality at Scale with Akkio},
booktitle = {13th USENIX Symposium on Operating Systems Design and Implementation (OSDI 18)},
year = {2018},
isbn = {978-1-939133-08-3},
address = {Carlsbad, CA},
pages = {445--460},
url = {https://www.usenix.org/conference/osdi18/presentation/annamalai},
publisher = {USENIX Association},
month = oct,
}

@article{wpaxos,
author = {Ailijiang, Ailidani and Charapko, Aleksey and Demirbas, Murat and Kosar, Tevfik},
title = {WPaxos: Wide Area Network Flexible Consensus},
year = {2020},
issue_date = {Jan. 2020},
publisher = {IEEE Press},
volume = {31},
number = {1},
issn = {1045-9219},
url = {https://doi.org/10.1109/TPDS.2019.2929793},
doi = {10.1109/TPDS.2019.2929793},
abstract = {WPaxos is a multileader Paxos protocol that provides low-latency and high-throughput consensus across wide-area network (WAN) deployments. WPaxos uses multileaders, and partitions the object-space among these multileaders. Unlike statically partitioned multiple Paxos deployments, WPaxos is able to adapt to the changing access locality through object stealing. Multiple concurrent leaders coinciding in different zones steal ownership of objects from each other using phase-1 of Paxos, and then use phase-2 to commit update-requests on these objects locally until they are stolen by other leaders. To achieve fast phase-2 commits, WPaxos adopts the flexible quorums idea in a novel manner, and appoints phase-2 acceptors to be close to their respective leaders. We implemented WPaxos and evaluated it over WAN deployments across 5 AWS regions. The dynamic partitioning of the object-space and emphasis on zone-local commits allow WPaxos to significantly outperform both partitioned Paxos deployments and leaderless Paxos approaches.},
journal = {IEEE Trans. Parallel Distrib. Syst.},
month = {jan},
pages = {211–223},
numpages = {13}
}

@inproceedings {iaccf,
author = {Alex Shamis and Peter Pietzuch and Burcu Canakci and Miguel Castro and Cedric Fournet and Edward Ashton and Amaury Chamayou and Sylvan Clebsch and Antoine Delignat-Lavaud and Matthew Kerner and Julien Maffre and Olga Vrousgou and Christoph M. Wintersteiger and Manuel Costa and Mark Russinovich},
title = {{IA-CCF}: Individual Accountability for Permissioned Ledgers},
booktitle = {19th USENIX Symposium on Networked Systems Design and Implementation (NSDI 22)},
year = {2022},
isbn = {978-1-939133-27-4},
address = {Renton, WA},
pages = {467--491},
url = {https://www.usenix.org/conference/nsdi22/presentation/shamis},
publisher = {USENIX Association},
month = apr,
}

@inproceedings{10.1145/3400806.3400819,
author = {Unger, Clive and Murthy, Dhiraj and Acker, Amelia and Arora, Ishank and Chang, Andy},
title = {Examining the Evolution of Mobile Social Payments in Venmo},
year = {2020},
isbn = {9781450376884},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3400806.3400819},
doi = {10.1145/3400806.3400819},
abstract = {This study aims to understand the changes in behavior over time of users on Venmo, an American social payments platform. As there is a dearth of replication studies in social media studies, we chose to replicate an existing study of Venmo using new data we collected. This enabled us to track the growth of Venmo from the beginning of the platform, and to verify the robustness of the existing, very limited literature using Venmo data. To accomplish this, we studied how the structure of the transaction graph of Venmo transactions changed since 2016, the data endpoint of previous research. Additionally, we collected a much larger set of data and examined if new community structures or network-level features emerged since 2016. Although we found that Venmo's growth has maintained a similar pattern within its transaction graph and community structure, we discovered some changes, such as the existence of more communities of a smaller size and an increase towards users quitting the platform after one transaction versus becoming regular users. Ultimately, our study confirms both the methods and results of previous work on Venmo, opening up the possibility for future work to study if changes unfold in the next era of the platform. We argue that this replication study serves as an intervention in the field of social media research more broadly, and encourage others to take up replication studies to enhance the reliability and generalized knowledge of the field.},
booktitle = {International Conference on Social Media and Society},
pages = {101–110},
numpages = {10},
keywords = {community detection, social graphs, social payment platforms, mobile apps, Venmo, Social network analysis},
location = {Toronto, ON, Canada},
series = {SMSociety'20}
}

@inproceedings{zhang2017cold,
  title={Cold hard e-cash: Friends and vendors in the venmo digital payments system},
  author={Zhang, Xinyi and Tang, Shiliang and Zhao, Yun and Wang, Gang and Zheng, Haitao and Zhao, Ben},
  booktitle={Proceedings of the International AAAI Conference on Web and Social Media},
  volume={11},
  number={1},
  pages={387--396},
  year={2017}
}

@online{BadSoftwareUpdate,
  author       = {GT},
  year         = {2024},
  title        = {Cybersecurity Update Causes Worldwide Microsoft Outages},
  url          = {https://www.govtech.com/security/cybersecurity-update-causes-worldwide-microsoft-outages},
  month        = {Jan},
  lastaccessed = {Dec. 10, 2024}
}

@online{DataCenterFire,
  author       = {SeoulShinmoon},
  year         = {2022},
  title        = {Pangyo Data Center Fire},
  url          = {https://www.seoul.co.kr/news/economy/IT/2022/10/15/20221015500039},
  month        = {Jan},
  lastaccessed = {Dec. 10, 2024}
}

@online{EarthquakeBasestation,
  author       = {Paul Lipscombe},
  year         = {2024},
  title        = {More than 170 base stations offline in Taiwan following earthquake},
  url          = {https://www.datacenterdynamics.com/en/news/more-than-170-base-stations-offline-in-taiwan-following-earthquake/},
  month        = {Jan},
  lastaccessed = {Dec. 10, 2024}
}

@online{androidhandover,
  author       = {Google},
  year         = {2021},
  title        = {Google Android Developer},
  url          = {https://developer.android.com/reference/android/telecom/Call.Callback\#onHandoverComplete(android.telecom.Call)},
  month        = {Jan},
  lastaccessed = {Dec. 10, 2022}
}

@online{edgemarketsharemarketsandmarkets,
  author       = {Markets and Markets},
  year         = {2023},
  title        = {Edge Computing Market},
  url          = {https://www.marketsandmarkets.com/Market-Reports/edge-computing-market-133384090.html},
  month        = {Jun},
  lastaccessed = {Nov. 10, 2023}
}

@online{numofedgedevices2,
  author       = {edgeir},
  year         = {2023},
  title        = {3.3 billion network-edge devices set to connect and trade by 2030, report says},
  url          = {https://www.edgeir.com/3-3-billion-network-edge-devices-set-to-connect-and-trade-by-2030-report-says-20230606},
  month        = {Jun},
  lastaccessed = {Nov. 12, 2023}
}

@online{numofedgedevices,
  author       = {Statista},
  year         = {2022},
  title        = {Number of edge enabled internet of things (IoT) devices worldwide from 2020 to 2030, by market},
  url          = {https://www.statista.com/statistics/1259878/edge-enabled-iot-device-market-worldwide/},
  month        = {Dec},
  lastaccessed = {Nov. 12, 2023}
}

@online{hyperlocal_karrot,
  author       = {Karrot},
  year         = {2023},
  title        = {Your Local Buying \& Selling Community for Verified Locals},
  url          = {https://us.karrotmarket.com/},
  month        = {Jan},
  lastaccessed = {Jan. 2, 2023}
}

@online{hyperlocal_nextdoor,
  author       = {Nextdoor},
  year         = {2023},
  title        = {Discover your neighborhood},
  url          = {https://nextdoor.com/},
  month        = {Jan},
  lastaccessed = {Jan. 2, 2023}
}
@online{HLF_blockheader,
  author       = {Hyperledger Fabric},
  year         = {2023},
  title        = {Ledger},
  url          = {https://hyperledger-fabric.readthedocs.io/en/release-2.5/ledger/ledger.html/},
  month        = {Jan},
  lastaccessed = {Jan. 2, 2023}
}
@online{kovan,
  author       = {kovan},
  year         = {2023},
  title        = {Kovan Testnet},
  url          = {https://kovan-testnet.github.io/website/},
  month        = {Aug},
  lastaccessed = {Aug. 2, 2023}
}


@article{SINGH2023103044,
title = {A survey of mobility-aware Multi-access Edge Computing: Challenges, use cases and future directions},
journal = {Ad Hoc Networks},
volume = {140},
pages = {103044},
year = {2023},
issn = {1570-8705},
doi = {https://doi.org/10.1016/j.adhoc.2022.103044},
url = {https://www.sciencedirect.com/science/article/pii/S1570870522002165},
author = {Ramesh Singh and Radhika Sukapuram and Suchetana Chakraborty},
keywords = {Mobility, Multi-access Edge Computing, Task offloading, Service migration, Content caching, Resource allocation},
abstract = {Many mobile and pervasive applications avail cloud services to reduce overheads in on-device computation. The performance of these services depends on the available bandwidth of the underlying network, the physical proximity of the cloud server and the end devices, the volume of data, the computational capacity of the server, and, importantly, the mobility of the devices hosting the applications. Edge computing promises to provide better performance by bringing services (e.g., a video streaming service) from the cloud to servers near the user. It also enables partial or full offloading of the computation (tasks) and storage functionalities from the User Equipment (UE) to the edge of the network. This saves power and benefits from relatively more powerful devices at the edge. Multi-access Edge Computing (MEC), which supports wireless and wired access technologies, has gained significant research interest. When UEs move, services must continue to operate, tasks may need to be offloaded again, and states related to tasks and services may need to be migrated. In this paper, we focus on four functional components (task/service offloading, resource allocation, content/task caching, and service/task migration) of MEC. We survey the challenges to these and their solutions in the context of UE mobility. Mobility creates challenges during offloading resource-intensive tasks as the user may move while the task is being offloaded. Some of the other challenges are how to jointly allocate computing and communication resources, minimize service down time during migration, and share the backhaul network if the same MEC host must continue to be used. Some key research areas include intelligent task offloading and service migration algorithms, exploiting group mobility to improve task migration time, studying the interplay of MEC parameters such as capabilities of the target MEC host, etc. In addition, predicting the mobile trajectory through intelligent methods and implementations with datasets from real-world scenarios are required. We compare this paper on 11 parameters (service migration, task offloading, resource allocation, content caching, mobility, use cases, architecture, computing paradigm, mobility model, system model, virtualization/Software Defined Networks) with 31 other survey papers from 2018 to April 2022 in MEC and related domains. We discuss the Edge Computing paradigm, the system architecture and model descriptions, and use cases. We briefly explain the relevant challenges and future directions in emerging domains, such as the Internet of drones and Digital twins. We also discuss future research directions in task/service migration, offloading, resource management, distributed computing, reliability, and Quality of Service, all related to mobility in MEC.}
}

@inproceedings{Basil,
author = {Suri-Payer, Florian and Burke, Matthew and Wang, Zheng and Zhang, Yunhao and Alvisi, Lorenzo and Crooks, Natacha},
title = {Basil: Breaking up BFT with ACID (Transactions)},
year = {2021},
isbn = {9781450387095},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3477132.3483552},
doi = {10.1145/3477132.3483552},
abstract = {This paper presents Basil, the first transactional, leaderless Byzantine Fault Tolerant key-value store. Basil leverages ACID transactions to scalably implement the abstraction of a trusted shared log in the presence of Byzantine actors. Unlike traditional BFT approaches, Basil executes non-conflicting operations in parallel and commits transactions in a single round-trip during fault-free executions. Basil improves throughput over traditional BFT systems by four to five times, and is only four times slower than TAPIR, a non-Byzantine replicated system. Basil's novel recovery mechanism further minimizes the impact of failures: with 30\% Byzantine clients, throughput drops by less than 25\% in the worst-case.},
booktitle = {Proceedings of the ACM SIGOPS 28th Symposium on Operating Systems Principles},
pages = {1–17},
numpages = {17},
keywords = {Byzantine fault tolerance, database systems, blockchains, distributed systems},
location = {Virtual Event, Germany},
series = {SOSP '21}
}

@article{slog,
author = {Ren, Kun and Li, Dennis and Abadi, Daniel J.},
title = {SLOG: Serializable, Low-Latency, Geo-Replicated Transactions},
year = {2019},
issue_date = {July 2019},
publisher = {VLDB Endowment},
volume = {12},
number = {11},
issn = {2150-8097},
url = {https://doi.org/10.14778/3342263.3342647},
doi = {10.14778/3342263.3342647},
abstract = {For decades, applications deployed on a world-wide scale have been forced to give up at least one of (1) strict serializability (2) low latency writes (3) high transactional throughput. In this paper we discuss SLOG: a system that avoids this tradeoff for workloads which contain physical region locality in data access. SLOG achieves high-throughput, strictly serializable ACID transactions at geo-replicated distance and scale for all transactions submitted across the world, all the while achieving low latency for transactions that initiate from a location close to the home region for data they access. Experiments find that SLOG can reduce latency by more than an order of magnitude relative to state-of-the-art strictly serializable geo-replicated database systems such as Spanner and Calvin, while maintaining high throughput under contention.},
journal = {Proc. VLDB Endow.},
month = {jul},
pages = {1747–1761},
numpages = {15}
}

@article{METIS,
author = {Karypis, George and Kumar, Vipin},
title = {A Fast and High Quality Multilevel Scheme for Partitioning Irregular Graphs},
journal = {SIAM Journal on Scientific Computing},
volume = {20},
number = {1},
pages = {359-392},
year = {1998},
doi = {10.1137/S1064827595287997},

URL = { 
        https://doi.org/10.1137/S1064827595287997
},
eprint = { 
        https://doi.org/10.1137/S1064827595287997
},
abstract = { Recently, a number of researchers have investigated a class of graph partitioning algorithms that reduce the size of the graph by collapsing vertices and edges, partition the smaller graph, and then uncoarsen it to construct a partition for the original graph [Bui and Jones, Proc. of the 6th SIAM Conference on Parallel Processing for Scientific Computing, 1993, 445--452; Hendrickson and Leland, A Multilevel Algorithm for Partitioning Graphs, Tech. report SAND 93-1301, Sandia National Laboratories, Albuquerque, NM, 1993]. From the early work it was clear that multilevel techniques held great promise; however, it was not knownif they can be made to consistently produce high quality partitions for graphs arising in a wide range of application domains. We investigate the effectiveness of many different choices for all three phases: coarsening, partition of the coarsest graph, and refinement. In particular, we present a new coarsening heuristic (called heavy-edge heuristic) for which the size of the partition of the coarse graph is within a small factor of the size of the final partition obtained after multilevel refinement. We also present a much faster variation of the Kernighan--Lin (KL) algorithm for refining during uncoarsening. We test our scheme on a large number of graphs arising in various domains including finite element methods, linear programming, VLSI, and transportation. Our experiments show that our scheme produces partitions that are consistently better than those produced by spectral partitioning schemes in substantially smaller time. Also, when our scheme is used to compute fill-reducing orderings for sparse matrices, it produces orderings that have substantially smaller fill than the widely used multiple minimum degree algorithm. }
}

@book{gdpr,
author = {European Union Agency for Fundamental Rights},
title = {The General Data Protection Regulation : one year on : civil society: awareness, opportunities and challenges},
publisher = {Publications Office},
year = {2019},
doi = {doi/10.2811/538633}}


@article{SSChain,
author = {Wang, Xiangyu and Wang, Wenyong and Zeng, Youlu and Yang, Ting and Zheng, Chengyu},
title = {A State Sharding Model on the Blockchain},
year = {2022},
issue_date = {Jun 2022},
publisher = {Kluwer Academic Publishers},
address = {USA},
volume = {25},
number = {3},
issn = {1386-7857},
url = {https://doi.org/10.1007/s10586-022-03578-3},
doi = {10.1007/s10586-022-03578-3},
abstract = {Blockchain is an incrementally updated ledger maintained by distributed nodes with excellent features such as decentralization and immutability. However, the development of blockchain is now limited due to storage redundancy. Specifically, nodes cannot afford to store a large amount of data, and the mechanism of setting many ordinary nodes as light nodes sacrifices the most important decentralization feature of the blockchain. This paper proposes the SSChain sharding scheme, which reduces the storage burden of each node on the blockchain without losing the decentralization feature. First, we shard the state in the blockchain through the data structure of Merkle DAG; then, shard all nodes in the blockchain through DHT technology; finally, store the state in the blockchain in different Node and establish a mapping relationship. With this scheme, each node only needs to store the state data allocated to it by the storage system, and can obtain other state data it needs from other nodes. After experimentation, the solution of this paper is feasible. The performance of storage is better than other current solutions, and the scalability of the blockchain is improved.},
journal = {Cluster Computing},
month = {jun},
pages = {1969–1979},
numpages = {11},
keywords = {State sharding, Scalability, Blockchain, Storage}
}

@inproceedings{RootedGraphPlacement,
author = {Ren, Liuyang and Ward, Paul A. S. and Wong, Bernard},
title = {Toward Reducing Cross-Shard Transaction Overhead in Sharded Blockchains},
year = {2022},
isbn = {9781450393089},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3524860.3539641},
doi = {10.1145/3524860.3539641},
abstract = {Sharding is a promising approach to high-performance blockchains and has been extensively explored in academia recently. However, sharding also introduces cross-shard transactions, which require expensive inter-shard coordination to ensure state consistency. Such transactions significantly limit the performance of sharded blockchains.To reduce cross-shard transactions in UTXO-based sharded blockchains, we propose Rooted Graph Placement, which identifies the most appropriate shard for a transaction based on the interaction between the transaction and historical transactions. In conjunction with the placement algorithm, we also devise two techniques to lessen the system performance impact of the remaining cross-shard transactions. One technique parallelizes dependent transaction verification with the atomic commit protocol, and the other consolidates the atomic commit protocol. Combining all the three techniques, we can improve the maximum system throughput by 118\% when compared with a state-of-the-art transaction placement algorithm.},
booktitle = {Proceedings of the 16th ACM International Conference on Distributed and Event-Based Systems},
pages = {43–54},
numpages = {12},
keywords = {transaction placement, cross-shard transaction, sharding, blockchain, dependency graph},
location = {Copenhagen, Denmark},
series = {DEBS '22}
}

@inproceedings{shardmanager,
author = {Lee, Sangmin and Guo, Zhenhua and Sunercan, Omer and Ying, Jun and Kooburat, Thawan and Biswal, Suryadeep and Chen, Jun and Huang, Kun and Cheung, Yatpang and Zhou, Yiding and Veeraraghavan, Kaushik and Damani, Biren and Ruiz, Pol Mauri and Mehta, Vikas and Tang, Chunqiang},
title = {Shard Manager: A Generic Shard Management Framework for Geo-Distributed Applications},
year = {2021},
isbn = {9781450387095},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3477132.3483546},
doi = {10.1145/3477132.3483546},
abstract = {Sharding is widely used to scale an application. Despite a decade of effort to build generic sharding frameworks that can be reused across different applications, the extent of their success remains unclear. We attempt to answer a fundamental question: what barriers prevent a sharding framework from getting adopted by the majority of sharded applications?We analyze hundreds of sharded applications at Facebook and identify two major barriers: 1) lack of support for geo-distributed applications, which account for most of Facebook's applications, and 2) inability to maintain application availability during planned events such as software upgrades, which happen ≈1000 times more frequently than unplanned failures. A sharding framework that does not help applications to address these fundamental challenges is not sufficiently attractive for most applications to adopt it. Other adoption barriers include the burden of supporting many complex applications in a one-size-fit-all sharding framework and the difficulty in supporting sophisticated shard-placement requirements. Theoretically, a constraint solver can handle complex placement requirements, but in practice it is not scalable enough to perform near-realtime shard placement at a global scale.We have overcome these adoption barriers in Facebook's sharding framework called Shard Manager. Currently, Shard Manager is used by hundreds of applications running on over one million machines, which account for about 54\% of all sharded applications at Facebook.},
booktitle = {Proceedings of the ACM SIGOPS 28th Symposium on Operating Systems Principles},
pages = {553–569},
numpages = {17},
keywords = {sharding, shard management, availability},
location = {Virtual Event, Germany},
series = {SOSP '21}
}

@inproceedings{gorenflo2020xox,
  title={XOX Fabric: A hybrid approach to blockchain transaction execution},
  author={Gorenflo, Christian and Golab, Lukasz and Keshav, Srinivasan},
  booktitle={2020 IEEE International Conference on Blockchain and Cryptocurrency (ICBC)},
  pages={1--9},
  year={2020},
  organization={IEEE}
}


@INPROCEEDINGS{9126016,
  author={Soelman, Mark and Andrikopoulos, Vasilios and Pérez, Jorge A. and Theodosiadis, Vasileios and Goense, Karel and Rutjes, Arne},
  booktitle={2020 IEEE International Conference on Decentralized Applications and Infrastructures (DAPPS)}, 
  title={Hyperledger Fabric: Evaluating Endorsement Policy Strategies in Supply Chains}, 
  year={2020},
  volume={},
  number={},
  pages={145-152},
  doi={10.1109/DAPPS49028.2020.00019}}


  @INPROCEEDINGS{HDPoA,
  author={Alrubei, Subhi and Ball, Edward and Rigelsford, Jonathan},
  booktitle={2021 International Conference on Cyber Situational Awareness, Data Analytics and Assessment (CyberSA)}, 
  title={Securing IoT-Blockchain Applications Through Honesty-Based Distributed Proof of Authority Consensus Algorithm}, 
  year={2021},
  volume={},
  number={},
  pages={1-7},
  doi={10.1109/CyberSA52016.2021.9478257}}

@INPROCEEDINGS{SmartGridPoA,
  author={Chikezie, Ugonna and Karacolak, Tutku and Do Prado, Josue Campos},
  booktitle={2021 IEEE 9th International Conference on Smart Energy Grid Engineering (SEGE)}, 
  title={Examining the Applicability of Blockchain to the Smart Grid Using Proof-of-Authority Consensus}, 
  year={2021},
  volume={},
  number={},
  pages={19-25},
  doi={10.1109/SEGE52446.2021.9534994}}

@ARTICLE{MicroGridPoA,
  author={Yang, Jiawei and Dai, Jiahong and Gooi, Hoay Beng and Nguyen, Hung Dinh and Paudel, Amrit},
  journal={IEEE Transactions on Industrial Informatics}, 
  title={A Proof-of-Authority Blockchain-Based Distributed Control System for Islanded Microgrids}, 
  year={2022},
  volume={18},
  number={11},
  pages={8287-8297},
  doi={10.1109/TII.2022.3142755}}

@InProceedings{SmartHomePoA,
author="Singh, Pranav Kumar
and Singh, Roshan
and Nandi, Sunit Kumar
and Nandi, Sukumar",
editor="L{\"u}ke, Karl-Heinz
and Eichler, Gerald
and Erfurth, Christian
and Fahrnberger, G{\"u}nter",
title="Managing Smart Home Appliances with Proof of Authority and Blockchain",
booktitle="Innovations for Community Services",
year="2019",
publisher="Springer International Publishing",
address="Cham",
pages="221--232",
abstract="With the advance in technology and growth in standard of living, smart homes have become a reality. Smart homes consist of home appliances and devices that communicate with each other to address the needs of the residents. These appliances generate, share and consume lots of data which are private and sometimes safety critical to the residents. Managing them is a challenging task. The current frameworks for managing home appliances are centralized in nature. Such frameworks force smart home residents to trust the service providers or a third party. These frameworks are also prone to hacking, compromise of data and a single point of failure. Availability of services can also never be guaranteed with such frameworks. Technologies such as blockchain and smart contracts can help to manage these appliances. In this paper, we study the scope of blockchain technology in smart homes. We propose, implement and evaluate a blockchain based approach using Proof-of-Authority as the consensus mechanism for managing appliances in smart homes. In addition, we compare the performance of our system with the traditional Proof-of-Work based system.",
isbn="978-3-030-22482-0"
}


@inproceedings{bullshark,
author = {Spiegelman, Alexander and Giridharan, Neil and Sonnino, Alberto and Kokoris-Kogias, Lefteris},
title = {Bullshark: DAG BFT Protocols Made Practical},
year = {2022},
isbn = {9781450394505},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3548606.3559361},
doi = {10.1145/3548606.3559361},
abstract = {We present Bullshark, the first directed acyclic graph (DAG) based asynchronous Byzantine Atomic Broadcast protocol that is optimized for the common synchronous case. Like previous DAG-based BFT protocols [19, 25], Bullshark requires no extra communication to achieve consensus on top of building the DAG. That is, parties can totally order the vertices of the DAG by interpreting their local view of the DAG edges. Unlike other asynchronous DAG-based protocols, Bullshark provides a practical low latency fast-path that exploits synchronous periods and deprecates the need for notoriously complex view-change and view-synchronization mechanisms. Bullshark achieves this while maintaining all the desired properties of its predecessor DAG-Rider [25]. Namely, it has optimal amortized communication complexity, it provides fairness and asynchronous liveness, and safety is guaranteed even under a quantum adversary.In order to show the practicality and simplicity of our approach, we also introduce a standalone partially synchronous version of Bullshark, which we evaluate against the state of the art. The implemented protocol is embarrassingly simple (200 LOC on top of an existing DAG-based mempool implementation). It is highly efficient, achieving for example, 125,000 transactions per second with a 2 seconds latency for a deployment of 50 parties. In the same setting, the state of the art pays a steep 50\% latency increase as it optimizes for asynchrony.},
booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
pages = {2705–2718},
numpages = {14},
keywords = {consensus protocol, byzantine fault tolerant},
location = {Los Angeles, CA, USA},
series = {CCS '22}
}

@inproceedings{PoAFairness,
author = {Wang, Qin and Li, Rujia and Wang, Qi and Chen, Shiping and Xiang, Yang},
title = {Exploring Unfairness on Proof of Authority: Order Manipulation Attacks and Remedies},
year = {2022},
isbn = {9781450391405},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3488932.3517394},
doi = {10.1145/3488932.3517394},
abstract = {Proof of Authority (PoA) is a type of permissioned consensus algorithm with a fixed committee. PoA has been widely adopted by communities and industries due to its better performance and faster finality. In this paper, we explore the unfairness issue existing in the current PoA implementations. We have investigated 2,500+ in the wild projects and selected 10+ as our main focus (covering Ethereum, Binance smart chain, etc.). We have identified two types of order manipulation attacks to separately break the transaction-level (a.k.a. transaction ordering) and the block-level (sealer position ordering) fairness. Both of them merely rely on honest-but-profitable sealer assumption without modifying original settings. We launch these attacks on the forked branches under an isolated environment and carefully evaluate the attacking scope towards different implementations. To date (as of Nov 2021), the potentially affected PoA market cap can reach up to 681,087 million USD. Besides, we further dive into the source code of selected projects, and accordingly, propose our recommendation for the fix. To the best of knowledge, this work provides the first exploration of the unfairness issue in PoA algorithms.},
booktitle = {Proceedings of the 2022 ACM on Asia Conference on Computer and Communications Security},
pages = {123–137},
numpages = {15},
keywords = {fairness, proof of authority, order manipulation},
location = {Nagasaki, Japan},
series = {ASIA CCS '22}
}

@article{ekparinya2019attack,
  title={The attack of the clones against proof-of-authority},
  author={Ekparinya, Parinya and Gramoli, Vincent and Jourjon, Guillaume},
  journal={arXiv preprint arXiv:1902.10244},
  year={2019}
}

@article{copoa,
  title={Scaling proof-of-authority protocol to improve performance and security},
  author={Wu, Xiaohua and Chang, Jinpeng and Ling, Hongji and Feng, Xueqi},
  journal={Peer-to-Peer Networking and Applications},
  volume={15},
  number={6},
  pages={2633--2649},
  year={2022},
  publisher={Springer}
}

@article{spiegelman2023shoal,
  title={Shoal: Improving DAG-BFT Latency And Robustness},
  author={Spiegelman, Alexander and Aurn, Balaji and Gelashvili, Rati and Li, Zekun},
  journal={arXiv preprint arXiv:2306.03058},
  year={2023}
}

@inproceedings{dagrider,
author = {Keidar, Idit and Kokoris-Kogias, Eleftherios and Naor, Oded and Spiegelman, Alexander},
title = {All You Need is DAG},
year = {2021},
isbn = {9781450385480},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3465084.3467905},
doi = {10.1145/3465084.3467905},
abstract = {We present DAG-Rider, the first asynchronous Byzantine Atomic Broadcast protocol that achieves optimal resilience, optimal amortized communication complexity, and optimal time complexity. DAG-Rider is post-quantum safe and ensures that all values proposed by correct processes eventually get delivered. We construct DAG-Rider in two layers: In the first layer, processes reliably broadcast their proposals and build a structured Directed Acyclic Graph (DAG) of the communication among them. In the second layer, processes locally observe their DAGs and totally order all proposals with no extra communication.},
booktitle = {Proceedings of the 2021 ACM Symposium on Principles of Distributed Computing},
pages = {165–175},
numpages = {11},
keywords = {quantum safe, byzantine smr, atomic broadcast, asynchrony},
location = {Virtual Event, Italy},
series = {PODC'21}
}

@online{dapoagithub,
  author       = {Yongrae Jo},
  year         = {2023},
  title        = {A repository of DaPoA},
  url          = {https://github.com/rupc/solidity-narwhal},
  month        = Oct,
  lastaccessed = {Oct. 10, 2023}
}

@online{optimisticrollup,
  author       = {Ethereum},
  year         = {2023},
  title        = {OPTIMISTIC ROLLUPS},
  url          = {https://ethereum.org/en/developers/docs/scaling/optimistic-rollups/},
  month        = nov,
  lastaccessed = {Nov. 1, 2023}
}

@online{AzureEdge,
  author       = {Microsoft},
  year         = {2023},
  title        = {Azure Stack Edge},
  url          = {https://azure.microsoft.com/en-us/products/azure-stack/edge/},
  month        = nov,
  lastaccessed = {2023-11-10}
}
@online{AWSEdge,
  author       = {AWS},
  year         = {2023},
  title        = {AWS for the Edge},
  url          = {https://aws.amazon.com/edge/},
  month        = nov,
  lastaccessed = {2023-11-10}
}

@online{NokiaEdge,
  author       = {Nokia},
  year         = {2023},
  title        = {Edge Network Controllers},
  url          = {https://www.nokia.com/networks/products/edge-network-controller/},
  month        = nov,
  lastaccessed = {2023-11-10}
}

@online{DellEdge,
  author       = {Dell Technologies},
  year         = {2023},
  title        = {Edge Solutions},
  url          = {https://www.dell.com/en-us/dt/solutions/edge-computing/index.htm},
  month        = nov,
  lastaccessed = {2023-11-10}
}

@online{AlibabaEdge,
  author       = {Alibaba Cloud},
  year         = {2023},
  title        = {Edge Node Service},
  url          = {https://www.alibabacloud.com/product/edge-node-service},
  month        = nov,
  lastaccessed = {2023-11-10}
}

@inproceedings{Saguaro,
  author={Amiri, Mohammad Javad and Lai, Ziliang and Patel, Liana and Loo, Boon Thau and Lo, Eric and Zhou, Wenchao},
  booktitle={2023 IEEE 39th International Conference on Data Engineering (ICDE)}, 
  title={Saguaro: An Edge Computing-Enabled Hierarchical Permissioned Blockchain}, 
  year={2023},
  volume={},
  number={},
  pages={259-272},
  doi={10.1109/ICDE55515.2023.00027}}

@inproceedings{Ziziphus,
  author={Amiri, Mohammad Javad and Shu, Daniel and Maiyya, Sujaya and Agrawal, Divyakant and El Abbadi, Amr},
  booktitle={2023 IEEE 39th International Conference on Data Engineering (ICDE)}, 
  title={Ziziphus: Scalable Data Management Across Byzantine Edge Servers}, 
  year={2023},
  volume={},
  number={},
  pages={490-502},
  doi={10.1109/ICDE55515.2023.00044}}

@article{EdgeComputingDrivenIoTSurvey,
author = {Kong, Linghe and Tan, Jinlin and Huang, Junqin and Chen, Guihai and Wang, Shuaitian and Jin, Xi and Zeng, Peng and Khan, Muhammad and Das, Sajal K.},
title = {Edge-Computing-Driven Internet of Things: A Survey},
year = {2022},
issue_date = {August 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {8},
issn = {0360-0300},
url = {https://doi.org/10.1145/3555308},
doi = {10.1145/3555308},
abstract = {The Internet of Things (IoT) is impacting the world’s connectivity landscape. More and more IoT devices are connected, bringing many benefits to our daily lives. However, the influx of IoT devices poses non-trivial challenges for the existing cloud-based computing paradigm. In the cloud-based architecture, a large amount of IoT data is transferred to the cloud for data management, analysis, and decision making. It could not only cause a heavy workload on the cloud but also result in unacceptable network latency, ultimately undermining the benefits of cloud-based computing. To address these challenges, researchers are looking for new computing models for the IoT. Edge computing, a new decentralized computing model, is valued by more and more researchers in academia and industry. The main idea of edge computing is placing data processing in near-edge devices instead of remote cloud servers. It is promising to build more scalable, low-latency IoT systems. Many studies have been proposed on edge computing and IoT, but a comprehensive survey of this crossover area is still lacking.In this survey, we first introduce the impact of edge computing on the development of IoT and point out why edge computing is more suitable for IoT than other computing paradigms. Then, we analyze the necessity of systematical investigation on the edge-computing-driven IoT (ECDriven-IoT) and summarize new challenges occurring in ECDriven-IoT. We categorize recent advances from bottom to top, covering six aspects of ECDriven-IoT. Finally, we conclude lessons learned and propose some challenging},
journal = {ACM Comput. Surv.},
month = {dec},
articleno = {174},
numpages = {41},
keywords = {Internet of Things, Edge computing}
}

@ARTICLE{EdgeOfThings,
  author={El-Sayed, Hesham and Sankar, Sharmi and Prasad, Mukesh and Puthal, Deepak and Gupta, Akshansh and Mohanty, Manoranjan and Lin, Chin-Teng},
  journal={IEEE Access}, 
  title={Edge of Things: The Big Picture on the Integration of Edge, IoT and the Cloud in a Distributed Computing Environment}, 
  year={2018},
  volume={6},
  number={},
  pages={1706-1717},
  doi={10.1109/ACCESS.2017.2780087}}

@ARTICLE{EdgeMicroPayment,
  author={Seifelnasr, Mohamed and AlTawy, Riham and Youssef, Amr},
  journal={IEEE Transactions on Network and Service Management}, 
  title={Efficient Inter-Cloud Authentication and Micropayment Protocol for IoT Edge Computing}, 
  year={2021},
  volume={18},
  number={4},
  pages={4420-4433},
  doi={10.1109/TNSM.2021.3103509}}

@ARTICLE{EdgeChain,
  author={Pan, Jianli and Wang, Jianyu and Hester, Austin and Alqerm, Ismail and Liu, Yuanni and Zhao, Ying},
  journal={IEEE Internet of Things Journal}, 
  title={EdgeChain: An Edge-IoT Framework and Prototype Based on Blockchain and Smart Contracts}, 
  year={2019},
  volume={6},
  number={3},
  pages={4719-4732},
  doi={10.1109/JIOT.2018.2878154}}

@INPROCEEDINGS{EdgeBlockchainResourceAllocation,
  author={Huang, Yaodong and Zhang, Jiarui and Duan, Jun and Xiao, Bin and Ye, Fan and Yang, Yuanyuan},
  booktitle={2019 IEEE 39th International Conference on Distributed Computing Systems (ICDCS)}, 
  title={Resource Allocation and Consensus on Edge Blockchain in Pervasive Edge Computing Environments}, 
  year={2019},
  volume={},
  number={},
  pages={1476-1486},
  doi={10.1109/ICDCS.2019.00147}}

@ARTICLE{EdgeBlockchainAuth,
  author={Zhaofeng, Ma and Jialin, Meng and Jihui, Wang and Zhiguang, Shan},
  journal={IEEE Internet of Things Journal}, 
  title={Blockchain-Based Decentralized Authentication Modeling Scheme in Edge and IoT Environment}, 
  year={2021},
  volume={8},
  number={4},
  pages={2116-2123},
  doi={10.1109/JIOT.2020.3037733}
  }

@ARTICLE{Steward,
  author={Amir, Yair and Danilov, Claudiu and Dolev, Danny and Kirsch, Jonathan and Lane, John and Nita-Rotaru, Cristina and Olsen, Josh and Zage, David},
  journal={IEEE Transactions on Dependable and Secure Computing}, 
  title={Steward: Scaling Byzantine Fault-Tolerant Replication to Wide Area Networks}, 
  year={2010},
  volume={7},
  number={1},
  pages={80-93},
  doi={10.1109/TDSC.2008.53}}

@INPROCEEDINGS{Blockplane,
  author={Nawab, Faisal and Sadoghi, Mohammad},
  booktitle={2019 IEEE 35th International Conference on Data Engineering (ICDE)}, 
  title={Blockplane: A Global-Scale Byzantizing Middleware}, 
  year={2019},
  volume={},
  number={},
  pages={124-135},
  doi={10.1109/ICDE.2019.00020}}

@Article{HBFTNodeReputation,
AUTHOR = {Wang, Xixi and Guan, Yepeng},
TITLE = {A Hierarchy Byzantine Fault Tolerance Consensus Protocol Based on Node Reputation},
JOURNAL = {Sensors},
VOLUME = {22},
YEAR = {2022},
NUMBER = {15},
ARTICLE-NUMBER = {5887},
URL = {https://www.mdpi.com/1424-8220/22/15/5887},
PubMedID = {35957443},
ISSN = {1424-8220},
ABSTRACT = {A blockchain has been applied in many areas, such as cryptocurrency, smart cities and digital finance. The consensus protocol is the core part of the blockchain network, which addresses the problem of transaction consistency among the involved participants. However, the scalability, efficiency and security of the consensus protocol are greatly restricted with the increasing number of nodes. A Hierarchy Byzantine Fault Tolerance consensus protocol (HBFT) based on node reputation has been proposed. The two-layer hierarchy structure is designed to improve the scalability by assigning nodes to different layers. Each node only needs to exchange messages within its group, which deducts the communication complexity between nodes. Specifically, a reputation model is proposed to distinguish normal nodes from malicious ones by a punish and reward mechanism. It is applied to ensure that the malicious node merely existing in the bottom layer and the communication complexity in the high layer can be further lowered. Finally, a random selection mechanism is applied in the selection of the leader node. The mechanism can ensure the security of the blockchain network with the characteristics of unpredictability and randomicity. Some experimental results demonstrated that the proposed consensus protocol has excellent performance in comparison to some state-of-the-art models.},
DOI = {10.3390/s22155887}
}

@ARTICLE{HiCoOB,
  author={Abdella, Juhar and Tari, Zahir and Mahmud, Redowan and Sohrabi, Nasrin and Anwar, Adnan and Mahmood, Abdun},
  journal={IEEE Transactions on Smart Grid}, 
  title={HiCoOB: Hierarchical Concurrent Optimistic Blockchain Consensus Protocol for Peer-to-Peer Energy Trading Systems}, 
  year={2023},
  volume={14},
  number={5},
  pages={3927-3943},
  doi={10.1109/TSG.2022.3231218}}

@ARTICLE{HierChain,
  author={Agarwal, Vidushi and Pal, Sujata},
  journal={IEEE Internet of Things Journal}, 
  title={HierChain: A Hierarchical Blockchain-Based Data Management System for Smart Healthcare}, 
  year={2023},
  volume={},
  number={},
  pages={1-1},
  doi={10.1109/JIOT.2023.3295847}}

@online{faceboonnarwhal,
  title        = {narwhal},
  url          = {https://github.com/facebookresearch/narwhal},
  lastaccessed = {Nov 20, 2023},
  year         = {2021}
}

@article{GriDB,
  author     = {Hong, Zicong and Guo, Song and Zhou, Enyuan and Chen, Wuhui and Huang, Huawei and Zomaya, Albert},
  title      = {GriDB: Scaling Blockchain Database via Sharding and Off-Chain Cross-Shard Mechanism},
  year       = {2023},
  issue_date = {March 2023},
  publisher  = {VLDB Endowment},
  volume     = {16},
  number     = {7},
  issn       = {2150-8097},
  url        = {https://doi.org/10.14778/3587136.3587143},
  doi        = {10.14778/3587136.3587143},
  abstract   = {Blockchain databases have attracted widespread attention but suffer from poor scalability due to underlying non-scalable blockchains. While blockchain sharding is necessary for a scalable blockchain database, it poses a new challenge named on-chain cross-shard database services. Each cross-shard database service (e.g., cross-shard queries or inter-shard load balancing) involves massive cross-shard data exchanges, while the existing cross-shard mechanisms need to process each cross-shard data exchange via the consensus of all nodes in the related shards (i.e., on-chain) to resist a Byzantine environment of blockchain, which eliminates sharding benefits.To tackle the challenge, this paper presents GriDB, the first scalable blockchain database, by designing a novel off-chain cross-shard mechanism for efficient cross-shard database services. Borrowing the idea of off-chain payments, GriDB delegates massive cross-shard data exchange to a few nodes, each of which is randomly picked from a different shard. Considering the Byzantine environment, the untrusted delegates cooperate to generate succinct proof for cross-shard data exchanges, while the consensus is only responsible for the low-cost proof verification. However, different from payments, the database services' verification has more requirements (e.g., completeness, correctness, freshness, and availability); thus, we introduce several new authenticated data structures (ADS). Particularly, we utilize consensus to extend the threat model and reduce the complexity of traditional accumulator-based ADS for verifiable cross-shard queries with a rich set of relational operators. Moreover, we study the necessity of inter-shard load balancing for a scalable blockchain database and design an off-chain and live approach for both efficiency and availability during balancing. An evaluation of our prototype shows the performance of GriDB in terms of scalability in workloads with queries and updates.},
  journal    = {Proc. VLDB Endow.},
  month      = {mar},
  pages      = {1685–1698},
  numpages   = {14}
}

@article{Pyramid,
  author  = {Hong, Zicong and Guo, Song and Li, Peng},
  journal = {IEEE Journal on Selected Areas in Communications},
  title   = {Scaling Blockchain via Layered Sharding},
  year    = {2022},
  volume  = {40},
  number  = {12},
  pages   = {3575-3588},
  doi     = {10.1109/JSAC.2022.3213350}
}

@inproceedings{Meepo,
  author    = {Zheng, Peilin and Xu, Quanqing and Zheng, Zibin and Zhou, Zhiyuan and Yan, Ying and Zhang, Hui},
  booktitle = {2021 IEEE 37th International Conference on Data Engineering (ICDE)},
  title     = {Meepo: Sharded Consortium Blockchain},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {1847-1852},
  doi       = {10.1109/ICDE51399.2021.00165}
}


@article{RingBFT,
  title   = {RingBFT: Resilient consensus over sharded ring topology},
  author  = {Rahnama, Sajjad and Gupta, Suyash and Sogani, Rohan and Krishnan, Dhruv and Sadoghi, Mohammad},
  journal = {arXiv preprint arXiv:2107.13047},
  year    = {2021}
}

@INPROCEEDINGS{predismempool,
  author={Hu, Zhenxing and Guan, Shengjie and Xu, Wenbo and Xiao, Zhen and Shi, Jie and Li, Pengze and Ding, Qiuyu and Ding, Hui and Zeng, Chao},
  booktitle={2023 IEEE 43rd International Conference on Distributed Computing Systems (ICDCS)}, 
  title={A Data Flow Framework with High Throughput and Low Latency for Permissioned Blockchains}, 
  year={2023},
  volume={},
  number={},
  pages={1-12},
  doi={10.1109/ICDCS57875.2023.00088}}


@INPROCEEDINGS {Stratus,
author = {F. Gai and J. Niu and I. Beschastnikh and C. Feng and S. Wang},
booktitle = {2023 IEEE 39th International Conference on Data Engineering (ICDE)},
title = {Scaling Blockchain Consensus via a Robust Shared Mempool},
year = {2023},
volume = {},
issn = {},
pages = {530-543},
abstract = {Leader-based Byzantine fault-tolerant (BFT) consensus protocols used by permissioned blockchains have limited scalability and robustness. To alleviate the leader bottleneck in BFT consensus, we introduce Stratus, a robust shared mempool protocol that decouples transaction distribution from consensus. Our idea is to have replicas disseminate transactions in a distributed manner and have the leader only propose transaction ids. Stratus uses a provably available broadcast (PAB) protocol to ensure the availability of the referenced transactions. To deal with unbalanced load across replicas, Stratus adopts a distributed load balancing protocol.We implemented and evaluated Stratus by integrating it with state-of-the-art BFT-based blockchain protocols. Our evaluation of these protocols in both LAN and WAN settings shows that Stratus-based protocols achieve 5× to 20× higher throughput than their native counterparts in a network with hundreds of replicas. In addition, the performance of Stratus degrades gracefully in the presence of network asynchrony, Byzantine attackers, and unbalanced workloads.},
keywords = {wide area networks;fault tolerance;scalability;fault tolerant systems;throughput;load management;data engineering},
doi = {10.1109/ICDE55515.2023.00047},
url = {https://doi.ieeecomputersociety.org/10.1109/ICDE55515.2023.00047},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
month = {apr}
}

@INPROCEEDINGS{Leopard,
  author={Hu, Kexin and Guo, Kaiwen and Tang, Qiang and Zhang, Zhenfeng and Cheng, Hao and Zhao, Zhiyang},
  booktitle={2022 IEEE 42nd International Conference on Distributed Computing Systems (ICDCS)}, 
  title={Leopard: Towards High Throughput-Preserving BFT for Large-scale Systems}, 
  year={2022},
  volume={},
  number={},
  pages={157-167},
  doi={10.1109/ICDCS54860.2022.00024}}



@article{SlimChain,
author = {Xu, Cheng and Zhang, Ce and Xu, Jianliang and Pei, Jian},
title = {SlimChain: scaling blockchain transactions through off-chain storage and parallel processing},
year = {2021},
issue_date = {July 2021},
publisher = {VLDB Endowment},
volume = {14},
number = {11},
issn = {2150-8097},
url = {https://doi.org/10.14778/3476249.3476283},
doi = {10.14778/3476249.3476283},
abstract = {Blockchain technology has emerged as the cornerstone of many decentralized applications operating among otherwise untrusted peers. However, it is well known that existing blockchain systems do not scale well. Transactions are often executed and committed sequentially in order to maintain the same view of the total order. Furthermore, it is necessary to duplicate both transaction data and their executions in every node in the blockchain network for integrity assurance. Such storage and computation requirements put significant burdens on the blockchain system, not only limiting system scalability but also undermining system security and robustness by making the network more centralized. To tackle these problems, in this paper, we propose SlimChain, a novel blockchain system that scales transactions through off-chain storage and parallel processing. Advocating a stateless design, SlimChain maintains only the short commitments of ledger states on-chain while dedicating transaction executions and data storage to off-chain nodes. To realize SlimChain, we propose new schemes for off-chain smart contract execution, on-chain transaction validation, and state commitment. We also propose optimizations to reduce network transmissions and a new sharding technique to improve system scalability further. Extensive experiments are conducted to validate the performance of the proposed SlimChain system. Compared with the existing systems, SlimChain reduces the on-chain storage requirements by 97\% ~ 99\%, while also improving the peak throughput by 1.4\texttimes{} ~ 15.6\texttimes{}.},
journal = {Proc. VLDB Endow.},
month = {jul},
pages = {2314–2326},
numpages = {13}
}

@INPROCEEDINGS{dyno,
  author={Duan, Sisi and Zhang, Haibin},
  booktitle={2022 IEEE Symposium on Security and Privacy (SP)}, 
  title={Foundations of Dynamic BFT}, 
  year={2022},
  volume={},
  number={},
  pages={1317-1334},
  keywords={Degradation;Privacy;Protocols;Costs;Syntactics;Dynamometers;Security},
  doi={10.1109/SP46214.2022.9833787}}

@inproceedings{PShard,
author = {Gao, Jianbo and Zhang, Jiashuo and Li, Yue and Hao, Jiakun and Wang, Ke and Guan, Zhi and Chen, Zhong},
title = {PShard: A Practical Sharding Protocol for Enterprise Blockchain},
year = {2023},
isbn = {9781450397575},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3581971.3581987},
doi = {10.1145/3581971.3581987},
abstract = {Enterprise blockchain is commonly a permissioned blockchain that processes complex and massive transactions among enterprises for cooperation. With the continuous increase of business scale, the performance of a single blockchain is difficult to meet the demand and sharding is considered as a potential technology that can solve the problem. However, existing sharding protocols either process transactions only on a subset of blockchain nodes or needs to modify consensus algorithm, making the protocols difficult to apply in enterprise blockchain systems. In this paper, we propose PShard, a practical sharding protocol for enterprise blockchain. PShard adopts a two-layer data model for sharded enterprise blockchain where each enterprise participates in every shard and uses a two-phase method to execute cross-shard transactions to guarantee the safety and liveness of the protocol. We implement a prototype of enterprise blockchain system based on PShard and evaluate it in the experiments. The experimental results show that the performance of the system grows linearly as the number of shards increases.},
booktitle = {Proceedings of the 2022 5th International Conference on Blockchain Technology and Applications},
pages = {110–116},
numpages = {7},
keywords = {Two-phase commit, Sharding, Scalability, Consensus, Blockchain},
location = {Xi'an, China},
series = {ICBTA '22}
}

@inproceedings{GeoChain,
author = {Mao, Chunyu and Golab, Wojciech},
title = {GeoChain: A Locality-Based Sharding Protocol for Permissioned Blockchains},
year = {2023},
isbn = {9781450397964},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3571306.3571392},
doi = {10.1145/3571306.3571392},
abstract = {Blockchain is a distributed ledger that uses cryptography and consensus protocols to record a growing list of transactions in a tamper-resistant manner. Scalability is one of the main problems that limit its usage. This paper introduces a full sharding protocol, Geochain, for permissioned blockchains. We first clarify the limitations of state-of-the-art sharding protocols. Then, we propose a locality-based sharding protocol that achieves high scalability. We optimize inter-shard performance by clustering participants using their geographical properties, locality. In addition, the locality is also employed to decide the transaction placement which results in a low ratio of cross-shard transactions for applications, such as everyday banking, retail payments, and electric vehicle charging. We also propose a client-driven efficient mechanism to handle cross-shard transactions and present an analysis. This enables clients to manage their assets across different shards directly. A prototype is implemented on top of Hyperledger Fabric v2.3 and evaluated on Amazon EC2. The experiments show that our protocol doubles the peak throughput, even with a high ratio of cross-shard transactions, while minimizing the transaction latency.},
booktitle = {Proceedings of the 24th International Conference on Distributed Computing and Networking},
pages = {70–79},
numpages = {10},
keywords = {Locality, Permissioned Blockchain, Scalability, Sharding, Transactions},
location = {<conf-loc>, <city>Kharagpur</city>, <country>India</country>, </conf-loc>},
series = {ICDCN '23}
}


@article{Plasma,
  title={Plasma: Scalable autonomous smart contracts},
  author={Poon, Joseph and Buterin, Vitalik},
  journal={White paper},
  pages={1--47},
  year={2017}
}


@online{Danksharding,
  author       = {Ethereum},
  year         = {2024},
  title        = {Danksharding},
  url          = {https://ethereum.org/en/roadmap/danksharding/},
  month        = Mar,
  lastaccessed = {Mar. 27, 2024}
}

@online{Sidechain,
  author       = {Ethereum},
  year         = {2024},
  title        = {Side Chain},
  url          = {https://ethereum.org/en/developers/docs/scaling/sidechains/},
  month        = Mar,
  lastaccessed = {Mar. 27, 2024}
}

@article{SoKDAGbasedBlockchainSystems,
  author     = {Wang, Qin and Yu, Jiangshan and Chen, Shiping and Xiang, Yang},
  title      = {SoK: DAG-based Blockchain Systems},
  year       = {2023},
  issue_date = {December 2023},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {55},
  number     = {12},
  issn       = {0360-0300},
  url        = {https://doi.org/10.1145/3576899},
  doi        = {10.1145/3576899},
  abstract   = {Limitations on high latency and low scalability of classical blockchain systems retard their adoptions and applications. Reconstructed blockchain systems have been proposed to avoid the consumption of competitive transactions caused by linear sequenced blocks. These systems, instead, structure transactions/blocks in the form of Directed Acyclic Graph (DAG) and consequently rebuild upper layer components. The promise of DAG-based blockchain systems is to enable fast confirmation (complete transactions within million seconds) and high scalability (attach transactions in parallel) without significantly compromising security. However, this field still lacks systematic work that summarises DAG techniques. To bridge the gap, this Systematization of Knowledge (SoK) provides a comprehensive analysis of ever-existing and ongoing DAG-based blockchain systems. We abstract a general model to capture the main features and identify six types of design patterns. Then, we evaluate these systems from the perspectives of structure, consensus, property, security, and performance. We further discuss the trade-off between different factors, open challenges, and the potentiality of DAG-based solutions, indicating their promising directions for future research.},
  journal    = {ACM Comput. Surv.},
  month      = {mar},
  articleno  = {261},
  numpages   = {38},
  keywords   = {DAG-based blockchain, SoK, performance}
}


@article{HashGraph,
  title={The swirlds hashgraph consensus algorithm: Fair, fast, byzantine fault tolerance},
  author={Baird, Leemon},
  journal={Swirlds Tech Reports SWIRLDS-TR-2016-01, Tech. Rep},
  volume={34},
  pages={9--11},
  year={2016}
}

@INPROCEEDINGS{OHIE,
  author={Yu, Haifeng and Nikolić, Ivica and Hou, Ruomu and Saxena, Prateek},
  booktitle={2020 IEEE Symposium on Security and Privacy (SP)}, 
  title={OHIE: Blockchain Scaling Made Simple}, 
  year={2020},
  volume={},
  number={},
  pages={90-105},
  keywords={Protocols;Throughput;Bitcoin;Bandwidth;Peer-to-peer computing},
  doi={10.1109/SP40000.2020.00008}}

@article{IOTATangle,
  title={Iota Tangle: A cryptocurrency to communicate Internet-of-Things data},
  author={Silvano, Wellington Fernandes and Marcelino, Roderval},
  journal={Future generation computer systems},
  volume={112},
  pages={307--319},
  year={2020},
  publisher={Elsevier}
}

@INPROCEEDINGS {GeckoDAG,
author = {X. Dai and Y. Zhou and J. Xiao and F. Cheng and X. Xie and H. Jin and B. Li},
booktitle = {2023 IEEE 43rd International Conference on Distributed Computing Systems (ICDCS)},
title = {GeckoDAG: Towards a Lightweight DAG-Based Blockchain via Reducing Data Redundancy},
year = {2023},
volume = {},
issn = {},
pages = {451-462},
abstract = {To overcome the scaling and performance limitations, the Directed Acyclic Graph (DAG) is utilized as the underlying storage model of blockchain systems, which enables concurrent transaction processing and confirmation. However, accompanied by high performance, DAG-based blockchains still suffer from the severe challenge of constrained storage scalability, i.e., expensive storage overhead. Based on an in-depth analysis of the data, we discover that the root cause of storage overhead stems from the considerable data redundancy in the DAG-based blockchains. In this paper, we propose GeckoDAG, a lightweight DAG-based blockchain, whose design consists of two steps. First, we abstract a storage model named Basic from the existing DAG-based blockchain systems, which offers both high performance and security. On top of Basic, we then devise GeckoDAG, which merges previous transactions into Transaction Union (TU) and reduces the data redundancy in TU, thus lowering the storage overhead. To evaluate our design, we implement a prototype of GeckoDAG and conduct various experiments on it. The experimental results demonstrate that GeckoDAG can offer storage scalability while maintaining the security and efficiency of DAG-based blockchains.},
keywords = {directed acyclic graph;scalability;system performance;redundancy;prototypes;blockchains;security},
doi = {10.1109/ICDCS57875.2023.00056},
url = {https://doi.ieeecomputersociety.org/10.1109/ICDCS57875.2023.00056},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
month = {jul}
}

@INPROCEEDINGS {2LDAG,
author = {C. Yang and Y. Liu and K. Chin and J. Wang and H. Huang and Z. Zheng},
booktitle = {2023 IEEE 43rd International Conference on Distributed Computing Systems (ICDCS)},
title = {A Novel Two-Layer DAG-Based Reactive Protocol for IoT Data Reliability in Metaverse},
year = {2023},
volume = {},
issn = {},
pages = {25-36},
abstract = {Many applications, e.g., digital twins, rely on sensing data from Internet of Things (IoT) networks, which is used to infer event(s) and initiate actions to affect an environment. This gives rise to concerns relating to data integrity and provenance. One possible solution to address these concerns is to employ blockchain. However, blockchain has high resource requirements, thereby making it unsuitable for use on resource-constrained IoT devices. To this end, this paper proposes a novel approach, called two-layer directed acyclic graph (2LDAG), whereby IoT devices only store a digital fingerprint of data generated by their neighbors. Further, it proposes a novel proof-of-path (PoP) protocol that allows an operator or digital twin to verify data in an on-demand manner. The simulation results show 2LDAG has storage and communication cost that is respectively two and three orders of magnitude lower than traditional blockchain and also blockchains that use a DAG structure. Moreover, 2LDAG achieves consensus even when 49% of nodes are malicious.},
keywords = {protocols;costs;simulation;data integrity;throughput;blockchains;digital twins},
doi = {10.1109/ICDCS57875.2023.00049},
url = {https://doi.ieeecomputersociety.org/10.1109/ICDCS57875.2023.00049},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
month = {jul}
}



@inproceedings{InfoComm19PoL,
  author    = {Nosouhi, Mohammad Reza and Yu, Shui and Grobler, Marthie and Zhu, Qingyi and Xiang, Yong},
  booktitle = {IEEE INFOCOM 2019 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS)},
  title     = {Blockchain–Based Location Proof Generation and Verification},
  year      = {2019},
  volume    = {},
  number    = {},
  pages     = {1-6},
  keywords  = {Privacy;Spatiotemporal phenomena;Bridges;Computer architecture;Australia;blockchain;collusion attacks detection and prevention;location–based services;location privacy;location proof.},
  doi       = {10.1109/INFOCOMWKSHPS47286.2019.9093768}
}

@inproceedings{EventChain,
  author    = {Schwarz-R\"{u}sch, Signe and Behlendorf, Michael and Becker, Markus and Kudlek, Ren\'{e} and Mohamed, Hesham Hosney Elsayed and Schoenitz, Felix and Jehl, Leander and Kapitza, R\"{u}diger},
  title     = {EventChain: a blockchain framework for secure, privacy-preserving event verification},
  year      = {2022},
  isbn      = {9781450393409},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3528535.3565243},
  doi       = {10.1145/3528535.3565243},
  abstract  = {The number of fake news written by bots or malicious actors on social media is rising. One cause is the ability of users to post anything, at any place, at any time. This offers great flexibility, but it also poses the risk that users share misinformation. One type includes events that allegedly have occurred in a location, without the reporting user necessarily having been present. A user may add her location to posts to appear as an eyewitness and thus more trustworthy; however, basing that trust on commonly used and easily faked GPS locations is not reasonable.We present EventChain, which enriches social media posts with hard to fake trust scores based on the user's recent motion profile to give actual eyewitnesses more credibility. Users' motion profiles are integrity- and privacy-preservingly logged in a blockchain. Once the user posts an event, her locality is evaluated for a location rating. The location evaluation is secured by a trusted execution environment to ensure users' location data is private and under the users' control at all times. EventChain also enables interactive assessments of a post via nearby users, whose location is similarly evaluated. This way other eyewitnesses can credibly provide further information, thus leading to a consensus about the event's actual occurrences, increasing trust in social media posts, and limiting the spread of fake news.},
  booktitle = {Proceedings of the 23rd ACM/IFIP International Middleware Conference},
  pages     = {174–187},
  numpages  = {14},
  keywords  = {TEE, blockchain, fake news, location privacy},
  location  = {<conf-loc>, <city>Quebec</city>, <state>QC</state>, <country>Canada</country>, </conf-loc>},
  series    = {Middleware '22}
}

@inproceedings{ICDCS23WPoL,
  author    = {Bonini, Michele and Zichichi, Mirko and Ferrettiv, Stefano and D’Angelo, Gabriele},
  booktitle = {2023 IEEE 43rd International Conference on Distributed Computing Systems Workshops (ICDCSW)},
  title     = {Proof of Location through a Blockchain Agnostic Smart Contract Language},
  year      = {2023},
  volume    = {},
  number    = {},
  pages     = {55-60},
  keywords  = {Heart;Costs;Distributed ledger;Conferences;Smart contracts;Computer architecture;Blockchains;Distributed Ledger Technology;Decentralized File Storage;Distributed Hash Table;Keyword Search;Smart Contracts},
  doi       = {10.1109/ICDCSW60045.2023.00016}
}


@online{cloudping,
  author       = {cloudping.co},
  year         = {2024},
  title        = {CloudPing},
  url          = {https://www.cloudping.co/},
  month        = Jan,
  lastaccessed = {Apr. 19, 2024}
}

@online{dockercontainer,
  year         = {2024},
  title        = {Docker},
  url          = {https://www.docker.com/},
  lastaccessed = {Sep. 9, 2024}
}

@article{PeerBFT,
  author   = {Ma, Jeonghyeon and Jo, Yongrae and Park, Chanik},
  journal  = {IEEE Access},
  title    = {PeerBFT: Making Hyperledger Fabric’s Ordering Service Withstand Byzantine Faults},
  year     = {2020},
  volume   = {8},
  number   = {},
  pages    = {217255-217267},
  keywords = {Peer-to-peer computing;Blockchain;Distributed ledger;Fabrics;Safety;Consensus algorithm;Fault tolerant systems;Blockchain;Byzantine fault tolerance;hyperledger fabric;liveness;ordering service;safety},
  doi      = {10.1109/ACCESS.2020.3040443}
}


@article{CodedBlockchain24,
author = {Yang, Changlin and Chin, Kwan-Wu and Wang, Jiguang and Wang, Xiaodong and Liu, Ying and Zheng, Zibin},
title = {Scaling Blockchains with Error Correction Codes: A Survey on Coded Blockchains},
year = {2024},
issue_date = {June 2024},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {56},
number = {6},
issn = {0360-0300},
url = {https://doi.org/10.1145/3637224},
doi = {10.1145/3637224},
abstract = {A fundamental issue in blockchain systems is their scalability in terms of data storage, computation, communication, and security. To resolve this issue, a promising research direction is coding theory, which is widely used for distributed storage, recovery from erasures or channel errors and/or to reduce communication cost. To this end, this article provides the first comprehensive survey of approaches that employ coding theory to scale blockchain systems. It shows how the use of coded symbols or shards allow participants to only store a fraction of the total blockchain, protect against malicious nodes or erasures, ensure data availability in order to promote transparency, and scale the security of sharded blockchains. Further, coded symbols help reduce communication cost when disseminating blocks, which help bootstrap new nodes and speed up consensus of blocks. For each category of solutions, we highlight problems and issues that motivated their designs and use of coding. Moreover, we provide a qualitative analysis of their storage, communication, and computation costs.},
journal = {ACM Comput. Surv.},
month = {jan},
articleno = {139},
numpages = {33},
keywords = {Blockchain scalability, error correction codes, distributed systems}
}


@inproceedings{Fireplug,
  author    = {Neiheiser, Ray and Presser, Daniel and Rech, Luciana and Bravo, Manuel and Rodrigues, Luís and Correia, Miguel},
  booktitle = {2018 International Conference on Information Networking (ICOIN)},
  title     = {Fireplug: Flexible and robust N-version geo-replication of graph databases},
  year      = {2018},
  volume    = {},
  number    = {},
  pages     = {110-115},
  keywords  = {Databases;Computer crashes;Protocols;Software;Programming;Fault tolerance;Fault tolerant systems;Graph databases;Geo-replication;N-version programming;Byzantine faults},
  doi       = {10.1109/ICOIN.2018.8343095}
}

@article{Qanaat,
  author     = {Amiri, Mohammad Javad and Loo, Boon Thau and Agrawal, Divyakant and Abbadi, Amr El},
  title      = {Qanaat: a scalable multi-enterprise permissioned blockchain system with confidentiality guarantees},
  year       = {2022},
  issue_date = {July 2022},
  publisher  = {VLDB Endowment},
  volume     = {15},
  number     = {11},
  issn       = {2150-8097},
  url        = {https://doi.org/10.14778/3551793.3551835},
  doi        = {10.14778/3551793.3551835},
  abstract   = {Today's large-scale data management systems need to address distributed applications' confidentiality and scalability requirements among a set of collaborative enterprises. This paper presents Qanaat, a scalable multi-enterprise permissioned blockchain system that guarantees the confidentiality of enterprises in collaboration workflows. Qanaat presents data collections that enable any subset of enterprises involved in a collaboration workflow to keep their collaboration private from other enterprises. A transaction ordering scheme is also presented to enforce only the necessary and sufficient constraints on transaction order to guarantee data consistency. Furthermore, Qanaat supports data consistency across collaboration workflows where an enterprise can participate in different collaboration workflows with different sets of enterprises. Finally, Qanaat presents a suite of consensus protocols to support intra-shard and cross-shard transactions within or across enterprises.},
  journal    = {Proc. VLDB Endow.},
  month      = {jul},
  pages      = {2839–2852},
  numpages   = {14}
}



@article{TopBFT,
  author   = {Chen, Xiao and Ma, Tiejun and Er-Rahmadi, Btissam and Hillston, Jane and Yuan, Guanxu},
  journal  = {IEEE Transactions on Dependable and Secure Computing},
  title    = {Parallel Byzantine Consensus Based on Hierarchical Architecture and Trusted Hardware},
  year     = {2024},
  volume   = {},
  number   = {},
  pages    = {1-15},
  keywords = {Scalability;Safety;Complexity theory;Parallel processing;Consensus protocol;Computer architecture;Sharding;Parallel BFT;hierarchical architecture;trusted execution environment;secret sharing scheme},
  doi      = {10.1109/TDSC.2024.3375925}
}

@inproceedings{EBFT,
  author    = {Li, Wenzheng and He, Mingsheng},
  booktitle = {2021 IEEE 12th International Conference on Software Engineering and Service Science (ICSESS)},
  title     = {EBFT: A Hierarchical and Group-Based Byzantine Fault Tolerant Consensus Algorithm},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {32-37},
  keywords  = {Fault tolerance;Network topology;Conferences;Fault tolerant systems;Consensus algorithm;Blockchains;Complexity theory;PBFT;consortium blockchain;consensus algorithm;high performance},
  doi       = {10.1109/ICSESS52187.2021.9522233}
}

@article{LH-Raft,
  author   = {Guo, Hao and Li, Wanxin and Nejad, Mark},
  journal  = {IEEE Transactions on Network and Service Management},
  title    = {A Hierarchical and Location-Aware Consensus Protocol for IoT-Blockchain Applications},
  year     = {2022},
  volume   = {19},
  number   = {3},
  pages    = {2972-2986},
  keywords = {Internet of Things;Consensus protocol;Protocols;Scalability;Throughput;Fault tolerant systems;Fault tolerance;Blockchain;Internet of Things;consensus protocol;threshold signature scheme;hierarchical architecture},
  doi      = {10.1109/TNSM.2022.3176607}
}
@inproceedings{Apex,
  author    = {Makkes, Marc X. and Diebels, Robert},
  booktitle = {2019 Sixth International Conference on Internet of Things: Systems, Management and Security (IOTSMS)},
  title     = {Apex: a High-Performance Hierarchical Distributed Ledger},
  year      = {2019},
  volume    = {},
  number    = {},
  pages     = {466-473},
  keywords  = {Blockchain;Distributed ledger;Fabrics;Throughput;Intellectual property;Cryptography},
  doi       = {10.1109/IOTSMS48152.2019.8939189}
}

@article{LayerChain,
  author   = {Yu, Yao and Liu, Shumei and Yeoh, Phee Lep and Vucetic, Branka and Li, Yonghui},
  journal  = {IEEE Transactions on Industrial Informatics},
  title    = {LayerChain: A Hierarchical Edge-Cloud Blockchain for Large-Scale Low-Delay Industrial Internet of Things Applications},
  year     = {2021},
  volume   = {17},
  number   = {7},
  pages    = {5077-5086},
  keywords = {Edge computing;Cloud computing;Delays;Peer-to-peer computing;Informatics;Internet of Things;Block propagation;blockchain;cloud computing;industrial Internet of Things (IIoT);layered storage;pervasive edge computing},
  doi      = {10.1109/TII.2020.3016025}
}

@article{SZHBFT,
  author   = {Kwak, Ji-Young and Yim, Jongchoul and Ko, Nam-Seok and Kim, Sun-Me},
  journal  = {IEEE Transactions on Engineering Management},
  title    = {The Design of Hierarchical Consensus Mechanism Based on Service-Zone Sharding},
  year     = {2020},
  volume   = {67},
  number   = {4},
  pages    = {1387-1403},
  keywords = {Blockchain;Internet of Things;Scalability;Peer-to-peer computing;Ecosystems;Smart contracts;Byzantine agreement;distributed multiledgers;hierarchical consensus},
  doi      = {10.1109/TEM.2020.2993413}
}



@inproceedings{HierarchicalConsensus,
  author    = {De la Rocha, Alfonso and Kokoris-Kogias, Lefteris and Soares, Jorge M. and Vukolić, Marko},
  booktitle = {2022 IEEE 42nd International Conference on Distributed Computing Systems Workshops (ICDCSW)},
  title     = {Hierarchical Consensus: A Horizontal Scaling Framework for Blockchains},
  year      = {2022},
  volume    = {},
  number    = {},
  pages     = {45-52},
  keywords  = {Checkpointing;Sharding;Conferences;Systems architecture;Prototypes;Consensus algorithm;Throughput;blockchain;consensus;distributed systems;P2P;scalability;sharding},
  doi       = {10.1109/ICDCSW56584.2022.00018}
}

@inproceedings{PoQDB,
  author    = {Al-Joboury, Istabraq M. and Al-Hemiary, Emad H.},
  booktitle = {2021 International Symposium on Networks, Computers and Communications (ISNCC)},
  title     = {A Permissioned Consensus Algorithm Based DAGs-to-Blockchain in Hierarchical Architecture for Decentralized Internet of Things},
  year      = {2021},
  volume    = {},
  number    = {},
  pages     = {1-6},
  keywords  = {Cloud computing;Scalability;Consensus algorithm;Computer architecture;Throughput;Real-time systems;Blockchains;Consensus Algorithms;Blockchain;DAG;IoT;Distributed ledgers;Healthcare.},
  doi       = {10.1109/ISNCC52172.2021.9615865}
}


@article{vCubeChain,
  title    = {vCubeChain: A scalable permissioned blockchain},
  journal  = {Ad Hoc Networks},
  volume   = {158},
  pages    = {103461},
  year     = {2024},
  issn     = {1570-8705},
  doi      = {https://doi.org/10.1016/j.adhoc.2024.103461},
  url      = {https://www.sciencedirect.com/science/article/pii/S1570870524000726},
  author   = {Allan Edgard Silva Freitas and Luiz Antonio Rodrigues and Elias Procópio Duarte},
  keywords = {Distributed computing, Consensus, Blocksim, vCube},
  abstract = {This work presents vCubeChain, a scalable permissioned blockchain based on the vCube virtual topology. vCube is a virtual hierarchical topology that presents several logarithmic properties. vCubeChain employs a leader election algorithm that relies on the failure detection information that vCube provides. The leader employs a vCube-based autonomic reliable broadcast algorithm to disseminate blocks, each consisting of multiple transactions. In case multiple leaders end up concurrently elected due to false suspicions, vCubeChain is proven to recover to a consistent state upon the discovery of contradictory blocks. vCubeChain is described, specified, and correctness and liveness draft proofs are presented. The blockchain was implemented on the Blocksim simulator, and a set of experiments are presented, including comparisons with Bitcoin, Ethereum and Hyperledge Fabric. Results demonstrate the scalability of the solution.}
}

@article{STBFT,
  author   = {Jiang, Wangxi and Wu, Xiaoxiong and Song, Mingyang and Qin, Jiwei and Jia, Zhenhong},
  journal  = {IEEE Access},
  title    = {A Scalable Byzantine Fault Tolerance Algorithm Based on a Tree Topology Network},
  year     = {2023},
  volume   = {11},
  number   = {},
  pages    = {33509-33519},
  keywords = {Heuristic algorithms;Fault tolerant systems;Communications systems;Security;Scalability;Peer-to-peer computing;Consensus algorithm;Topology;Tree topology network;PBFT;scalability;communication complexity;high fault tolerance},
  doi      = {10.1109/ACCESS.2023.3264011}
}

@article{double-layer-PBFT,
  author   = {Li, Wenyu and Feng, Chenglin and Zhang, Lei and Xu, Hao and Cao, Bin and Imran, Muhammad Ali},
  journal  = {IEEE Transactions on Parallel and Distributed Systems},
  title    = {A Scalable Multi-Layer PBFT Consensus for Blockchain},
  year     = {2021},
  volume   = {32},
  number   = {5},
  pages    = {1146-1160},
  keywords = {Blockchain;Complexity theory;Scalability;Security;Peer-to-peer computing;Throughput;Internet of Things;PBFT;communication complexity;node scalability;consensus mechanism;blockchain},
  doi      = {10.1109/TPDS.2020.3042392}
}

@inproceedings{PAS,
  author    = {Xu, Zihuan
               and Han, Siyuan
               and Chen, Lei},
  editor    = {Jensen, Christian S.
               and Lim, Ee-Peng
               and Yang, De-Nian
               and Lee, Wang-Chien
               and Tseng, Vincent S.
               and Kalogeraki, Vana
               and Huang, Jen-Wei
               and Shen, Chih-Ya},
  title     = {PAS: Enable Partial Consensus in the Blockchain},
  booktitle = {Database Systems for Advanced Applications},
  year      = {2021},
  publisher = {Springer International Publishing},
  address   = {Cham},
  pages     = {375--392},
  abstract  = {Permissioned Blockchain enables distributed collaboration among organizations that may not trust each other. However, existing systems cannot efficiently support the ordering and execution of transactions in different workflows parallelly, which seriously affects system scalability and performances in terms of throughput and latency.},
  isbn      = {978-3-030-73200-4}
}


@article{Wang2023SoKBF,
  title={SoK: Blockchain for Industrial Internet of Things},
  author={Gang Wang and Mark Nixon},
  journal={2023 Fifth International Conference on Blockchain Computing and Applications (BCCA)},
  year={2023},
  pages={250-265},
  url={https://api.semanticscholar.org/CorpusID:266197922}
}

@ARTICLE{8962150,
  author={Zhou, Qiheng and Huang, Huawei and Zheng, Zibin and Bian, Jing},
  journal={IEEE Access}, 
  title={Solutions to Scalability of Blockchain: A Survey}, 
  year={2020},
  volume={8},
  number={},
  pages={16440-16455},
  keywords={Blockchain;Scalability;Bitcoin;Throughput;Measurement;Blockchain;scalability},
  doi={10.1109/ACCESS.2020.2967218}}

  @ARTICLE{9133427,
  author={Hafid, Abdelatif and Hafid, Abdelhakim Senhaji and Samih, Mustapha},
  journal={IEEE Access}, 
  title={Scaling Blockchains: A Comprehensive Survey}, 
  year={2020},
  volume={8},
  number={},
  pages={125244-125262},
  keywords={Blockchain;Scalability;Protocols;Bitcoin;Peer-to-peer computing;Taxonomy;Blockchain;scalability;sharding;first layer solutions;second layer solutions},
  doi={10.1109/ACCESS.2020.3007251}}


@misc{cryptoeprint:2021/1589,
      author = {Patrick McCorry and Chris Buckland and Bennet Yee and Dawn Song},
      title = {{SoK}: Validating Bridges as a Scaling Solution for Blockchains},
      howpublished = {Cryptology ePrint Archive, Paper 2021/1589},
      year = {2021},
      note = {\url{https://eprint.iacr.org/2021/1589}},
      url = {https://eprint.iacr.org/2021/1589}
}

@INPROCEEDINGS{10174976,
  author={Berger, Christian and Schwarz-Rüsch, Signe and Vogel, Arne and Bleeke, Kai and Jehl, Leander and Reiser, Hans P. and Kapitza, Rüdiger},
  booktitle={2023 IEEE International Conference on Blockchain and Cryptocurrency (ICBC)}, 
  title={SoK: Scalability Techniques for BFT Consensus}, 
  year={2023},
  volume={},
  number={},
  pages={1-18},
  keywords={Surveys;Fault tolerance;Distributed ledger;Scalability;Fault tolerant systems;Energy efficiency;Consensus protocol;Byzantine Fault Tolerance;Consensus;Scalability;Blockchain},
  doi={10.1109/ICBC56567.2023.10174976}}

@inproceedings{10.1145/3318041.3355457,
author = {Wang, Gang and Shi, Zhijie Jerry and Nixon, Mark and Han, Song},
title = {SoK: Sharding on Blockchain},
year = {2019},
isbn = {9781450367325},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3318041.3355457},
doi = {10.1145/3318041.3355457},
abstract = {Blockchain is a distributed and decentralized ledger for recording transactions. It is maintained and shared among the participating nodes by utilizing cryptographic primitives. A consensus protocol ensures that all nodes agree on a unique order in which records are appended. However, current blockchain solutions are facing scalability issues. Many methods, such as Off-chain and Directed Acyclic Graph (DAG) solutions, have been proposed to address the issue. However, they have inherent drawbacks, e.g., forming parasite chains. Performance, such as throughput and latency, is also important to a blockchain system. Sharding has emerged as a good candidate that can overcome both the scalability and performance problems in blockchain. To date, there is no systematic work that analyzes the sharding protocols. To bridge this gap, this paper provides a systematic and comprehensive review on blockchain sharding techniques. We first present a general design flow of sharding protocols and then discuss key design challenges. For each challenge, we analyze and compare the techniques in state-of-the-art solutions. Finally, we discuss several potential research directions in blockchain sharding.},
booktitle = {Proceedings of the 1st ACM Conference on Advances in Financial Technologies},
pages = {41–61},
numpages = {21},
keywords = {SoK, Sharding, Consensus Protocol, Blockchain},
location = {Zurich, Switzerland},
series = {AFT '19}
}

@article{10.1145/3579845,
author = {Xu, Jie and Wang, Cong and Jia, Xiaohua},
title = {A Survey of Blockchain Consensus Protocols},
year = {2023},
issue_date = {December 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {13s},
issn = {0360-0300},
url = {https://doi.org/10.1145/3579845},
doi = {10.1145/3579845},
abstract = {Blockchain consensus protocols have been a focus of attention since the advent of Bitcoin. Although classic distributed consensus algorithms made significant contributions to the development of blockchain consensus protocols, there are still many issues to be resolved due to the complexity and diversity of the blockchain. In this survey, we summarize the state-of-the-art blockchain consensus protocols. We first introduce the theoretical basis, models, and challenges of blockchain consensus protocols. Then, we present the existing blockchain protocols in the categories of proof-based protocols, committee-based protocols, and other miscellaneous protocols. Finally, we analyze their performance and discuss future research directions by comparing existing protocols.},
journal = {ACM Comput. Surv.},
month = {jul},
articleno = {278},
numpages = {35},
keywords = {Blockchain consensus, cryptocurrency, security, scalability, decentralization}
}

@article{10.1145/3576899,
author = {Wang, Qin and Yu, Jiangshan and Chen, Shiping and Xiang, Yang},
title = {SoK: DAG-based Blockchain Systems},
year = {2023},
issue_date = {December 2023},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {55},
number = {12},
issn = {0360-0300},
url = {https://doi.org/10.1145/3576899},
doi = {10.1145/3576899},
abstract = {Limitations on high latency and low scalability of classical blockchain systems retard their adoptions and applications. Reconstructed blockchain systems have been proposed to avoid the consumption of competitive transactions caused by linear sequenced blocks. These systems, instead, structure transactions/blocks in the form of Directed Acyclic Graph (DAG) and consequently rebuild upper layer components. The promise of DAG-based blockchain systems is to enable fast confirmation (complete transactions within million seconds) and high scalability (attach transactions in parallel) without significantly compromising security. However, this field still lacks systematic work that summarises DAG techniques. To bridge the gap, this Systematization of Knowledge (SoK) provides a comprehensive analysis of ever-existing and ongoing DAG-based blockchain systems. We abstract a general model to capture the main features and identify six types of design patterns. Then, we evaluate these systems from the perspectives of structure, consensus, property, security, and performance. We further discuss the trade-off between different factors, open challenges, and the potentiality of DAG-based solutions, indicating their promising directions for future research.},
journal = {ACM Comput. Surv.},
month = {mar},
articleno = {261},
numpages = {38},
keywords = {DAG-based blockchain, SoK, performance}
}

@inproceedings{10.1145/3558535.3559780,
author = {Werner, Sam and Perez, Daniel and Gudgeon, Lewis and Klages-Mundt, Ariah and Harz, Dominik and Knottenbelt, William},
title = {SoK: Decentralized Finance (DeFi)},
year = {2023},
isbn = {9781450398619},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3558535.3559780},
doi = {10.1145/3558535.3559780},
abstract = {Decentralized Finance (DeFi), a blockchain powered peer-to-peer financial system, is mushrooming. Two years ago the total value locked in DeFi systems was approximately 700m USD, now, as of April 2022, it stands at around 150bn USD. The frenetic evolution of the ecosystem has created challenges in understanding the basic principles of these systems and their security risks. In this Systematization of Knowledge (SoK) we delineate the DeFi ecosystem along the following axes: its primitives, its operational protocol types and its security. We provide a distinction between technical security, which has a healthy literature, and economic security, which is largely unexplored, connecting the latter with new models and thereby synthesizing insights from computer science, economics and finance. Finally, we outline the open research challenges in the ecosystem across these security types.},
booktitle = {Proceedings of the 4th ACM Conference on Advances in Financial Technologies},
pages = {30–46},
numpages = {17},
keywords = {blockchain, ethereum, DeFi, decentralized finance},
location = {Cambridge, MA, USA},
series = {AFT '22}
}


@InProceedings{SokLayer2,
author="Gudgeon, Lewis
and Moreno-Sanchez, Pedro
and Roos, Stefanie
and McCorry, Patrick
and Gervais, Arthur",
editor="Bonneau, Joseph
and Heninger, Nadia",
title="SoK: Layer-Two Blockchain Protocols",
booktitle="Financial Cryptography and Data Security",
year="2020",
publisher="Springer International Publishing",
address="Cham",
pages="201--226",
abstract="Blockchains have the potential to revolutionize markets and services. However, they currently exhibit high latencies and fail to handle transaction loads comparable to those managed by traditional financial systems. Layer-two protocols, built on top of (layer-one) blockchains, avoid disseminating every transaction to the whole network by exchanging authenticated transactions off-chain. Instead, they utilize the expensive and low-rate blockchain only as a recourse for disputes. The promise of layer-two protocols is to complete off-chain transactions in sub-seconds rather than minutes or hours while retaining asset security, reducing fees and allowing blockchains to scale.",
isbn="978-3-030-51280-4"
}

@article{SokLayer2_2,
title = {A survey of Layer-two blockchain protocols},
journal = {Journal of Network and Computer Applications},
volume = {209},
pages = {103539},
year = {2023},
issn = {1084-8045},
doi = {https://doi.org/10.1016/j.jnca.2022.103539},
url = {https://www.sciencedirect.com/science/article/pii/S1084804522001801},
author = {Ankit Gangwal and Haripriya Ravali Gangavalli and Apoorva Thirupathi},
keywords = {Blockchain, , Off-chain, Scalability},
abstract = {After the success of the Bitcoin blockchain, came several cryptocurrencies and blockchain solutions in the last decade. Nonetheless, Blockchain-based systems still suffer from low transaction rates and high transaction processing latencies, which hinder blockchains’ scalability. An entire class of solutions, called Layer-1 scalability solutions, have attempted to incrementally improve such limitations by adding/modifying fundamental blockchain attributes. Recently, a completely different class of works, called Layer-2 protocols, have emerged to tackle the blockchain scalability issues using unconventional approaches. Layer-2 protocols improve transaction processing rates, periods, and fees by minimizing the use of underlying slow and costly blockchains. In fact, the main chain acts just as an instrument for trust establishment and dispute resolution among Layer-2 participants, where only a few transactions are dispatched to the main chain. Thus, Layer-2 blockchain protocols have the potential to transform the domain. However, rapid and discrete developments have resulted in diverse branches of Layer-2 protocols. In this work, we systematically create a broad taxonomy of such protocols and implementations. We discuss each Layer-2 protocol class in detail and also elucidate their respective approaches, salient features, requirements, etc. Moreover, we outline the issues related to these protocols along with a comparative discussion. Our thorough study will help further systematize the knowledge dispersed in the domain and help the readers to better understand the field of Layer-2 protocols.}
}

@ARTICLE{10468547,
  author={Rebello, Gabriel Antonio F. and Camilo, Gustavo F. and de Souza, Lucas Airam C. and Potop-Butucaru, Maria and de Amorim, Marcelo Dias and Campista, Miguel Elias M. and Costa, Luís Henrique M. K.},
  journal={IEEE Communications Surveys \& Tutorials}, 
  title={A Survey on Blockchain Scalability: From Hardware to Layer-Two Protocols}, 
  year={2024},
  volume={},
  number={},
  pages={1-1},
  keywords={Blockchains;Surveys;Scalability;Protocols;Proposals;Privacy;Lightning;blockchain;payment channel networks;rollups},
  doi={10.1109/COMST.2024.3376252}}

@ARTICLE{9718520,
  author={Yang, Jiawei and Dai, Jiahong and Gooi, Hoay Beng and Nguyen, Hung Dinh and Wang, Ping},
  journal={IEEE Transactions on Smart Grid}, 
  title={Hierarchical Blockchain Design for Distributed Control and Energy Trading Within Microgrids}, 
  year={2022},
  volume={13},
  number={4},
  pages={3133-3144},
  keywords={Blockchains;Microgrids;Peer-to-peer computing;Decentralized control;Pricing;Smart contracts;Game theory;Distributed control;peer-to-peer energy trading;cyber-security;hierarchical blockchain;smart grid},
  doi={10.1109/TSG.2022.3153693}}


@article{SADAWI2021121124,
title = {A comprehensive hierarchical blockchain system for carbon emission trading utilizing blockchain of things and smart contract},
journal = {Technological Forecasting and Social Change},
volume = {173},
pages = {121124},
year = {2021},
issn = {0040-1625},
doi = {https://doi.org/10.1016/j.techfore.2021.121124},
url = {https://www.sciencedirect.com/science/article/pii/S0040162521005576},
author = {Alia Al Sadawi and Batool Madani and Sara Saboor and Malick Ndiaye and Ghassan Abu-Lebdeh},
keywords = {Blockchain, Carbon Trading, IoT, Blockchain of Things, Greenhouse gasses (GHG), Smart Contract},
abstract = {Climate change is a major issue that has disastrous implications on the environment, which, if continued, will cause severe consequences. One of the leading causes of climate change is the emissions of harmful gases, particularly CO2. In 1997, the Kyoto protocol was signed by 192 countries, creating a system that monetizes CO2 emissions with an aim to control them. Most countries signed a carbon trading scheme, but the scheme fell short of its goals due to manipulation, lack of integrity, and multiple other challenges. This work presents an improved blockchain-based approach to achieve the objective of monitoring the reduction of carbon emissions. Blockchain's distinct features such as security, immutability, transparency, traceability, and trust, make it a robust and reliable solution for the carbon trading market. Previous Blockchain-based proposals were not comprehensive, practical, applicable, or efficient enough to form an effective solution. This research addresses the current gaps and proposes a comprehensive three-stage hierarchical blockchain framework that employs smart contracts in Blockchain of Things (BoT) to ensure integrity in the system and reach fair trade status that favors the environment over companies' cost reductions and profit-making. The result is an optimized carbon emission trading framework, fully transparent with automated trading and control mechanisms.}
}

@article{LUO2022118167,
title = {A hierarchical blockchain architecture based V2G market trading system},
journal = {Applied Energy},
volume = {307},
pages = {118167},
year = {2022},
issn = {0306-2619},
doi = {https://doi.org/10.1016/j.apenergy.2021.118167},
url = {https://www.sciencedirect.com/science/article/pii/S0306261921014392},
author = {Qingsong Luo and Yimin Zhou and Weicheng Hou and Lei Peng},
keywords = {Intelligent contract, Blockchain, Cellular automata, Trading system, Vehicle to Grid},
abstract = {Along with the increasing prosperity of electric vehicles (EVs), the large-scale penetration of EVs in V2G (Vehicle to Grid) trading market brings difficulties and security issues in the operation of the energy market. The blockchain has the characteristics of security, transparency, decentralization and traceability, which provides an alternative for complex energy market operation in a secure environment. In this paper, a novel hierarchical blockchain architecture is constructed for the V2G trading system including Data Blockchain layer, Operation Blockchain layer and Transaction Blockchain layer. The intelligent contracts of the V2G trading, two-level auction and optimization strategies are designed for scheduling EVs orderly charge and discharge to participate in the grid load regulation so as to minimize the total load variance of the grid and realize reasonable benefit distribution among the involved market entities, i.e., EVs, aggregators and grid. Based on the V2G trading characteristics, a transaction manager with four optimization strategies are designed to further optimize the transaction generation process. The CA (cellular automata) based simulation experiments are performed to verify the effectiveness of the proposed V2G trading system.}
}

@article{chai2020hierarchical,
  title={A hierarchical blockchain-enabled federated learning algorithm for knowledge sharing in internet of vehicles},
  author={Chai, Haoye and Leng, Supeng and Chen, Yijin and Zhang, Ke},
  journal={IEEE Transactions on Intelligent Transportation Systems},
  volume={22},
  number={7},
  pages={3975--3986},
  year={2020},
  publisher={IEEE}
}

@article{sarhan2022hbfl,
  title={HBFL: A hierarchical blockchain-based federated learning framework for collaborative IoT intrusion detection},
  author={Sarhan, Mohanad and Lo, Wai Weng and Layeghy, Siamak and Portmann, Marius},
  journal={Computers and Electrical Engineering},
  volume={103},
  pages={108379},
  year={2022},
  publisher={Elsevier}
}

@ARTICLE{10453360,
  author={Tong, Ziheng and Wang, Jingjing and Hou, Xiangwang and Chen, Jianrui and Jiao, Zihan and Liu, Jianwei},
  journal={IEEE Internet of Things Journal}, 
  title={Blockchain-Based Trustworthy and Efficient Hierarchical Federated Learning for UAV-Enabled IoT Networks}, 
  year={2024},
  volume={},
  number={},
  pages={1-1},
  keywords={Autonomous aerial vehicles;Data models;Federated learning;Blockchains;Internet of Things;Computational modeling;Training;Hierarchical federated learning (HFL);UAV networks;blockchain;IoT;deep reinforcement learning},
  doi={10.1109/JIOT.2024.3370964}}


@INPROCEEDINGS{9900546,
  author={Aloqaily, Moayad and Al Ridhawi, Ismaeel and Karray, Fakhri and Guizani, Mohsen},
  booktitle={2022 International Balkan Conference on Communications and Networking (BalkanCom)}, 
  title={Towards Blockchain-based Hierarchical Federated Learning for Cyber-Physical Systems}, 
  year={2022},
  volume={},
  number={},
  pages={46-50},
  keywords={Training;Performance evaluation;Federated learning;Clustering algorithms;Cyber-physical systems;Blockchains;Fourth Industrial Revolution;Blockchain;Cyber-physical systems;Federated Learning;Industry 4.0},
  doi={10.1109/BalkanCom55633.2022.9900546}}

@ARTICLE{10167763,
  author={Huang, Xiaoge and Wu, Yuhang and Liang, Chengchao and Chen, Qianbin and Zhang, Jie},
  journal={IEEE Internet of Things Journal}, 
  title={Distance-Aware Hierarchical Federated Learning in Blockchain-Enabled Edge Computing Network}, 
  year={2023},
  volume={10},
  number={21},
  pages={19163-19176},
  keywords={Data models;Computational modeling;Servers;Blockchains;Training;Internet of Things;Federated learning;Blockchain;data distance;hierarchical federated learning (HFL);learning latency},
  doi={10.1109/JIOT.2023.3279983}}


@ARTICLE{9920221,
  author={Stephanie, Veronika and Khalil, Ibrahim and Atiquzzaman, Mohammed and Yi, Xun},
  journal={IEEE Transactions on Industrial Informatics}, 
  title={Trustworthy Privacy-Preserving Hierarchical Ensemble and Federated Learning in Healthcare 4.0 With Blockchain}, 
  year={2023},
  volume={19},
  number={7},
  pages={7936-7945},
  keywords={Computational modeling;Data models;Blockchains;Hospitals;Servers;Data privacy;Privacy;Artificial intelligent (AI);blockchain;deep learning (DL);ensemble learning;federated learning (FL);privacy preservation;secure multiparty computation},
  doi={10.1109/TII.2022.3214998}}


@ARTICLE{9919199,
  author={Wang, Xiaofei and Zhao, Yunfeng and Qiu, Chao and Liu, Zhicheng and Nie, Jiangtian and Leung, Victor C. M.},
  journal={IEEE Journal on Selected Areas in Communications}, 
  title={InFEDge: A Blockchain-Based Incentive Mechanism in Hierarchical Federated Learning for End-Edge-Cloud Communications}, 
  year={2022},
  volume={40},
  number={12},
  pages={3325-3342},
  keywords={Game theory;Computational modeling;Servers;Federated learning;Computer architecture;Cloud computing;Blockchains;Federated learning;incentive mechanism;blockchain;edge intelligence;game theory},
  doi={10.1109/JSAC.2022.3213323}}

  @ARTICLE{9786753,
  author={Xu, Ronghua and Chen, Yu},
  journal={IEEE Transactions on Network and Service Management}, 
  title={μDFL: A Secure Microchained Decentralized Federated Learning Fabric Atop IoT Networks}, 
  year={2022},
  volume={19},
  number={3},
  pages={2677-2688},
  keywords={Training;Data models;Computational modeling;Data privacy;Consensus protocol;Privacy;Collaborative work;Internet of Things (IoT);federated learning;hierarchical blockchain;proof of credit;security;privacy},
  doi={10.1109/TNSM.2022.3179892}}



@ARTICLE{Wahoo,
  author={Dai, Xiaohai and Zhang, Zhaonan and Guo, Zhengxuan and Ding, Chaozheng and Xiao, Jiang and Xie, Xia and Hao, Rui and Jin, Hai},
  journal={IEEE Transactions on Information Forensics and Security}, 
  title={Wahoo: A DAG-based BFT Consensus with Low Latency and Low Communication Overhead}, 
  year={2024},
  volume={},
  number={},
  pages={1-1},
  keywords={Consensus protocol;Safety;Throughput;Fault tolerant systems;Fault tolerance;Directed acyclic graph;Computer science;aaa},
  doi={10.1109/TIFS.2024.3409082}}


@article{SharDag,
  title={SharDAG: Scaling DAG-based Blockchains via Adaptive Sharding},
  author={Cheng, Feng and Xiao, Jiang and Liu, Cunyang and Zhang, Shijie and Zhou, Yifan and Li, Bo and Li, Baochun and Jin, Hai},
  journal={2024 40th IEEE International Conference on Data Engineering (ICDE)}, 
  year={2024},
  address = {Utrecht, Netherlands},

}

@article{10.1145/3503042,
author = {Wang, Xin and Duan, Sisi and Clavin, James and Zhang, Haibin},
title = {BFT in Blockchains: From Protocols to Use Cases},
year = {2022},
issue_date = {January 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {54},
number = {10s},
issn = {0360-0300},
url = {https://doi.org/10.1145/3503042},
doi = {10.1145/3503042},
abstract = {A blockchain is a distributed system that achieves strong security guarantees in storing, managing, and processing data. All blockchains achieve a common goal: building a decentralized system that provides a trustworthy service in an untrustworthy environment. A blockchain builds a Byzantine fault-tolerant (BFT) system in which decentralized nodes run a protocol to reach an agreement on the common system state. In this article, we focus on the research of BFT protocols. In particular, we categorize BFT protocols according to both the system models and workflow. We seek to answer these important questions: How has the research in BFT evolved in the past four decades, especially with the rise of blockchains? What are the driven needs for BFT research in the future?},
journal = {ACM Comput. Surv.},
month = {sep},
articleno = {209},
numpages = {37},
keywords = {Blockchains, consensus, Byzantine fault tolerance, survey}
}

@INPROCEEDINGS{FastFabric,
  author={Gorenflo, Christian and Lee, Stephen and Golab, Lukasz and Keshav, Srinivasan},
  booktitle={2019 IEEE International Conference on Blockchain and Cryptocurrency (ICBC)}, 
  title={FastFabric: Scaling Hyperledger Fabric to 20,000 Transactions per Second}, 
  year={2019},
  volume={},
  number={},
  pages={455-463},
  keywords={Fabrics;Blockchain;Peer-to-peer computing;Distributed ledger;Throughput;Proposals;Payloads},
  doi={10.1109/BLOC.2019.8751452}}

@inproceedings{narwhaltusk,
  author    = {Danezis, George and Kokoris-Kogias, Lefteris and Sonnino, Alberto and Spiegelman, Alexander},
  title     = {Narwhal and Tusk: A DAG-Based Mempool and Efficient BFT Consensus},
  year      = {2022},
  isbn      = {9781450391627},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3492321.3519594},
  doi       = {10.1145/3492321.3519594},
  abstract  = {We propose separating the task of reliable transaction dissemination from transaction ordering, to enable high-performance Byzantine fault-tolerant quorum-based consensus. We design and evaluate a mempool protocol, Narwhal, specializing in high-throughput reliable dissemination and storage of causal histories of transactions. Narwhal tolerates an asynchronous network and maintains high performance despite failures. Narwhal is designed to easily scale-out using multiple workers at each validator, and we demonstrate that there is no foreseeable limit to the throughput we can achieve.Composing Narwhal with a partially synchronous consensus protocol (Narwhal-HotStuff) yields significantly better throughput even in the presence of faults or intermittent loss of liveness due to asynchrony. However, loss of liveness can result in higher latency. To achieve overall good performance when faults occur we design Tusk, a zero-message overhead asynchronous consensus protocol, to work with Narwhal. We demonstrate its high performance under a variety of configurations and faults.As a summary of results, on a WAN, Narwhal-Hotstuff achieves over 130,000 tx/sec at less than 2-sec latency compared with 1,800 tx/sec at 1-sec latency for Hotstuff. Additional workers increase throughput linearly to 600,000 tx/sec without any latency increase. Tusk achieves 160,000 tx/sec with about 3 seconds latency. Under faults, both protocols maintain high throughput, but Narwhal-HotStuff suffers from increased latency.},
  booktitle = {Proceedings of the Seventeenth European Conference on Computer Systems},
  pages     = {34–50},
  numpages  = {17},
  keywords  = {Byzantine fault tolerant, consensus protocol},
  location  = {Rennes, France},
  series    = {EuroSys '22}
}


@article{dylochain,
  author    = {Jo, Yongrae and Park, Chanik},
  title     = {A Hierarchical Blockchain supporting Dynamic Locality by Extending Execute-Order-Validate Architecture},
  year      = {2024},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3688811},
  doi       = {10.1145/3688811},
  abstract  = {Blockchain scalability is an active area of research. One of the promising approaches is the execute-order-validate (X-O-V) blockchain architecture, which leverages high concurrency. Meanwhile, many transactions exhibit dynamic locality—a workload characteristic with a high degree of locality that changes over time (e.g., due to the mobility of devices). In this paper, we propose DyloChain, a hierarchical blockchain supporting dynamic locality by extending the X-O-V architecture across sharding zones. In DyloChain's hierarchy, higher-level servers (called M-nodes) are responsible for cross-zone communication with a main chain to ensure global consistency and availability, while lower-level servers (called L-nodes) validate local blocks with a local chain. To support dynamic locality, DyloChain suggests an order-execute-order-validate (O-X-O-V) transaction processing model that extends the X-O-V model to accommodate the hierarchical structure. Specifically, the O-X-O-V model optimizes efficiency through speculative local updates on each local chain (O-X) for the early removal of potential conflicts within a zone and enables high parallelism across zones. Subsequently, the model aggregates these local blocks onto the main chain (O-V), ensuring a globally consistent total order across zones. This is facilitated by an extended validation procedure that detects interferences between concurrently dependent transactions across zones. DyloChain resolves interferences using a state synchronization protocol that synchronizes the corresponding main states of the interfered local states into the involved local chains. DyloChain improves locality by employing a state reshard protocol that transfers a user's state ownership between source and destination local chains by atomically committing user-issued reshard requests to the involved chains. We implement and conduct comprehensive performance evaluations of DyloChain under various configurations.},
  note      = {Just Accepted},
  journal   = {Distrib. Ledger Technol.},
  month     = {aug},
  keywords  = {Blockchain, Hierarchy, Sharding, Execute-Order-Validate, Dynamic Locality}
}

@inproceedings{BlockSTM,
  author    = {Gelashvili, Rati and Spiegelman, Alexander and Xiang, Zhuolun and Danezis, George and Li, Zekun and Malkhi, Dahlia and Xia, Yu and Zhou, Runtian},
  title     = {Block-STM: Scaling Blockchain Execution by Turning Ordering Curse to a Performance Blessing},
  year      = {2023},
  isbn      = {9798400700156},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3572848.3577524},
  doi       = {10.1145/3572848.3577524},
  abstract  = {Block-STM is a parallel execution engine for smart contracts, built around the principles of Software Transactional Memory. Transactions are grouped in blocks, and every execution of the block must yield the same deterministic outcome. Block-STM further enforces that the outcome is consistent with executing transactions according to a preset order, leveraging this order to dynamically detect dependencies and avoid conflicts during speculative transaction execution. At the core of Block-STM is a novel, low-overhead collaborative scheduler of execution and validation tasks.Block-STM is implemented on the main branch of the Diem Blockchain code-base and runs in production at Aptos. Our evaluation demonstrates that Block-STM is adaptive to workloads with different conflict rates and utilizes the inherent parallelism therein. Block-STM achieves up to 110k tps in the Diem benchmarks and up to 170k tps in the Aptos Benchmarks, which is a 20x and 17x improvement over the sequential baseline with 32 threads, respectively. The throughput on a contended workload is up to 50k tps and 80k tps in Diem and Aptos benchmarks, respectively.},
  booktitle = {Proceedings of the 28th ACM SIGPLAN Annual Symposium on Principles and Practice of Parallel Programming},
  pages     = {232–244},
  numpages  = {13},
  keywords  = {STM, blockchain, parallel execution},
  location  = {Montreal, QC, Canada},
  series    = {PPoPP '23}
}

@inproceedings{PEEP,
  author    = {Chen, Zhihao and Qi, Xiaodong and Du, Xiaofan and Zhang, Zhao and Jin, Cheqing},
  title     = {PEEP: A Parallel Execution Engine for Permissioned Blockchain Systems},
  year      = {2021},
  isbn      = {978-3-030-73199-1},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  url       = {https://doi.org/10.1007/978-3-030-73200-4_24},
  doi       = {10.1007/978-3-030-73200-4_24},
  abstract  = {Unlike blockchain systems in public settings, the stricter trust model in permissioned blockchain opens an opportunity for pursuing higher throughput. Recently, as the consensus protocols are developed significantly, the existing serial execution manner of transactions becomes a key factor in limiting overall performance. However, it is not easy to extend the concurrency control protocols, widely used in database systems, to blockchain systems. In particular, there are two challenges to achieve parallel execution of transactions in blockchain as follows: (i) the final results of different replicas may diverge since most protocols just promise the effect of transactions equivalent to some serial order but this order may vary for every concurrent execution; and (ii) almost all state trees that are used to manage states of blockchain do not support fast concurrent updates. In the view of above challenges, we propose a parallel execution engine called PEEP, towards permissioned blockchain systems. Specifically, PEEP employs a deterministic concurrency mechanism to obtain a predetermined serial order for parallel execution, and offers parallel update operations on state tree, which can be implemented on any radix tree with Merkle property. Finally, the extensive experiments show that PEEP outperforms existing serial execution greatly.},
  booktitle = {Database Systems for Advanced Applications: 26th International Conference, DASFAA 2021, Taipei, Taiwan, April 11–14, 2021, Proceedings, Part III},
  pages     = {341–357},
  numpages  = {17},
  keywords  = {Blockchain, Permissioned, Execution optimization},
  location  = {Taipei, Taiwan}
}

@article{PaVM,
  author   = {Fang, Yaozheng and Zhou, Zhiyuan and Dai, Surong and Yang, Jinni and Zhang, Hui and Lu, Ye},
  journal  = {IEEE Transactions on Parallel and Distributed Systems},
  title    = {PaVM: A Parallel Virtual Machine for Smart Contract Execution and Validation},
  year     = {2024},
  volume   = {35},
  number   = {1},
  pages    = {186-202},
  keywords = {Smart contracts;Blockchains;Runtime;Virtual machining;Peer-to-peer computing;Instruction sets;Synchronization;Architectural design;blockchain;smart contract;virtual machine},
  doi      = {10.1109/TPDS.2023.3334208}
}

@inproceedings{DMVCC,
  author    = {X. Qi and J. Jiao and Y. Li},
  booktitle = {2023 IEEE 43rd International Conference on Distributed Computing Systems (ICDCS)},
  title     = {Smart Contract Parallel Execution with Fine-Grained State Accesses},
  year      = {2023},
  volume    = {},
  issn      = {},
  pages     = {841-852},
  abstract  = {As various optimizations being proposed recently, the performance of blockchains is no longer limited by the consensus protocols, successfully scaling to thousands of transactions per second. To further improve blockchains&#x27; throughput, exploiting the parallelism in smart contract executions becomes a clear solution to resolve the new performance bottleneck. The existing techniques perform concurrency control on smart contract transactions based on pre-determined read/write sets, which can hardly be calculated precisely. As a result, many parallelization opportunities are missed in order to maintain the correctness of transaction executions. In this paper, we propose a novel execution scheduling framework, DMVCC, to further increase the parallelism in smart contract executions, via more fine-grained control on state accesses. DMVCC improves over existing techniques with two key features: (1) write versioning, eliminating the write-write conflicts between transactions, and (2) early-write visibility, enabling other transactions to read the writes from a transaction earlier, before it being committed. We integrated DMVCC into the Ethereum Virtual Machine, to evaluate its performance in real-world blockchain environments. The experimental results show that DMVCC doubles the parallel speedup achievable to a 20 x overall speedup, compared with the serial execution baseline, approaching the theoretical optimum.},
  keywords  = {smart contracts;parallel processing;throughput;virtual machining;concurrency control;consensus protocol;distributed computing},
  doi       = {10.1109/ICDCS57875.2023.00068},
  url       = {https://doi.ieeecomputersociety.org/10.1109/ICDCS57875.2023.00068},
  publisher = {IEEE Computer Society},
  address   = {Los Alamitos, CA, USA},
  month     = {jul}
}

@inproceedings{HieraChain,
  author    = {Tang, Haibo and Zhang, Huan and Zhang, Zhenyu and Zhang, Zhao and Jin, Cheqing and Zhou, Aoying},
  title     = {Towards High-performance Transactions via Hierarchical Blockchain Sharding},
  year      = {2024},
  isbn      = {978-3-031-69576-6},
  publisher = {Springer-Verlag},
  address   = {Berlin, Heidelberg},
  url       = {https://doi.org/10.1007/978-3-031-69577-3_26},
  doi       = {10.1007/978-3-031-69577-3_26},
  abstract  = {Blockchain sharding, a promising approach to improve system performance, divides the network into several small parallel working shards. However, the performance of existing sharded blockchain systems may degrade seriously due to the existence of cross-shard transactions. To overcome such drawbacks, we propose a blockchain system called HieraChain to process transactions with robust cross-shard transactions tolerance, based on a novel hierarchical sharding architecture. The upper-layer shards order the cross-shard transactions and the participants process them asynchronously to pipeline the transactions ordering. Furthermore, HieraChain proposes an optimized locality-aware protocol to trade off the local access patterns and the induced remote access events. Extensive experimental results demonstrate that HieraChain outperforms the state-of-the-art approaches significantly in the presence of cross-shard transactions, achieving up to 3\texttimes{} and 2\texttimes{} higher throughput than Saguaro and SharPer under general workload respectively. Moreover, our locality-aware approach further reduces transaction latency by 68 \% and 51\% compared to our basic approach and traditional baselines, respectively.},
  booktitle = {Euro-Par 2024: Parallel Processing: 30th European Conference on Parallel and Distributed Processing, Madrid, Spain, August 26–30, 2024, Proceedings, Part I},
  pages     = {373–388},
  numpages  = {16},
  keywords  = {cross-shard transaction, hierarchical sharding, locality-awareness, blockchains},
  location  = {Madrid, Spain}
}

@misc{PartialSyncBullshark,
  title         = {Bullshark: The Partially Synchronous Version},
  author        = {Alexander Spiegelman and Neil Giridharan and Alberto Sonnino and Lefteris Kokoris-Kogias},
  year          = {2022},
  eprint        = {2209.05633},
  archiveprefix = {arXiv},
  primaryclass  = {cs.DC},
  url           = {https://arxiv.org/abs/2209.05633}
}

@article{10539974,
  author   = {Li, Meiqi and Luo, Xinyi and Xue, Kaiping and Xue, Yingjie and Sun, Wentuo and Li, Jian},
  journal  = {IEEE Transactions on Information Forensics and Security},
  title    = {A Secure and Efficient Blockchain Sharding Scheme via Hybrid Consensus and Dynamic Management},
  year     = {2024},
  volume   = {19},
  number   = {},
  pages    = {5911-5924},
  keywords = {Sharding;Blockchains;Security;Scalability;Safety;Threat modeling;System performance;Blockchain;sharding;distributed consensus},
  doi      = {10.1109/TIFS.2024.3406145}
}

@misc{Trail,
  title         = {TRAIL: Cross-Shard Validation for Cryptocurrency Byzantine Shard Protection},
  author        = {Mitch Jacovetty and Joseph Oglio and Mikhail Nesterenko and Gokarna Sharma},
  year          = {2024},
  eprint        = {2405.07146},
  archiveprefix = {arXiv},
  primaryclass  = {cs.DC},
  url           = {https://arxiv.org/abs/2405.07146}
}

@inproceedings{GearBox,
  author    = {David, Bernardo and Magri, Bernardo and Matt, Christian and Nielsen, Jesper Buus and Tschudi, Daniel},
  title     = {GearBox: Optimal-size Shard Committees by Leveraging the Safety-Liveness Dichotomy},
  year      = {2022},
  isbn      = {9781450394505},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3548606.3559375},
  doi       = {10.1145/3548606.3559375},
  abstract  = {Sharding is an emerging technique to overcome scalability issues on blockchain based public ledgers. Without sharding, every node in the network has to listen to and process all ledger protocol messages. The basic idea of sharding is to parallelize the ledger protocol: the nodes are divided into smaller subsets that each take care of a fraction of the original load by executing lighter instances of the ledger protocol, also called shards. The smaller the shards, the higher the efficiency, as by increasing parallelism there is less overhead in the shard consensus.In this vein, we propose a novel approach that leverages the sharding safety-liveness dichotomy. We separate the liveness and safety in shard consensus, allowing us to dynamically tune shard parameters to achieve essentially optimal efficiency for the current corruption ratio of the system. We start by sampling a relatively small shard (possibly with a small honesty ratio), and we carefully trade-off safety for liveness in the consensus mechanism to tolerate small honesty without losing safety. However, for a shard to be live, a higher honesty ratio is required in the worst case. To detect liveness failures, we use a so-called control chain that is always live and safe. Shards that are detected to be not live are resampled with increased shard size and liveness tolerance until they are live, ensuring that all shards are always safe and run with optimal efficiency. As a concrete example, considering a population of 10K parties with at most 30\% corruption and 60-bit security, previous designs required over 5800 parties in each shard to guarantee security. Our design requires only 1713 parties in the worst case with maximal corruption, and in the optimistic case works with only~35 parties without compromising security.Moreover, in this highly concurrent execution setting, it is paramount to guarantee that both the sharded ledger protocol and its sub protocols (i.e., the shards) are secure under composition. To prove the security of our approach, we present ideal functionalities capturing a sharded ledger as well as ideal functionalities capturing the control chain and individual shard consensus, which needs adjustable liveness. We further formalize our protocols and prove that they securely realize the sharded ledger functionality in the UC framework.},
  booktitle = {Proceedings of the 2022 ACM SIGSAC Conference on Computer and Communications Security},
  pages     = {683–696},
  numpages  = {14},
  keywords  = {sharding, blockchain},
  location  = {Los Angeles, CA, USA},
  series    = {CCS '22}
}

@inproceedings{Reticulum,
  author    = {Yibin Xu and
               Jingyi Zheng and
               Boris D{\"{u}}dder and
               Tijs Slaats and
               Yongluan Zhou},
  title     = {A Two-Layer Blockchain Sharding Protocol Leveraging Safety and Liveness
               for Enhanced Performance},
  booktitle = {31st Annual Network and Distributed System Security Symposium, {NDSS}
               2024, San Diego, California, USA, February 26 - March 1, 2024},
  publisher = {The Internet Society},
  year      = {2024},
  url       = {https://www.ndss-symposium.org/ndss-paper/a-two-layer-blockchain-sharding-protocol-leveraging-safety-and-liveness-for-enhanced-performance/},
  timestamp = {Tue, 24 Sep 2024 17:19:50 +0200},
  biburl    = {https://dblp.org/rec/conf/ndss/XuZDSZ24.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{Jenga,
  author    = {Li, Mingzhe and Lin, You and Zhang, Jin and Wang, Wei},
  booktitle = {2022 IEEE 42nd International Conference on Distributed Computing Systems (ICDCS)},
  title     = {Jenga: Orchestrating Smart Contracts in Sharding-Based Blockchain for Efficient Processing},
  year      = {2022},
  volume    = {},
  number    = {},
  pages     = {133-143},
  keywords  = {Scalability;Smart contracts;Performance gain;Throughput;Consensus protocol;Distributed computing},
  doi       = {10.1109/ICDCS54860.2022.00022}
}

@article{MeepoJournal,
  author   = {Zheng, Peilin and Xu, Quanqing and Zheng, Zibin and Zhou, Zhiyuan and Yan, Ying and Zhang, Hui},
  journal  = {IEEE Journal on Selected Areas in Communications},
  title    = {Meepo: Multiple Execution Environments per Organization in Sharded Consortium Blockchain},
  year     = {2022},
  volume   = {40},
  number   = {12},
  pages    = {3562-3574},
  keywords = {Blockchains;Smart contracts;Servers;Throughput;Topology;Merging;Electronic commerce;Blockchain;sharding;smart contract},
  doi      = {10.1109/JSAC.2022.3213326}
}

@inproceedings{OptMe,
  author    = { Ryu, Donghyeon and Park, Chanik },
  booktitle = { 2024 SC24: International Conference for High Performance Computing, Networking, Storage and Analysis SC },
  title     = {{ Toward High-Performance Blockchain System by Blurring the Line between Ordering and Execution }},
  year      = {2024},
  volume    = {},
  issn      = {},
  pages     = {391-406},
  abstract  = { The primary bottleneck of blockchain is shifting from consensus to execution due to recent advances in DAGbased consensus algorithms supporting over 100k TPS. Many blockchain systems segregate execution from ordering, missing the opportunity to harness potential parallelism in consensusproduced batches. In this paper, we propose a new deterministically orderable concurrency control algorithm, OptME, which improves the performance of execution phase by exploiting inherent parallelism among transactions. This algorithm analyzes transaction dependencies to extract parallelism, and determines the total order of transaction execution. OptME consists of three steps: (1) building a transaction dependency graph, (2) generating a parallel execution schedule, and (3) executing transactions based on the schedule. We employ several optimizations, including parallel dependency graph construction, early abort detection, and efficient reordering with an optimistic assumption. Our evaluation demonstrates that OptME achieves up to 350k TPS and outperforms a state-of-the-art concurrency control algorithm, even under high contention scenarios. },
  keywords  = {Distributed databases;Blockchains;Smart contracts;Concurrency control;Scheduling algorithms},
  doi       = {10.1109/SC41406.2024.00033},
  url       = {https://doi.ieeecomputersociety.org/10.1109/SC41406.2024.00033},
  publisher = {IEEE Computer Society},
  address   = {Los Alamitos, CA, USA},
  month     = Nov
}


@inproceedings{Swift,
  author    = {Kumar, Gautam and Dukkipati, Nandita and Jang, Keon and Wassel, Hassan M. G. and Wu, Xian and Montazeri, Behnam and Wang, Yaogong and Springborn, Kevin and Alfeld, Christopher and Ryan, Michael and Wetherall, David and Vahdat, Amin},
  title     = {Swift: Delay is Simple and Effective for Congestion Control in the Datacenter},
  year      = {2020},
  isbn      = {9781450379557},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3387514.3406591},
  doi       = {10.1145/3387514.3406591},
  abstract  = {We report on experiences with Swift congestion control in Google datacenters. Swift targets an end-to-end delay by using AIMD control, with pacing under extreme congestion. With accurate RTT measurement and care in reasoning about delay targets, we find this design is a foundation for excellent performance when network distances are well-known. Importantly, its simplicity helps us to meet operational challenges. Delay is easy to decompose into fabric and host components to separate concerns, and effortless to deploy and maintain as a congestion signal while the datacenter evolves. In large-scale testbed experiments, Swift delivers a tail latency of <50μs for short RPCs, with near-zero packet drops, while sustaining ~100Gbps throughput per server. This is a tail of <3x the minimal latency at a load close to 100\%. In production use in many different clusters, Swift achieves consistently low tail completion times for short RPCs, while providing high throughput for long RPCs. It has loss rates that are at least 10x lower than a DCTCP protocol, and handles O(10k) incasts that sharply degrade with DCTCP.},
  booktitle = {Proceedings of the Annual Conference of the ACM Special Interest Group on Data Communication on the Applications, Technologies, Architectures, and Protocols for Computer Communication},
  pages     = {514–528},
  numpages  = {15},
  keywords  = {Congestion Control, Datacenter Transport, Performance Isolation},
  location  = {Virtual Event, USA},
  series    = {SIGCOMM '20}
}

@article{10.1145/2043164.2018443,
  author     = {Wilson, Christo and Ballani, Hitesh and Karagiannis, Thomas and Rowtron, Ant},
  title      = {Better never than late: meeting deadlines in datacenter networks},
  year       = {2011},
  issue_date = {August 2011},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {41},
  number     = {4},
  issn       = {0146-4833},
  url        = {https://doi.org/10.1145/2043164.2018443},
  doi        = {10.1145/2043164.2018443},
  abstract   = {The soft real-time nature of large scale web applications in today's datacenters, combined with their distributed workflow, leads to deadlines being associated with the datacenter application traffic. A network flow is useful, and contributes to application throughput and operator revenue if, and only if, it completes within its deadline. Today's transport pro- tocols (TCP included), given their Internet origins, are agnostic to such flow deadlines. Instead, they strive to share network resources fairly. We show that this can hurt application performance.Motivated by these observations, and other (previously known) deficiencies of TCP in the datacenter environment, this paper presents the design and implementation of D3, a deadline-aware control protocol that is customized for the datacenter environment. D3 uses explicit rate control to apportion bandwidth according to flow deadlines. Evaluation from a 19-node, two-tier datacenter testbed shows that D3, even without any deadline information, easily outper- forms TCP in terms of short flow latency and burst tolerance. Further, by utilizing deadline information, D3 effectively doubles the peak load that the datacenter network cansupport.},
  journal    = {SIGCOMM Comput. Commun. Rev.},
  month      = aug,
  pages      = {50–61},
  numpages   = {12},
  keywords   = {sla, rate control, online services, deadline, datacenter}
}

@inproceedings{BetterNeverThanLate,
  author    = {Wilson, Christo and Ballani, Hitesh and Karagiannis, Thomas and Rowtron, Ant},
  title     = {Better never than late: meeting deadlines in datacenter networks},
  year      = {2011},
  isbn      = {9781450307970},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2018436.2018443},
  doi       = {10.1145/2018436.2018443},
  abstract  = {The soft real-time nature of large scale web applications in today's datacenters, combined with their distributed workflow, leads to deadlines being associated with the datacenter application traffic. A network flow is useful, and contributes to application throughput and operator revenue if, and only if, it completes within its deadline. Today's transport pro- tocols (TCP included), given their Internet origins, are agnostic to such flow deadlines. Instead, they strive to share network resources fairly. We show that this can hurt application performance.Motivated by these observations, and other (previously known) deficiencies of TCP in the datacenter environment, this paper presents the design and implementation of D3, a deadline-aware control protocol that is customized for the datacenter environment. D3 uses explicit rate control to apportion bandwidth according to flow deadlines. Evaluation from a 19-node, two-tier datacenter testbed shows that D3, even without any deadline information, easily outper- forms TCP in terms of short flow latency and burst tolerance. Further, by utilizing deadline information, D3 effectively doubles the peak load that the datacenter network cansupport.},
  booktitle = {Proceedings of the ACM SIGCOMM 2011 Conference},
  pages     = {50–61},
  numpages  = {12},
  keywords  = {sla, rate control, online services, deadline, datacenter},
  location  = {Toronto, Ontario, Canada},
  series    = {SIGCOMM '11}
}



@inproceedings{VFT,
  author    = {Porto, Daniel and Leit\~{a}o, Jo\~{a}o and Li, Cheng and Clement, Allen and Kate, Aniket and Junqueira, Flavio and Rodrigues, Rodrigo},
  title     = {Visigoth fault tolerance},
  year      = {2015},
  isbn      = {9781450332385},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/2741948.2741979},
  doi       = {10.1145/2741948.2741979},
  abstract  = {We present a new technique for designing distributed protocols for building reliable stateful services called Visigoth Fault Tolerance (VFT). VFT introduces the Visigoth model, which makes it possible to calibrate the timing assumptions of a system using a threshold of slow processes or messages, and also to distinguish between non-malicious arbitrary faults and correlated attack scenarios. This enables solutions that leverage the characteristics of data center systems, namely their secure environment and predictable performance, in order to allow replicated systems to be more efficient with respect to the utilization of resources than those designed under asynchrony and Byzantine assumptions, while avoiding the need to make a system synchronous, or to restrict failure modes to silent crashes. We implemented a VFT protocol for a state machine replication library, and ran several benchmarks. Our evaluation shows that VFT has comparable performance to existing schemes and brings significant benefits in terms of the throughput per dollar, i.e., the server cost for sustaining a certain level of request execution.},
  booktitle = {Proceedings of the Tenth European Conference on Computer Systems},
  articleno = {8},
  numpages  = {14},
  location  = {Bordeaux, France},
  series    = {EuroSys '15}
}

@inproceedings{SyncHotStuff,
  author    = {Abraham, Ittai and Malkhi, Dahlia and Nayak, Kartik and Ren, Ling and Yin, Maofan},
  booktitle = {2020 IEEE Symposium on Security and Privacy (SP)},
  title     = {Sync HotStuff: Simple and Practical Synchronous State Machine Replication},
  year      = {2020},
  volume    = {},
  number    = {},
  pages     = {106-118},
  keywords  = {Protocols;Synchronization;Steady-state;Delays;Standards;Safety;Proposals},
  doi       = {10.1109/SP40000.2020.00044}
}

@inproceedings{MultiThresholdBFT,
  author    = {Momose, Atsuki and Ren, Ling},
  title     = {Multi-Threshold Byzantine Fault Tolerance},
  year      = {2021},
  isbn      = {9781450384544},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3460120.3484554},
  doi       = {10.1145/3460120.3484554},
  abstract  = {Classic Byzantine fault tolerant (BFT) protocols are designed for a specific timing model, most often one of the following: synchronous, asynchronous or partially synchronous. It is well known that the timing model and fault tolerance threshold present inherent trade-offs. Synchronous protocols tolerate up to n/2 Byzantine faults, while asynchronous or partially synchronous protocols tolerate only up to n/3 Byzantine faults. In this work, we generalize the fault thresholds of BFT and introduce a new problem called multi-threshold BFT. Multi-threshold BFT has four separate fault thresholds for safety and liveness under synchrony and asynchrony (or partial-synchrony), respectively. Decomposing the fault thresholds in this way allows us to design protocols that provide meaningful fault tolerance under both synchrony and asynchrony (or partial synchrony). We establish tight fault thresholds bounds for multi-threshold BFT and present protocols achieving them. As an example, we show a BFT state machine replication (SMR) protocol that tolerates up to 2n/3 faults for safety under synchrony while tolerating up to n/3 faults for other scenarios (liveness under synchrony as well as safety and liveness under partial synchrony). This is strictly stronger than classic partially synchronous SMR protocols. We also present a general framework to transform known partially synchronous or asynchronous BFT SMR protocols to additionally enjoy the optimal 2n/3 fault tolerance for safety under synchrony.},
  booktitle = {Proceedings of the 2021 ACM SIGSAC Conference on Computer and Communications Security},
  pages     = {1686–1699},
  numpages  = {14},
  keywords  = {distributed systems, byzantine fault tolerance, blockchain},
  location  = {Virtual Event, Republic of Korea},
  series    = {CCS '21}
}

@article{FLPImpossibilityResult,
  author     = {Fischer, Michael J. and Lynch, Nancy A. and Paterson, Michael S.},
  title      = {Impossibility of distributed consensus with one faulty process},
  year       = {1985},
  issue_date = {April 1985},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {32},
  number     = {2},
  issn       = {0004-5411},
  url        = {https://doi.org/10.1145/3149.214121},
  doi        = {10.1145/3149.214121},
  abstract   = {The consensus problem involves an asynchronous system of processes, some of which may be unreliable. The problem is for the reliable processes to agree on a binary value. In this paper, it is shown that every protocol for this problem has the possibility of nontermination, even with only one faulty process. By way of contrast, solutions are known for the synchronous case, the “Byzantine Generals” problem.},
  journal    = {J. ACM},
  month      = apr,
  pages      = {374–382},
  numpages   = {9}
}

@inproceedings{HotStuff,
  author    = {Yin, Maofan and Malkhi, Dahlia and Reiter, Michael K. and Gueta, Guy Golan and Abraham, Ittai},
  title     = {HotStuff: BFT Consensus with Linearity and Responsiveness},
  year      = {2019},
  isbn      = {9781450362177},
  publisher = {Association for Computing Machinery},
  address   = {New York, NY, USA},
  url       = {https://doi.org/10.1145/3293611.3331591},
  doi       = {10.1145/3293611.3331591},
  abstract  = {We present HotStuff, a leader-based Byzantine fault-tolerant replication protocol for the partially synchronous model. Once network communication becomes synchronous, HotStuff enables a correct leader to drive the protocol to consensus at the pace of actual (vs. maximum) network delay--a property called responsiveness---and with communication complexity that is linear in the number of replicas. To our knowledge, HotStuff is the first partially synchronous BFT replication protocol exhibiting these combined properties. Its simplicity enables it to be further pipelined and simplified into a practical, concise protocol for building large-scale replication services.},
  booktitle = {Proceedings of the 2019 ACM Symposium on Principles of Distributed Computing},
  pages     = {347–356},
  numpages  = {10},
  keywords  = {scalability, responsiveness, consensus, byzantine fault tolerance, blockchain},
  location  = {Toronto ON, Canada},
  series    = {PODC '19}
}

@article{BitcoinBackboneProtocol,
  author     = {Garay, Juan and Kiayias, Aggelos and Leonardos, Nikos},
  title      = {The Bitcoin Backbone Protocol: Analysis and Applications},
  year       = {2024},
  issue_date = {August 2024},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {71},
  number     = {4},
  issn       = {0004-5411},
  url        = {https://doi.org/10.1145/3653445},
  doi        = {10.1145/3653445},
  abstract   = {Bitcoin is the first and most popular decentralized cryptocurrency to date. In this work, we extract and analyze the core of the Bitcoin protocol, which we term the Bitcoin backbone, and prove three of its fundamental properties which we call Common Prefix, Chain Quality, and Chain Growth in the static setting where the number of players remains fixed. Our proofs hinge on appropriate and novel assumptions on the “hashing power” of the protocol participants and their interplay with the protocol parameters and the time needed for reliable message passing between honest parties in terms of computational steps. A takeaway from our analysis is that, all else being equal, the protocol’s provable tolerance in terms of the number of adversarial parties (or, equivalently, their “hashing power” in our model) decreases as the duration of a message passing round increases.Next, we propose and analyze applications that can be built “on top” of the backbone protocol, specifically focusing on Byzantine agreement (BA) and on the notion of a public transaction ledger. Regarding BA, we observe that a proposal due to Nakamoto falls short of solving it, and present a simple alternative which works assuming that the adversary’s hashing power is bounded by 1/3. The public transaction ledger captures the essence of Bitcoin’s operation as a cryptocurrency, in the sense that it guarantees the liveness and persistence of committed transactions. Based on this notion, we describe and analyze the Bitcoin system as well as a more elaborate BA protocol and we prove them secure assuming the adversary’s hashing power is strictly less than 1/2. Instrumental to this latter result is a technique we call 2-for-1 proof-of-work (PoW) that has proven to be useful in the design of other PoW-based protocols.},
  journal    = {J. ACM},
  month      = aug,
  articleno  = {25},
  numpages   = {49},
  keywords   = {Blockchain protocols, proof of work, cryptocurrencies, consensus}
}

@article{ConcurrencyControlinDistributedDatabaseSystems,
  author     = {Bernstein, Philip A. and Goodman, Nathan},
  title      = {Concurrency Control in Distributed Database Systems},
  year       = {1981},
  issue_date = {June 1981},
  publisher  = {Association for Computing Machinery},
  address    = {New York, NY, USA},
  volume     = {13},
  number     = {2},
  issn       = {0360-0300},
  url        = {https://doi.org/10.1145/356842.356846},
  doi        = {10.1145/356842.356846},
  journal    = {ACM Comput. Surv.},
  month      = jun,
  pages      = {185–221},
  numpages   = {37}
}